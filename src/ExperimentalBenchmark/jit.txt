; Assembly listing for method CastHelpers:StelemRef(Array,int,Object)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  6,  5.50)     ref  ->  rcx         class-hnd
;  V01 arg1         [V01,T02] (  4,  4   )     int  ->  rdx        
;  V02 arg2         [V02,T01] (  6,  4.50)     ref  ->   r8         class-hnd
;  V03 loc0         [V03,T03] (  4,  2.50)   byref  ->  rax        
;  V04 loc1         [V04,T04] (  3,  2   )    long  ->  rdx        
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 40

G_M22649_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M22649_IG02:
       cmp      edx, dword ptr [rcx+8]
       jae      SHORT G_M22649_IG10
       movsxd   rdx, edx
       lea      rax, bword ptr [rcx+8*rdx+16]
       mov      rdx, qword ptr [rcx]
       mov      rdx, qword ptr [rdx+48]
       test     r8, r8
       je       SHORT G_M22649_IG06
						;; bbWeight=1    PerfScore 9.50
G_M22649_IG03:
       cmp      rdx, qword ptr [r8]
       jne      SHORT G_M22649_IG08
						;; bbWeight=0.50 PerfScore 1.50
G_M22649_IG04:
       mov      rcx, rax
       mov      rdx, r8
						;; bbWeight=0.50 PerfScore 0.25
G_M22649_IG05:
       add      rsp, 40
       jmp      CastHelpers:WriteBarrier(byref,Object)
						;; bbWeight=0.50 PerfScore 1.13
G_M22649_IG06:
       xor      rcx, rcx
       mov      gword ptr [rax], rcx
						;; bbWeight=0.50 PerfScore 0.63
G_M22649_IG07:
       add      rsp, 40
       ret      
						;; bbWeight=0.50 PerfScore 0.63
G_M22649_IG08:
       mov      r9, 0xD1FFAB1E
       cmp      qword ptr [rcx], r9
       je       SHORT G_M22649_IG04
       mov      rcx, rax
						;; bbWeight=0.50 PerfScore 1.75
G_M22649_IG09:
       add      rsp, 40
       jmp      CastHelpers:StelemRef_Helper(byref,long,Object)
						;; bbWeight=0.50 PerfScore 1.13
G_M22649_IG10:
       call     CORINFO_HELP_RNGCHKFAIL
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 92, prolog size 4, PerfScore 25.95, (MethodHash=93aaa786) for method CastHelpers:StelemRef(Array,int,Object)
; ============================================================

; Assembly listing for method CastHelpers:LdelemaRef(Array,int,long):byref
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  5,  5   )     ref  ->  rcx         class-hnd
;  V01 arg1         [V01,T01] (  4,  4   )     int  ->  rdx        
;  V02 arg2         [V02,T02] (  3,  3   )    long  ->   r8        
;  V03 loc0         [V03,T04] (  2,  1.50)   byref  ->  rax        
;  V04 loc1         [V04,T03] (  2,  2   )    long  ->  rdx        
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 40

G_M33592_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M33592_IG02:
       cmp      edx, dword ptr [rcx+8]
       jae      SHORT G_M33592_IG05
       movsxd   rax, edx
       lea      rax, bword ptr [rcx+8*rax+16]
       mov      rdx, qword ptr [rcx]
       mov      rdx, qword ptr [rdx+48]
       cmp      rdx, r8
       jne      SHORT G_M33592_IG04
						;; bbWeight=1    PerfScore 9.50
G_M33592_IG03:
       add      rsp, 40
       ret      
						;; bbWeight=0.50 PerfScore 0.63
G_M33592_IG04:
       add      rsp, 40
       jmp      CastHelpers:ThrowArrayMismatchException():byref
						;; bbWeight=0.50 PerfScore 1.13
G_M33592_IG05:
       call     CORINFO_HELP_RNGCHKFAIL
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 49, prolog size 4, PerfScore 16.40, (MethodHash=449e7cc7) for method CastHelpers:LdelemaRef(Array,int,long):byref
; ============================================================

; Assembly listing for method SpanHelpers:IndexOf(byref,ushort,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T02] (  9, 43.50)   byref  ->  rcx        
;  V01 arg1         [V01,T06] (  7, 14   )  ushort  ->  rdx        
;  V02 arg2         [V02,T11] (  4,  3.50)     int  ->   r8        
;  V03 loc0         [V03,T01] ( 28,140.50)    long  ->   r9        
;  V04 loc1         [V04,T00] ( 18,142   )    long  ->  rax        
;  V05 loc2         [V05,T08] (  5, 10   )   byref  ->   r8        
;  V06 loc3         [V06,T22] (  2,  4   )  simd16  ->  mm0        
;  V07 loc4         [V07,T23] (  2,  4   )  simd16  ->  mm1        
;  V08 loc5         [V08,T12] (  3,  4.50)     int  ->  r11        
;  V09 loc6         [V09,T21] (  2, 18   )  simd32  ->  mm0        
;  V10 loc7         [V10,T20] (  2, 32   )  simd32  ->  mm1        
;  V11 loc8         [V11,T04] (  3, 32.50)     int  ->   r8        
;  V12 loc9         [V12,T24] (  2,  4   )  simd16  ->  mm0        
;  V13 loc10        [V13,T25] (  2,  4   )  simd16  ->  mm1        
;  V14 loc11        [V14,T13] (  3,  4.50)     int  ->  rax        
;* V15 loc12        [V15    ] (  0,  0   )  simd16  ->  zero-ref   
;* V16 loc13        [V16    ] (  0,  0   )  simd16  ->  zero-ref   
;* V17 loc14        [V17    ] (  0,  0   )     int  ->  zero-ref   
;* V18 loc15        [V18    ] (  0,  0   )  simd16  ->  zero-ref   
;* V19 loc16        [V19    ] (  0,  0   )     int  ->  zero-ref    ld-addr-op
;* V20 loc17        [V20    ] (  0,  0   )  simd16  ->  zero-ref   
;* V21 loc18        [V21    ] (  0,  0   )  simd16  ->  zero-ref   
;* V22 loc19        [V22    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V23 loc20        [V23    ] (  0,  0   )  simd32  ->  zero-ref   
;* V24 loc21        [V24    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;# V25 OutArgs      [V25    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;* V26 tmp1         [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp2         [V27    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V28 tmp3         [V28    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V29 tmp4         [V29,T17] (  2,  1   )     int  ->  r10         "Inline return value spill temp"
;* V30 tmp5         [V30    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;* V31 tmp6         [V31    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V32 tmp7         [V32    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V33 tmp8         [V33,T18] (  2,  1   )     int  ->  rax         "Inline return value spill temp"
;* V34 tmp9         [V34    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;* V35 tmp10        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp11        [V36    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V37 tmp12        [V37,T19] (  2,  1   )     int  ->  rdx         "Inline return value spill temp"
;  V38 tmp13        [V38,T10] (  8,  8   )     int  ->  rax         "Single return block return value"
;  V39 tmp14        [V39,T14] (  2,  4   )    long  ->  r11         "Cast away GC"
;  V40 tmp15        [V40,T16] (  2,  2   )    long  ->  rax         "Cast away GC"
;  V41 tmp16        [V41,T07] (  2, 16   )    long  ->  r11         "Cast away GC"
;  V42 cse0         [V42,T09] (  3, 10   )   byref  ->  rax         "CSE - aggressive"
;  V43 cse1         [V43,T03] ( 13, 42   )     int  ->  r11         "CSE - aggressive"
;  V44 cse2         [V44,T05] (  7, 22   )    long  ->  r10         "CSE - aggressive"
;  V45 rat0         [V45,T15] (  3,  3   )     int  ->  rax         "ReplaceWithLclVar is creating a new local variable"
;
; Lcl frame size = 0

G_M36664_IG01:
       push     rsi
       vzeroupper 
						;; bbWeight=1    PerfScore 2.00
G_M36664_IG02:
       xor      r9, r9
       movsxd   r10, r8d
       mov      rax, r10
       mov      r11, rcx
       test     r11b, 1
       jne      SHORT G_M36664_IG05
						;; bbWeight=1    PerfScore 2.25
G_M36664_IG03:
       cmp      r8d, 16
       jl       SHORT G_M36664_IG05
       mov      rax, rcx
       neg      eax
       mov      r8d, eax
       shr      r8d, 31
       add      eax, r8d
       sar      eax, 1
       mov      eax, eax
       and      rax, 7
       cmp      rax, 4
       jl       SHORT G_M36664_IG06
						;; bbWeight=0.50 PerfScore 3.25
G_M36664_IG04:
       lea      r8, bword ptr [rcx+2*r9]
       movzx    r11, dx
       movzx    rsi, word  ptr [r8]
       cmp      r11d, esi
       je       G_M36664_IG24
       movzx    rsi, word  ptr [r8+2]
       cmp      r11d, esi
       je       G_M36664_IG23
       movzx    rsi, word  ptr [r8+4]
       cmp      r11d, esi
       je       G_M36664_IG22
       movzx    r8, word  ptr [r8+6]
       cmp      r11d, r8d
       je       G_M36664_IG21
       add      r9, 4
       add      rax, -4
						;; bbWeight=2    PerfScore 28.50
G_M36664_IG05:
       cmp      rax, 4
       jge      SHORT G_M36664_IG04
						;; bbWeight=16    PerfScore 20.00
G_M36664_IG06:
       test     rax, rax
       jle      SHORT G_M36664_IG08
       movzx    r11, dx
						;; bbWeight=4    PerfScore 6.00
G_M36664_IG07:
       movzx    r8, word  ptr [rcx+2*r9]
       cmp      r8d, r11d
       je       G_M36664_IG24
       inc      r9
       dec      rax
       test     rax, rax
       jg       SHORT G_M36664_IG07
						;; bbWeight=16    PerfScore 80.00
G_M36664_IG08:
       cmp      r9, r10
       jge      G_M36664_IG19
       lea      rax, bword ptr [rcx+2*r9]
       mov      r11, rax
       test     r11b, 31
       je       SHORT G_M36664_IG11
						;; bbWeight=4    PerfScore 13.00
G_M36664_IG09:
       movzx    r11, dx
       vmovd    xmm0, r11d
       vpbroadcastw xmm0, xmm0
       vmovupd  xmm1, xmmword ptr [rax]
       vpcmpeqw xmm0, xmm0, xmm1
       vpmovmskb r11d, xmm0
       test     r11d, r11d
       jne      SHORT G_M36664_IG10
       add      r9, 8
       jmp      SHORT G_M36664_IG11
						;; bbWeight=2    PerfScore 22.50
G_M36664_IG10:
       xor      r10d, r10d
       tzcnt    r10d, r11d
       shr      r10d, 1
       mov      edx, r10d
       mov      eax, edx
       add      eax, r9d
       jmp      G_M36664_IG25
						;; bbWeight=0.50 PerfScore 2.75
G_M36664_IG11:
       mov      rax, r10
       sub      rax, r9
       and      rax, -16
       jle      SHORT G_M36664_IG14
						;; bbWeight=4    PerfScore 7.00
G_M36664_IG12:
       movzx    r11, dx
       vmovd    xmm0, r11d
       vpbroadcastw ymm0, ymm0
						;; bbWeight=2    PerfScore 4.50
G_M36664_IG13:
       vmovupd  ymm1, ymmword ptr[rcx+2*r9]
       vpcmpeqw ymm1, ymm0, ymm1
       vpmovmskb r8d, ymm1
       test     r8d, r8d
       jne      SHORT G_M36664_IG16
       add      r9, 16
       add      rax, -16
       test     rax, rax
       jg       SHORT G_M36664_IG13
						;; bbWeight=16    PerfScore 136.00
G_M36664_IG14:
       mov      rax, r10
       sub      rax, r9
       and      rax, -8
       jle      SHORT G_M36664_IG18
						;; bbWeight=4    PerfScore 7.00
G_M36664_IG15:
       movzx    r11, dx
       vmovd    xmm0, r11d
       vpbroadcastw xmm0, xmm0
       vmovupd  xmm1, xmmword ptr [rcx+2*r9]
       vpcmpeqw xmm0, xmm0, xmm1
       vpmovmskb eax, xmm0
       test     eax, eax
       jne      SHORT G_M36664_IG17
       add      r9, 8
       jmp      SHORT G_M36664_IG18
						;; bbWeight=2    PerfScore 22.50
G_M36664_IG16:
       xor      eax, eax
       tzcnt    eax, r8d
       shr      eax, 1
       mov      r10d, eax
       mov      eax, r10d
       add      eax, r9d
       jmp      SHORT G_M36664_IG25
						;; bbWeight=0.50 PerfScore 2.75
G_M36664_IG17:
       xor      edx, edx
       tzcnt    edx, eax
       shr      edx, 1
       mov      ecx, edx
       mov      eax, ecx
       add      eax, r9d
       jmp      SHORT G_M36664_IG25
						;; bbWeight=0.50 PerfScore 2.75
G_M36664_IG18:
       cmp      r9, r10
       jge      SHORT G_M36664_IG19
       mov      rax, r10
       sub      rax, r9
       jmp      G_M36664_IG05
						;; bbWeight=4    PerfScore 15.00
G_M36664_IG19:
       mov      eax, -1
						;; bbWeight=0.50 PerfScore 0.13
G_M36664_IG20:
       vzeroupper 
       pop      rsi
       ret      
						;; bbWeight=0.50 PerfScore 1.25
G_M36664_IG21:
       lea      eax, [r9+3]
       jmp      SHORT G_M36664_IG25
						;; bbWeight=0.50 PerfScore 1.25
G_M36664_IG22:
       lea      eax, [r9+2]
       jmp      SHORT G_M36664_IG25
						;; bbWeight=0.50 PerfScore 1.25
G_M36664_IG23:
       lea      eax, [r9+1]
       jmp      SHORT G_M36664_IG25
						;; bbWeight=0.50 PerfScore 1.25
G_M36664_IG24:
       mov      eax, r9d
						;; bbWeight=0.50 PerfScore 0.13
G_M36664_IG25:
       vzeroupper 
       pop      rsi
       ret      
						;; bbWeight=0.50 PerfScore 1.25

; Total bytes of code 448, prolog size 4, PerfScore 430.05, (MethodHash=db3370c7) for method SpanHelpers:IndexOf(byref,ushort,int):int
; ============================================================

; Assembly listing for method Utf16Utility:GetPointerToFirstInvalidChar(long,int,byref,byref):long
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T01] ( 18, 34   )    long  ->  rdi        
;  V01 arg1         [V01,T00] ( 19, 37   )     int  ->  rsi        
;  V02 arg2         [V02,T12] (  4,  3   )   byref  ->  rbx        
;  V03 arg3         [V03,T13] (  4,  3   )   byref  ->  rbp        
;  V04 loc0         [V04,T16] (  3,  3   )     int  ->  rax        
;  V05 loc1         [V05,T02] ( 14, 29   )    long  ->  rax        
;  V06 loc2         [V06,T07] (  6,  9   )     int  ->  rdx        
;  V07 loc3         [V07,T21] (  2,  4.50)  simd16  ->  mm0        
;  V08 loc4         [V08,T22] (  2,  4.50)  simd16  ->  mm1        
;  V09 loc5         [V09,T23] (  2,  4.50)  simd16  ->  mm2        
;  V10 loc6         [V10,T24] (  2,  4.50)  simd16  ->  mm3        
;* V11 loc7         [V11    ] (  0,  0   )  simd16  ->  zero-ref   
;  V12 loc8         [V12,T18] (  7, 26   )  simd16  ->  mm4        
;  V13 loc9         [V13,T19] (  2,  8   )  simd16  ->  mm5        
;  V14 loc10        [V14,T20] (  2,  8   )  simd16  ->  mm6        
;  V15 loc11        [V15,T03] (  6, 20   )     int  ->  rcx        
;  V16 loc12        [V16,T06] (  4, 12   )     int  ->   r8        
;  V17 loc13        [V17,T10] (  3,  6   )     int  ->   r9        
;  V18 loc14        [V18,T14] (  2,  4   )     int  ->  r10        
;  V19 loc15        [V19,T04] (  7, 14   )     int  ->  rcx        
;  V20 loc16        [V20,T08] (  4,  8   )    long  ->  rcx        
;* V21 loc17        [V21    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V22 loc18        [V22    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V23 loc19        [V23    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V24 loc20        [V24    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V25 loc21        [V25    ] (  0,  0   )  simd32  ->  zero-ref   
;* V26 loc22        [V26    ] (  0,  0   )  simd32  ->  zero-ref   
;* V27 loc23        [V27    ] (  0,  0   )  simd32  ->  zero-ref   
;* V28 loc24        [V28    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V29 loc25        [V29    ] (  0,  0   )    long  ->  zero-ref   
;* V30 loc26        [V30    ] (  0,  0   )     int  ->  zero-ref   
;* V31 loc27        [V31    ] (  0,  0   )  simd32  ->  zero-ref   
;* V32 loc28        [V32    ] (  0,  0   )     int  ->  zero-ref   
;* V33 loc29        [V33    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V34 loc30        [V34    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V35 loc31        [V35    ] (  0,  0   )  ushort  ->  zero-ref   
;* V36 loc32        [V36    ] (  0,  0   )    long  ->  zero-ref   
;* V37 loc33        [V37    ] (  0,  0   )     int  ->  zero-ref   
;  V38 loc34        [V38,T05] (  6, 12   )     int  ->  rcx        
;  V39 OutArgs      [V39    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V40 tmp1         [V40    ] (  0,  0   )     int  ->  zero-ref   
;* V41 tmp2         [V41    ] (  0,  0   )     int  ->  zero-ref   
;* V42 tmp3         [V42    ] (  0,  0   )     int  ->  zero-ref   
;* V43 tmp4         [V43    ] (  0,  0   )  simd16  ->  zero-ref   
;  V44 tmp5         [V44,T17] (  2,  2   )    long  ->  rax         "Inline return value spill temp"
;* V45 tmp6         [V45    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V46 tmp7         [V46,T09] (  2,  8   )     int  ->   r8         "Inline return value spill temp"
;  V47 tmp8         [V47,T15] (  2,  4   )     int  ->  rcx         "Inline return value spill temp"
;  V48 cse0         [V48,T11] (  3,  6   )     int  ->   r9         "CSE - aggressive"
;
; Lcl frame size = 56

G_M59809_IG01:
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 56
       vzeroupper 
       vmovaps  qword ptr [rsp+20H], xmm6
       mov      rdi, rcx
       mov      esi, edx
       mov      rbx, r8
       mov      rbp, r9
						;; bbWeight=1    PerfScore 9.25
G_M59809_IG02:
       mov      edx, esi
       mov      rcx, rdi
       call     ASCIIUtility:GetIndexOfFirstNonAsciiChar_Sse2(long,long):long
       mov      edx, eax
       lea      rdi, [rdi+2*rdx]
       sub      esi, eax
       jne      SHORT G_M59809_IG05
						;; bbWeight=1    PerfScore 3.50
G_M59809_IG03:
       xor      rax, rax
       mov      qword ptr [rbx], rax
       mov      dword ptr [rbp], eax
       mov      rax, rdi
						;; bbWeight=0.50 PerfScore 1.25
G_M59809_IG04:
       vmovaps  xmm6, qword ptr [rsp+20H]
       add      rsp, 56
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 3.63
G_M59809_IG05:
       xor      rax, rax
       xor      edx, edx
       cmp      esi, 8
       jl       G_M59809_IG13
       vmovupd  xmm0, xmmword ptr [reloc @RWD16]
       vmovupd  xmm1, xmmword ptr [reloc @RWD48]
       vmovupd  xmm2, xmmword ptr [reloc @RWD80]
       vxorps   xmm3, xmm3, xmm3
						;; bbWeight=0.50 PerfScore 5.54
G_M59809_IG06:
       vmovdqu  xmm4, xmmword ptr [rdi]
       vpminuw  xmm5, xmm4, xmm0
       vpsrlw   xmm6, xmm4, 11
       vpsubw   xmm6, xmm3, xmm6
       vpor     xmm5, xmm5, xmm6
       vpmovmskb ecx, xmm5
       xor      r8d, r8d
       popcnt   r8d, ecx
       vpaddw   xmm4, xmm4, xmm1
       vpcmpgtw xmm5, xmm2, xmm4
       vpmovmskb ecx, xmm5
       test     ecx, ecx
       je       SHORT G_M59809_IG09
						;; bbWeight=4    PerfScore 42.00
G_M59809_IG07:
       vpsrlw   xmm4, xmm4, 3
       vpmovmskb r9d, xmm4
       mov      r10d, r9d
       and      r10d, ecx
       xor      r9d, 0x5555
       and      ecx, r9d
       shl      ecx, 2
       movzx    r9, cx
       cmp      r9d, r10d
       jne      G_M59809_IG13
       cmp      ecx, 0xFFFF
       jbe      SHORT G_M59809_IG08
       mov      ecx, r9d
       add      r8d, -2
       add      rdi, -2
       inc      esi
						;; bbWeight=2    PerfScore 17.50
G_M59809_IG08:
       popcnt   ecx, ecx
       sub      edx, ecx
       sub      rax, rcx
       sub      rax, rcx
						;; bbWeight=2    PerfScore 5.50
G_M59809_IG09:
       mov      ecx, r8d
       add      rax, rcx
       add      rdi, 16
       add      esi, -8
       cmp      esi, 8
       jge      G_M59809_IG06
						;; bbWeight=4    PerfScore 9.00
G_M59809_IG10:
       test     esi, esi
       jle      SHORT G_M59809_IG14
						;; bbWeight=0.50 PerfScore 0.63
G_M59809_IG11:
       movzx    rcx, word  ptr [rdi]
       cmp      ecx, 127
       jbe      SHORT G_M59809_IG12
       lea      r8d, [rcx+0001F800H]
       shr      r8d, 16
       add      rax, r8
       add      ecx, -0xD800
       cmp      ecx, 0x7FF
       ja       SHORT G_M59809_IG12
       add      rax, -2
       cmp      esi, 1
       je       SHORT G_M59809_IG14
       mov      ecx, dword ptr [rdi]
       add      ecx, 0xD1FFAB1E
       test     ecx, 0xD1FFAB1E
       jne      SHORT G_M59809_IG14
       dec      edx
       add      rax, 2
       add      rdi, 2
       dec      esi
						;; bbWeight=2    PerfScore 27.00
G_M59809_IG12:
       add      rdi, 2
       dec      esi
						;; bbWeight=2    PerfScore 1.00
G_M59809_IG13:
       test     esi, esi
       jg       SHORT G_M59809_IG11
						;; bbWeight=4    PerfScore 5.00
G_M59809_IG14:
       mov      qword ptr [rbx], rax
       mov      dword ptr [rbp], edx
       mov      rax, rdi
						;; bbWeight=0.50 PerfScore 1.13
G_M59809_IG15:
       vmovaps  xmm6, qword ptr [rsp+20H]
       add      rsp, 56
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 3.63
RWD00  db	000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
RWD16  db	080h, 000h, 080h, 000h, 080h, 000h, 080h, 000h, 080h, 000h, 080h, 000h, 080h, 000h, 080h, 000h
RWD32  db	000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
RWD48  db	000h, 0A8h, 000h, 0A8h, 000h, 0A8h, 000h, 0A8h, 000h, 0A8h, 000h, 0A8h, 000h, 0A8h, 000h, 0A8h
RWD64  db	000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h, 000h
RWD80  db	000h, 088h, 000h, 088h, 000h, 088h, 000h, 088h, 000h, 088h, 000h, 088h, 000h, 088h, 000h, 088h


; Total bytes of code 372, prolog size 28, PerfScore 174.44, (MethodHash=c4d2165e) for method Utf16Utility:GetPointerToFirstInvalidChar(long,int,byref,byref):long
; ============================================================

; Assembly listing for method Sse41:get_IsSupported():bool
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;# V00 OutArgs      [V00    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M12488_IG01:
       push     rbp
       mov      rbp, rsp
						;; bbWeight=1    PerfScore 1.25
G_M12488_IG02:
       mov      eax, 1
						;; bbWeight=1    PerfScore 0.25
G_M12488_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 11, prolog size 4, PerfScore 4.10, (MethodHash=6da8cf37) for method Sse41:get_IsSupported():bool
; ============================================================

; Assembly listing for method ASCIIUtility:NarrowUtf16ToAscii(long,long,long):long
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T03] (  7,  8   )    long  ->  rdi        
;  V01 arg1         [V01,T02] (  8,  8.50)    long  ->  rsi        
;  V02 arg2         [V02,T05] (  5,  4   )    long  ->  rbx        
;  V03 loc0         [V03,T00] ( 24, 30.50)    long  ->  rbp        
;  V04 loc1         [V04,T04] ( 14,  7   )     int  ->  r15        
;* V05 loc2         [V05    ] (  0,  0   )     int  ->  zero-ref   
;  V06 loc3         [V06,T01] (  7, 14   )    long  ->  r14        
;  V07 loc4         [V07,T09] (  5,  2.50)    long  ->  rbx        
;* V08 loc5         [V08    ] (  0,  0   )     int  ->  zero-ref   
;* V09 loc6         [V09    ] (  0,  0   )  simd32  ->  zero-ref    ld-addr-op
;* V10 loc7         [V10    ] (  0,  0   )    long  ->  zero-ref   
;* V11 loc8         [V11    ] (  0,  0   )  simd32  ->  zero-ref   
;* V12 loc9         [V12    ] (  0,  0   )  simd32  ->  zero-ref   
;* V13 loc10        [V13    ] (  0,  0   )  simd32  ->  zero-ref   
;  V14 loc11        [V14,T06] (  2,  4.50)    long  ->  rax        
;  V15 OutArgs      [V15    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V16 tmp1         [V16    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;* V17 tmp2         [V17    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V18 tmp3         [V18,T10] (  3, 12   )  simd16  ->  mm0         "Inline stloc first use temp"
;  V19 tmp4         [V19,T11] (  2,  8   )  simd16  ->  mm0         "Inline stloc first use temp"
;* V20 tmp5         [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp6         [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp7         [V22    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V23 tmp8         [V23    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V24 tmp9         [V24,T07] (  3,  3   )   byref  ->  rax         "Inlining Arg"
;  V25 tmp10        [V25,T08] (  3,  3   )   byref  ->  rcx         "Inlining Arg"
;
; Lcl frame size = 40

G_M50167_IG01:
       push     r15
       push     r14
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 40
       vzeroupper 
       mov      rdi, rcx
       mov      rsi, rdx
       mov      rbx, r8
						;; bbWeight=1    PerfScore 8.00
G_M50167_IG02:
       xor      rbp, rbp
       cmp      rbx, 32
       jb       SHORT G_M50167_IG05
						;; bbWeight=1    PerfScore 1.50
G_M50167_IG03:
       mov      r14, qword ptr [rdi]
       mov      rcx, 0xD1FFAB1E
       test     r14, rcx
       jne      G_M50167_IG11
						;; bbWeight=0.50 PerfScore 1.75
G_M50167_IG04:
       mov      rcx, rdi
       mov      rdx, rsi
       mov      r8, rbx
       call     ASCIIUtility:NarrowUtf16ToAscii_Sse2(long,long,long):long
       mov      rbp, rax
						;; bbWeight=0.50 PerfScore 1.00
G_M50167_IG05:
       sub      rbx, rbp
       cmp      rbx, 4
       jb       SHORT G_M50167_IG07
       lea      rax, [rbp+rbx-4]
						;; bbWeight=0.50 PerfScore 1.75
G_M50167_IG06:
       mov      r14, qword ptr [rdi+2*rbp]
       mov      rcx, 0xD1FFAB1E
       test     r14, rcx
       jne      SHORT G_M50167_IG11
       vmovd    xmm0, r14
       vpackuswb xmm0, xmm0, xmm0
       vmovd    ecx, xmm0
       mov      dword ptr [rsi+rbp], ecx
       add      rbp, 4
       cmp      rbp, rax
       jbe      SHORT G_M50167_IG06
						;; bbWeight=4    PerfScore 36.00
G_M50167_IG07:
       test     bl, 2
       je       SHORT G_M50167_IG08
       mov      r15d, dword ptr [rdi+2*rbp]
       test     r15d, 0xD1FFAB1E
       jne      SHORT G_M50167_IG12
       lea      rax, [rsi+rbp]
       mov      byte  ptr [rax], r15b
       shr      r15d, 16
       mov      byte  ptr [rax+1], r15b
       add      rbp, 2
						;; bbWeight=0.50 PerfScore 4.63
G_M50167_IG08:
       test     bl, 1
       je       SHORT G_M50167_IG09
       movzx    r15, word  ptr [rdi+2*rbp]
       cmp      r15d, 127
       ja       SHORT G_M50167_IG09
       mov      byte  ptr [rsi+rbp], r15b
       inc      rbp
						;; bbWeight=0.50 PerfScore 2.88
G_M50167_IG09:
       mov      rax, rbp
						;; bbWeight=1    PerfScore 0.25
G_M50167_IG10:
       add      rsp, 40
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r14
       pop      r15
       ret      
						;; bbWeight=1    PerfScore 4.25
G_M50167_IG11:
       mov      r15d, r14d
       test     r15d, 0xD1FFAB1E
       jne      SHORT G_M50167_IG12
       lea      rcx, [rsi+rbp]
       mov      byte  ptr [rcx], r15b
       mov      eax, r15d
       shr      eax, 16
       mov      byte  ptr [rcx+1], al
       shr      r14, 32
       mov      r15d, r14d
       add      rbp, 2
						;; bbWeight=0.50 PerfScore 4.38
G_M50167_IG12:
       mov      ecx, r15d
       call     ASCIIUtility:FirstCharInUInt32IsAscii(int):bool
       test     eax, eax
       je       SHORT G_M50167_IG09
       mov      byte  ptr [rsi+rbp], r15b
       inc      rbp
       jmp      SHORT G_M50167_IG09
						;; bbWeight=0.50 PerfScore 2.88

; Total bytes of code 265, prolog size 24, PerfScore 95.95, (MethodHash=90d73c08) for method ASCIIUtility:NarrowUtf16ToAscii(long,long,long):long
; ============================================================

; Assembly listing for method Program:Main(ref)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;  V01 loc0         [V01,T01] (  3,  6   )     ref  ->  rsi         class-hnd exact
;  V02 loc1         [V02,T00] (  4, 13   )     int  ->  rdi        
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04,T02] (  2,  4   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 40

G_M59663_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
						;; bbWeight=1    PerfScore 2.25
G_M59663_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rsi, rax
       mov      rcx, rsi
       call     StructVectorClone:Setup():this
       xor      edi, edi
						;; bbWeight=1    PerfScore 3.00
G_M59663_IG03:
       mov      rcx, rsi
       call     StructVectorClone:Parse():this
       inc      edi
       cmp      edi, 0xD1FFAB1E
       jl       SHORT G_M59663_IG03
						;; bbWeight=4    PerfScore 11.00
G_M59663_IG04:
       add      rsp, 40
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.25

; Total bytes of code 59, prolog size 6, PerfScore 24.40, (MethodHash=c8bc16f0) for method Program:Main(ref)
; ============================================================

; Assembly listing for method StructVectorClone:Setup():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;  V03 tmp2         [V03    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M5951_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp-10H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M5951_IG02:
       mov      rcx, 0xD1FFAB1E
       mov      edx, 0x400
       call     CORINFO_HELP_NEWARR_1_VC
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, rax
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       call     ScalarTable:.ctor():this
       mov      rcx, gword ptr [rbp-08H]
       mov      edx, 1
       mov      rax, gword ptr [rbp-08H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+64]
       call     qword ptr [rax+56]ScalarTable:set_A(int):this
       mov      rcx, gword ptr [rbp-08H]
       mov      edx, 2
       mov      rax, gword ptr [rbp-08H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+72]
       call     qword ptr [rax+8]ScalarTable:set_B(int):this
       mov      rcx, gword ptr [rbp-08H]
       mov      edx, 3
       mov      rax, gword ptr [rbp-08H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+72]
       call     qword ptr [rax+24]ScalarTable:set_C(int):this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp-10H]
       call     Struct:.ctor():this
       mov      rcx, gword ptr [rbp-08H]
       mov      rdx, gword ptr [rbp-10H]
       mov      rax, gword ptr [rbp-08H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+64]
       call     qword ptr [rax+40]ScalarTable:set_Struct(Struct):this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+16]
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, gword ptr [rbp+10H]
       call     StructVectorClone:Serialize():int:this
       nop      
						;; bbWeight=1    PerfScore 56.25
G_M5951_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 240, prolog size 20, PerfScore 87.25, (MethodHash=9f14e8c0) for method StructVectorClone:Setup():this
; ============================================================

; Assembly listing for method ScalarTable:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M25833_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M25833_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M25833_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 30, prolog size 10, PerfScore 10.00, (MethodHash=c7af9b16) for method ScalarTable:.ctor():this
; ============================================================

; Assembly listing for method ScalarTable:set_A(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M9506_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M9506_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+16], edx
						;; bbWeight=1    PerfScore 3.00
G_M9506_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=5d5bdadd) for method ScalarTable:set_A(int):this
; ============================================================

; Assembly listing for method ScalarTable:set_B(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M43809_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M43809_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+20], edx
						;; bbWeight=1    PerfScore 3.00
G_M43809_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=dfbb54de) for method ScalarTable:set_B(int):this
; ============================================================

; Assembly listing for method ScalarTable:set_C(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M28320_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M28320_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+24], edx
						;; bbWeight=1    PerfScore 3.00
G_M28320_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=2405915f) for method ScalarTable:set_C(int):this
; ============================================================

; Assembly listing for method Struct:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M51438_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 4.00
G_M51438_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       mov      rdx, gword ptr [rbp+10H]
       call     IntVector:.ctor(Struct):this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 11.00
G_M51438_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 85, prolog size 16, PerfScore 25.50, (MethodHash=af3c3711) for method Struct:.ctor():this
; ============================================================

; Assembly listing for method IntVector:.ctor(Struct):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M20740_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.75
G_M20740_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp+18H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 5.75
G_M20740_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 51, prolog size 10, PerfScore 16.60, (MethodHash=a9f2aefb) for method IntVector:.ctor(Struct):this
; ============================================================

; Assembly listing for method ScalarTable:set_Struct(Struct):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M50992_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.25
G_M50992_IG02:
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp+18H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 3.75
G_M50992_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 32, prolog size 4, PerfScore 11.70, (MethodHash=fd5f38cf) for method ScalarTable:set_Struct(Struct):this
; ============================================================

; Assembly listing for method StructVectorClone:Serialize():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init "argument with side effect"
;
; Lcl frame size = 48

G_M13863_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 4.00
G_M13863_IG02:
       call     ScalarTable:get_Serializer():ISerializer`1
       mov      gword ptr [rbp-08H], rax
       mov      rdx, gword ptr [rbp-08H]
       mov      r9, gword ptr [rbp+10H]
       mov      r9, gword ptr [r9+16]
       mov      r8, gword ptr [rbp+10H]
       mov      r8, gword ptr [r8+8]
       mov      rcx, 0xD1FFAB1E
       call     ISerializerExtensions:Write(ISerializer`1,ref,__Canon):int
       nop      
						;; bbWeight=1    PerfScore 10.50
G_M13863_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 71, prolog size 16, PerfScore 23.60, (MethodHash=56f1c9d8) for method StructVectorClone:Serialize():int:this
; ============================================================

; Assembly listing for method ScalarTable:get_Serializer():ISerializer`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M16858_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
						;; bbWeight=1    PerfScore 1.75
G_M16858_IG02:
       mov      rcx, 0xD1FFAB1E
       mov      edx, 4
       call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       mov      rax, 0xD1FFAB1E
       mov      rax, gword ptr [rax]
						;; bbWeight=1    PerfScore 3.75
G_M16858_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 49, prolog size 10, PerfScore 12.40, (MethodHash=354fbe25) for method ScalarTable:get_Serializer():ISerializer`1
; ============================================================

; Assembly listing for method ScalarTable:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V01 tmp1         [V01    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M18294_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 3.00
G_M18294_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       call     GeneratedSerializer:.ctor():this
       mov      rdx, gword ptr [rbp-08H]
       mov      rcx, 0xD1FFAB1E
       call     ISerializerExtensions:AsISerializer(IGeneratedSerializer`1):ISerializer`1
       mov      rcx, 0xD1FFAB1E
       mov      rdx, rax
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 8.25
G_M18294_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 88, prolog size 16, PerfScore 22.05, (MethodHash=f0f0b889) for method ScalarTable:.cctor()
; ============================================================

; Assembly listing for method GeneratedSerializer:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M23762_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M23762_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M23762_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 30, prolog size 10, PerfScore 10.00, (MethodHash=f324a32d) for method GeneratedSerializer:.ctor():this
; ============================================================

; Assembly listing for method ISerializerExtensions:AsISerializer(IGeneratedSerializer`1):ISerializer`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 TypeCtx      [V00    ] (  1,  1   )    long  ->  [rbp+0x10]  
;  V01 arg0         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )    long  ->  [rbp-0x10]   "spilling Runtime Lookup tree"
;  V04 tmp2         [V04    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init class-hnd "dup spill"
;  V05 tmp3         [V05    ] (  1,  1   )     ref  ->  [rbp-0x20]   must-init
;  V06 tmp4         [V06    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init
;  V07 tmp5         [V07    ] (  1,  1   )     ref  ->  [rbp-0x30]   must-init
;  V08 tmp6         [V08    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init class-hnd exact "NewObj constructor temp"
;  V09 tmp7         [V09    ] (  1,  1   )    long  ->  [rbp-0x40]   "spilling Runtime Lookup tree"
;  V10 tmp8         [V10    ] (  1,  1   )    long  ->  [rbp-0x48]   "spilling Runtime Lookup tree"
;  V11 tmp9         [V11    ] (  1,  1   )     ref  ->  [rbp-0x50]   must-init class-hnd exact "NewObj constructor temp"
;  V12 tmp10        [V12    ] (  1,  1   )    long  ->  [rbp-0x58]   "spilling Runtime Lookup tree"
;  V13 tmp11        [V13    ] (  1,  1   )     ref  ->  [rbp-0x60]   must-init "argument with side effect"
;
; Lcl frame size = 144

G_M38700_IG01:
       push     rbp
       sub      rsp, 144
       lea      rbp, [rsp+90H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-60H], xmm4
       vmovdqa  xmmword ptr [rbp-50H], xmm4
       vmovdqa  xmmword ptr [rbp-40H], xmm4
       vmovdqa  xmmword ptr [rbp-30H], xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       mov      qword ptr [rbp-08H], rcx
       mov      qword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 10.08
G_M38700_IG02:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M38700_IG04
						;; bbWeight=1    PerfScore 6.00
G_M38700_IG03:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-10H], rcx
       jmp      SHORT G_M38700_IG05
						;; bbWeight=0.50 PerfScore 4.00
G_M38700_IG04:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-10H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M38700_IG05:
       mov      rcx, qword ptr [rbp-10H]
       call     CORINFO_HELP_GETGENERICS_GCSTATIC_BASE
       mov      rcx, gword ptr [rax+8]
       mov      gword ptr [rbp-18H], rcx
       mov      rcx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-20H], rcx
       xor      rcx, rcx
       mov      gword ptr [rbp-28H], rcx
       mov      rcx, gword ptr [rbp-18H]
       mov      gword ptr [rbp-30H], rcx
       cmp      gword ptr [rbp-18H], 0
       jne      G_M38700_IG12
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M38700_IG07
						;; bbWeight=1    PerfScore 18.25
G_M38700_IG06:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-48H], rcx
       jmp      SHORT G_M38700_IG08
						;; bbWeight=0.50 PerfScore 4.00
G_M38700_IG07:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-48H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M38700_IG08:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-50H], rax
       mov      rcx, qword ptr [rbp-48H]
       call     CORINFO_HELP_GETGENERICS_GCSTATIC_BASE
       mov      rdx, gword ptr [rax]
       mov      gword ptr [rbp-60H], rdx
       mov      rdx, gword ptr [rbp-60H]
       mov      r8, 0xD1FFAB1E
       mov      rcx, gword ptr [rbp-50H]
       call     MulticastDelegate:CtorClosed(Object,long):this
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M38700_IG10
						;; bbWeight=1    PerfScore 16.50
G_M38700_IG09:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-58H], rcx
       jmp      SHORT G_M38700_IG11
						;; bbWeight=0.50 PerfScore 4.00
G_M38700_IG10:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-58H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M38700_IG11:
       mov      rcx, qword ptr [rbp-58H]
       call     CORINFO_HELP_GETGENERICS_GCSTATIC_BASE
       lea      rcx, bword ptr [rax+8]
       mov      rdx, gword ptr [rbp-50H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, gword ptr [rbp-50H]
       mov      gword ptr [rbp-30H], rcx
						;; bbWeight=1    PerfScore 6.50
G_M38700_IG12:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+24], 0
       je       SHORT G_M38700_IG14
						;; bbWeight=1    PerfScore 6.00
G_M38700_IG13:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+24]
       mov      qword ptr [rbp-40H], rcx
       jmp      SHORT G_M38700_IG15
						;; bbWeight=0.50 PerfScore 4.00
G_M38700_IG14:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-40H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M38700_IG15:
       mov      rcx, qword ptr [rbp-40H]
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-38H], rax
       xor      rcx, rcx
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, gword ptr [rbp-38H]
       mov      rdx, gword ptr [rbp-20H]
       mov      r8, gword ptr [rbp-28H]
       mov      r9, gword ptr [rbp-30H]
       call     GeneratedSerializerWrapper`1:.ctor(IGeneratedSerializer`1,Assembly,Func`1,ref):this
       mov      rax, gword ptr [rbp-38H]
						;; bbWeight=1    PerfScore 10.25
G_M38700_IG16:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 470, prolog size 49, PerfScore 145.68, (MethodHash=fa4f68d3) for method ISerializerExtensions:AsISerializer(IGeneratedSerializer`1):ISerializer`1
; ============================================================

; Assembly listing for method <>c__0`1:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 TypeCtx      [V00    ] (  1,  1   )    long  ->  [rbp+0x10]  
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M9446_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rcx
       mov      qword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M9446_IG02:
       mov      rcx, qword ptr [rbp+10H]
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp-10H]
       call     <>c__0`1:.ctor():this
       mov      rcx, qword ptr [rbp+10H]
       call     CORINFO_HELP_GETGENERICS_GCSTATIC_BASE
       mov      rdx, gword ptr [rbp-10H]
       mov      rcx, rax
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 9.50
G_M9446_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 74, prolog size 20, PerfScore 23.90, (MethodHash=5e90db19) for method <>c__0`1:.cctor()
; ============================================================

; Assembly listing for method <>c__0`1:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M65145_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M65145_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M65145_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 30, prolog size 10, PerfScore 10.00, (MethodHash=6bbc0186) for method <>c__0`1:.ctor():this
; ============================================================

; Assembly listing for method GeneratedSerializerWrapper`1:.ctor(IGeneratedSerializer`1,Assembly,Func`1,ref):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 arg2         [V02    ] (  1,  1   )     ref  ->  [rbp+0x20]   class-hnd
;  V03 arg3         [V03    ] (  1,  1   )     ref  ->  [rbp+0x28]   class-hnd
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 loc0         [V05    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init class-hnd exact "NewObj constructor temp"
;  V08 tmp2         [V08    ] (  1,  1   )     ref  ->  [rbp-0x20]   must-init
;  V09 tmp3         [V09    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init
;  V10 tmp4         [V10    ] (  1,  1   )  struct ( 8) [rbp-0x30]   do-not-enreg[SB] must-init "struct address for call/obj"
;  V11 tmp5         [V11    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init
;  V12 tmp6         [V12    ] (  1,  1   )     ref  ->  [rbp-0x40]   must-init
;  V13 tmp7         [V13    ] (  1,  1   )     ref  ->  [rbp-0x48]   must-init
;  V14 tmp8         [V14    ] (  1,  1   )     ref  ->  [rbp-0x50]   must-init class-hnd exact "NewObj constructor temp"
;  V15 tmp9         [V15    ] (  1,  1   )     ref  ->  [rbp-0x58]   must-init "argument with side effect"
;  V16 tmp10        [V16    ] (  1,  1   )     ref  ->  [rbp-0x60]   must-init "argument with side effect"
;
; Lcl frame size = 128

G_M18479_IG01:
       push     rbp
       sub      rsp, 128
       lea      rbp, [rsp+80H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-60H], xmm4
       vmovdqa  xmmword ptr [rbp-50H], xmm4
       vmovdqa  xmmword ptr [rbp-40H], xmm4
       vmovdqa  xmmword ptr [rbp-30H], xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rcx
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
       mov      gword ptr [rbp+20H], r8
       mov      gword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 13.33
G_M18479_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-18H], rax
       mov      rcx, gword ptr [rbp-18H]
       mov      rdx, gword ptr [rbp+28H]
       call     Lazy`1:.ctor(Func`1):this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+16]
       mov      rdx, gword ptr [rbp-18H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+48]
       mov      rdx, gword ptr [rbp+20H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+56]
       mov      rdx, gword ptr [rbp+30H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rdx, gword ptr [rbp+10H]
       mov      gword ptr [rbp-20H], rdx
       mov      rdx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-28H], rdx
       cmp      gword ptr [rbp+18H], 0
       jne      SHORT G_M18479_IG04
						;; bbWeight=1    PerfScore 23.75
G_M18479_IG03:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-50H], rax
       mov      ecx, 593
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      gword ptr [rbp-58H], rax
       mov      rdx, gword ptr [rbp-58H]
       mov      rcx, gword ptr [rbp-50H]
       call     ArgumentNullException:.ctor(String):this
       mov      rcx, gword ptr [rbp-50H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M18479_IG04:
       mov      rdx, gword ptr [rbp-20H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp-28H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx]
       mov      rcx, qword ptr [rcx+48]
       mov      rcx, qword ptr [rcx]
       mov      rcx, qword ptr [rcx]
       call     CORINFO_HELP_TYPEHANDLE_TO_RUNTIMETYPEHANDLE
       mov      gword ptr [rbp-30H], rax
       mov      rcx, gword ptr [rbp-30H]
       call     Type:GetTypeFromHandle(RuntimeTypeHandle):Type
       mov      gword ptr [rbp-60H], rax
       mov      rdx, gword ptr [rbp-60H]
       mov      rcx, 0xD1FFAB1E
       call     CustomAttributeExtensions:GetCustomAttribute(MemberInfo):__Canon
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp+10H]
       mov      gword ptr [rbp-38H], rcx
       cmp      gword ptr [rbp-10H], 0
       jne      SHORT G_M18479_IG05
       mov      rcx, gword ptr [rbp-38H]
       mov      gword ptr [rbp-40H], rcx
       xor      rcx, rcx
       mov      gword ptr [rbp-48H], rcx
       jmp      SHORT G_M18479_IG06
						;; bbWeight=1    PerfScore 30.00
G_M18479_IG05:
       mov      rcx, gword ptr [rbp-38H]
       mov      gword ptr [rbp-40H], rcx
       mov      rcx, gword ptr [rbp-10H]
       call     FlatBufferTableAttribute:get_FileIdentifier():String:this
       mov      gword ptr [rbp-48H], rax
						;; bbWeight=1    PerfScore 5.00
G_M18479_IG06:
       mov      rdx, gword ptr [rbp-40H]
       lea      rcx, bword ptr [rdx+40]
       mov      rdx, gword ptr [rbp-48H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 3.75
G_M18479_IG07:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 406, prolog size 55, PerfScore 119.03, (MethodHash=874bb7d0) for method GeneratedSerializerWrapper`1:.ctor(IGeneratedSerializer`1,Assembly,Func`1,ref):this
; ============================================================

; Assembly listing for method FlatBufferTableAttribute:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M4068_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M4068_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Attribute:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M4068_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 30, prolog size 10, PerfScore 10.00, (MethodHash=124bf01b) for method FlatBufferTableAttribute:.ctor():this
; ============================================================

; Assembly listing for method FlatBufferTableAttribute:get_FileIdentifier():String:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M53507_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M53507_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      rax, gword ptr [rax+8]
						;; bbWeight=1    PerfScore 3.00
G_M53507_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 18, prolog size 4, PerfScore 8.55, (MethodHash=3c562efc) for method FlatBufferTableAttribute:get_FileIdentifier():String:this
; ============================================================

; Assembly listing for method ISerializerExtensions:Write(ISerializer`1,ref,__Canon):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 TypeCtx      [V00    ] (  1,  1   )    long  ->  [rbp+0x10]  
;  V01 arg0         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 arg1         [V02    ] (  1,  1   )     ref  ->  [rbp+0x20]   class-hnd
;  V03 arg2         [V03    ] (  1,  1   )     ref  ->  [rbp+0x28]   class-hnd
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V05 tmp1         [V05    ] (  1,  1   )  struct (16) [rbp-0x18]   do-not-enreg[XSB] must-init addr-exposed "bubbling QMark1"
;  V06 tmp2         [V06    ] (  1,  1   )    long  ->  [rbp-0x20]   "spilling Runtime Lookup tree"
;  V07 tmp3         [V07    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V08 tmp4         [V08    ] (  1,  1   )    long  ->  [rbp-0x38]   "argument with side effect"
;  V09 tmp5         [V09    ] (  1,  1   )     ref  ->  [rbp-0x40]   must-init "argument with side effect"
;
; Lcl frame size = 96

G_M63314_IG01:
       push     rbp
       sub      rsp, 96
       vzeroupper 
       lea      rbp, [rsp+60H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-40H], xmm4
       vmovdqa  xmmword ptr [rbp-30H], xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rcx
       mov      qword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
       mov      gword ptr [rbp+20H], r8
       mov      gword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 12.33
G_M63314_IG02:
       lea      rcx, [rbp-18H]
       mov      rdx, gword ptr [rbp+20H]
       call     MemoryExtensions:AsSpan(ref):Span`1
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M63314_IG04
						;; bbWeight=1    PerfScore 8.50
G_M63314_IG03:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-20H], rcx
       jmp      SHORT G_M63314_IG05
						;; bbWeight=0.50 PerfScore 4.00
G_M63314_IG04:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-20H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M63314_IG05:
       mov      rcx, qword ptr [rbp-20H]
       mov      qword ptr [rbp-38H], rcx
       mov      rcx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-40H], rcx
						;; bbWeight=1    PerfScore 4.00
G_M63314_IG06:
       vmovdqu  xmm0, xmmword ptr [rbp-18H]
       vmovdqu  xmmword ptr [rbp-30H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M63314_IG07:
       mov      rcx, qword ptr [rbp-38H]
       mov      rdx, gword ptr [rbp-40H]
       lea      r8, bword ptr [rbp-30H]
       mov      r9, gword ptr [rbp+28H]
       call     ISerializerExtensions:Write(ISerializer`1,Span`1,__Canon):int
       nop      
						;; bbWeight=1    PerfScore 4.75
G_M63314_IG08:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 181, prolog size 42, PerfScore 57.91, (MethodHash=e2ff08ad) for method ISerializerExtensions:Write(ISerializer`1,ref,__Canon):int
; ============================================================

; Assembly listing for method MemoryExtensions:AsSpan(ref):Span`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 RetBuf       [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]  
;  V01 arg0         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "NewObj constructor temp"
;
; Lcl frame size = 48

G_M13570_IG01:
       push     rbp
       push     rdi
       push     rsi
       sub      rsp, 48
       vzeroupper 
       lea      rbp, [rsp+40H]
       xor      rax, rax
       mov      qword ptr [rbp-20H], rax
       mov      bword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 8.00
G_M13570_IG02:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rbp-20H], xmm0
       lea      rcx, bword ptr [rbp-20H]
       mov      rdx, gword ptr [rbp+18H]
       call     Span`1:.ctor(ref):this
       mov      rdi, bword ptr [rbp+10H]
       lea      rsi, bword ptr [rbp-20H]
       call     CORINFO_HELP_ASSIGN_BYREF
       movsq    
       mov      rax, bword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 8.33
G_M13570_IG03:
       lea      rsp, [rbp-10H]
       pop      rsi
       pop      rdi
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 78, prolog size 21, PerfScore 27.33, (MethodHash=85c0cafd) for method MemoryExtensions:AsSpan(ref):Span`1
; ============================================================

; Assembly listing for method ISerializerExtensions:Write(ISerializer`1,Span`1,__Canon):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 TypeCtx      [V00    ] (  1,  1   )    long  ->  [rbp+0x10]  
;  V01 arg0         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 arg1         [V02    ] (  1,  1   )   byref  ->  [rbp+0x20]  
;  V03 arg2         [V03    ] (  1,  1   )     ref  ->  [rbp+0x28]   class-hnd
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V05 tmp1         [V05    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init "Reusable Box Helper"
;  V06 tmp2         [V06    ] (  1,  1   )    long  ->  [rbp-0x18]   "spilling Runtime Lookup tree"
;  V07 tmp3         [V07    ] (  1,  1   )    long  ->  [rbp-0x20]   "VirtualCall with runtime lookup"
;  V08 tmp4         [V08    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V09 tmp5         [V09    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init "argument with side effect"
;  V10 tmp6         [V10    ] (  1,  1   )    long  ->  [rbp-0x40]   "argument with side effect"
;  V11 tmp7         [V11    ] (  1,  1   )     ref  ->  [rbp-0x48]   must-init "argument with side effect"
;
; Lcl frame size = 112

G_M21598_IG01:
       push     rbp
       sub      rsp, 112
       vzeroupper 
       lea      rbp, [rsp+70H]
       xor      rax, rax
       mov      qword ptr [rbp-48H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-40H], xmm4
       vmovdqa  xmmword ptr [rbp-30H], xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rcx
       mov      qword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
       mov      bword ptr [rbp+20H], r8
       mov      gword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 13.33
G_M21598_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-10H], rax
       call     SpanWriter:get_Instance():SpanWriter
       mov      rcx, gword ptr [rbp-10H]
       mov      byte  ptr [rcx+8], al
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M21598_IG04
						;; bbWeight=1    PerfScore 11.25
G_M21598_IG03:
       mov      rcx, qword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-18H], rcx
       jmp      SHORT G_M21598_IG05
						;; bbWeight=0.50 PerfScore 4.00
G_M21598_IG04:
       mov      rcx, qword ptr [rbp+10H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-18H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M21598_IG05:
       mov      r11, qword ptr [rbp-18H]
       mov      qword ptr [rbp-20H], r11
       mov      r11, gword ptr [rbp+18H]
       mov      gword ptr [rbp-38H], r11
       mov      r11, qword ptr [rbp-20H]
       mov      qword ptr [rbp-40H], r11
       mov      rcx, gword ptr [rbp-10H]
       mov      gword ptr [rbp-48H], rcx
       mov      rcx, bword ptr [rbp+20H]
						;; bbWeight=1    PerfScore 9.00
G_M21598_IG06:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-30H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21598_IG07:
       mov      rcx, gword ptr [rbp-38H]
       mov      r11, qword ptr [rbp-40H]
       mov      rdx, gword ptr [rbp-48H]
       lea      r8, bword ptr [rbp-30H]
       mov      r9, gword ptr [rbp+28H]
       mov      rax, qword ptr [rbp-20H]
       call     qword ptr [rax]
       nop      
						;; bbWeight=1    PerfScore 8.75
G_M21598_IG08:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 227, prolog size 46, PerfScore 76.26, (MethodHash=0395aba1) for method ISerializerExtensions:Write(ISerializer`1,Span`1,__Canon):int
; ============================================================

; Assembly listing for method SpanWriter:get_Instance():SpanWriter
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 loc0         [V00    ] (  1,  1   )  struct ( 8) [rbp-0x08]   do-not-enreg[SB] must-init ld-addr-op
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 16

G_M11899_IG01:
       push     rbp
       sub      rsp, 16
       lea      rbp, [rsp+10H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 3.00
G_M11899_IG02:
       mov      byte  ptr [rbp-08H], 0
       mov      eax, dword ptr [rbp-08H]
						;; bbWeight=1    PerfScore 2.00
G_M11899_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 29, prolog size 16, PerfScore 9.90, (MethodHash=e7bed184) for method SpanWriter:get_Instance():SpanWriter
; ============================================================

; Assembly listing for method GeneratedSerializerWrapper`1:Write(ISpanWriter,Span`1,__Canon):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 arg2         [V02    ] (  1,  1   )   byref  ->  [rbp+0x20]   ld-addr-op
;  V03 arg3         [V03    ] (  1,  1   )     ref  ->  [rbp+0x28]   class-hnd
;  V04 loc0         [V04    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd
;  V05 loc1         [V05    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init class-hnd
;  V06 loc2         [V06    ] (  1,  1   )     ref  ->  [rbp-0x20]   must-init class-hnd
;  V07 OutArgs      [V07    ] (  1,  1   )  lclBlk (48) [rsp+0x00]   "OutgoingArgSpace"
;  V08 tmp1         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init class-hnd "dup spill"
;  V09 tmp2         [V09    ] (  1,  1   )     ref  ->  [rbp-0x30]   must-init
;  V10 tmp3         [V10    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init
;  V11 tmp4         [V11    ] (  1,  1   )    long  ->  [rbp-0x40]   "impRuntimeLookup slot"
;  V12 tmp5         [V12    ] (  1,  1   )    long  ->  [rbp-0x48]   "spilling Runtime Lookup tree"
;  V13 tmp6         [V13    ] (  1,  1   )    long  ->  [rbp-0x50]   "VirtualCall through function pointer"
;  V14 tmp7         [V14    ] (  1,  1   )     ref  ->  [rbp-0x58]   must-init class-hnd "impSpillSpecialSideEff"
;  V15 tmp8         [V15    ] (  1,  1   )   byref  ->  [rbp-0x60]   must-init "non-inline candidate call"
;  V16 tmp9         [V16    ] (  1,  1   )   byref  ->  [rbp-0x68]   must-init "non-inline candidate call"
;  V17 tmp10        [V17    ] (  1,  1   )   byref  ->  [rbp-0x70]   must-init "non-inline candidate call"
;  V18 tmp11        [V18    ] (  1,  1   )   byref  ->  [rbp-0x78]   must-init "non-inline candidate call"
;  V19 tmp12        [V19    ] (  1,  1   )     ref  ->  [rbp-0x80]   must-init class-hnd exact "NewObj constructor temp"
;  V20 tmp13        [V20    ] (  1,  1   )     ref  ->  [rbp-0x88]   must-init class-hnd exact "NewObj constructor temp"
;  V21 tmp14        [V21    ] (  1,  1   )     ref  ->  [rbp-0x90]   must-init "argument with side effect"
;  V22 tmp15        [V22    ] (  1,  1   )     ref  ->  [rbp-0x98]   must-init "argument with side effect"
;  V23 tmp16        [V23    ] (  1,  1   )     int  ->  [rbp-0x9C]   "argument with side effect"
;  V24 tmp17        [V24    ] (  1,  1   )     int  ->  [rbp-0xA0]   "argument with side effect"
;  V25 tmp18        [V25    ] (  1,  1   )  struct (16) [rbp-0xB0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V26 tmp19        [V26    ] (  1,  1   )     ref  ->  [rbp-0xB8]   must-init "argument with side effect"
;  V27 tmp20        [V27    ] (  1,  1   )     ref  ->  [rbp-0xC0]   must-init "argument with side effect"
;  V28 tmp21        [V28    ] (  1,  1   )  struct (16) [rbp-0xD0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V29 tmp22        [V29    ] (  1,  1   )     ref  ->  [rbp-0xD8]   must-init "argument with side effect"
;  V30 tmp23        [V30    ] (  1,  1   )     ref  ->  [rbp-0xE0]   must-init "argument with side effect"
;  V31 tmp24        [V31    ] (  1,  1   )  struct (16) [rbp-0xF0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V32 tmp25        [V32    ] (  1,  1   )     ref  ->  [rbp-0xF8]   must-init "argument with side effect"
;  V33 tmp26        [V33    ] (  1,  1   )     int  ->  [rbp-0xFC]   "argument with side effect"
;  V34 PSPSym       [V34    ] (  1,  1   )    long  ->  [rbp-0x110]   do-not-enreg[X] addr-exposed "PSPSym"
;
; Lcl frame size = 320

G_M56570_IG01:
       push     rbp
       sub      rsp, 320
       vzeroupper 
       lea      rbp, [rsp+140H]
       xor      rax, rax
       mov      qword ptr [rbp-F8H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-F0H], xmm4
       vmovdqa  xmmword ptr [rbp-E0H], xmm4
       mov      rax, -192
       vmovdqa  xmmword ptr [rbp+rax-10H], xmm4
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-110H], rsp
       mov      qword ptr [rbp-08H], rcx
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
       mov      bword ptr [rbp+20H], r8
       mov      gword ptr [rbp+28H], r9
						;; bbWeight=0.01 PerfScore 0.18
G_M56570_IG02:
       cmp      gword ptr [rbp+28H], 0
       jne      SHORT G_M56570_IG04
						;; bbWeight=1    PerfScore 2.00
G_M56570_IG03:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-88H], rax
       mov      ecx, 625
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      gword ptr [rbp-90H], rax
       mov      ecx, 635
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      gword ptr [rbp-98H], rax
       mov      rdx, gword ptr [rbp-90H]
       mov      r8, gword ptr [rbp-98H]
       mov      rcx, gword ptr [rbp-88H]
       call     ArgumentNullException:.ctor(String,String):this
       mov      rcx, gword ptr [rbp-88H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M56570_IG04:
       mov      rcx, bword ptr [rbp+20H]
       call     Span`1:get_Length():int:this
       cmp      eax, 8
       jg       SHORT G_M56570_IG06
						;; bbWeight=1    PerfScore 3.25
G_M56570_IG05:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-80H], rax
       mov      rcx, gword ptr [rbp-80H]
       call     BufferTooSmallException:.ctor():this
       mov      rcx, gword ptr [rbp+10H]
       mov      rdx, gword ptr [rbp+28H]
       call     [GeneratedSerializerWrapper`1:GetMaxSize(__Canon):int:this]
       mov      dword ptr [rbp-9CH], eax
       mov      edx, dword ptr [rbp-9CH]
       mov      rcx, gword ptr [rbp-80H]
       cmp      dword ptr [rcx], ecx
       call     BufferTooSmallException:set_SizeNeeded(int):this
       mov      rcx, gword ptr [rbp-80H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M56570_IG06:
       mov      rcx, 0xD1FFAB1E
       mov      edx, 33
       call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       mov      rcx, 0xD1FFAB1E
       mov      rcx, gword ptr [rcx]
       cmp      dword ptr [rcx], ecx
       call     ThreadLocal`1:get_Value():__Canon:this
       mov      gword ptr [rbp-10H], rax
       mov      rcx, bword ptr [rbp+20H]
       call     Span`1:get_Length():int:this
       mov      dword ptr [rbp-A0H], eax
       mov      edx, dword ptr [rbp-A0H]
       mov      rcx, gword ptr [rbp-10H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:Reset(int):this
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+24]
       mov      gword ptr [rbp-28H], rcx
       mov      rcx, gword ptr [rbp-28H]
       mov      gword ptr [rbp-30H], rcx
       cmp      gword ptr [rbp-28H], 0
       jne      SHORT G_M56570_IG07
       xor      rcx, rcx
       mov      gword ptr [rbp-38H], rcx
       jmp      SHORT G_M56570_IG08
						;; bbWeight=1    PerfScore 27.00
G_M56570_IG07:
       mov      rcx, gword ptr [rbp-30H]
       call     ThreadLocal`1:get_Value():__Canon:this
       mov      gword ptr [rbp-38H], rax
						;; bbWeight=1    PerfScore 3.00
G_M56570_IG08:
       mov      rcx, gword ptr [rbp-38H]
       mov      gword ptr [rbp-18H], rcx
       mov      rcx, gword ptr [rbp-10H]
       mov      rdx, gword ptr [rbp-18H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:set_SharedStringWriter(ISharedStringWriter):this
       mov      rcx, gword ptr [rbp-10H]
       mov      edx, 4
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:set_Offset(int):this
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+40]
       mov      gword ptr [rbp-20H], rcx
       mov      rcx, gword ptr [rbp-20H]
       call     String:IsNullOrEmpty(String):bool
       test     eax, eax
       jne      G_M56570_IG09
       mov      rcx, bword ptr [rbp+20H]
       mov      edx, 4
       call     Span`1:get_Item(int):byref:this
       mov      bword ptr [rbp-60H], rax
       mov      rcx, gword ptr [rbp-20H]
       xor      edx, edx
       cmp      dword ptr [rcx], ecx
       call     String:get_Chars(int):ushort:this
       mov      rcx, bword ptr [rbp-60H]
       mov      byte  ptr [rcx], al
       mov      rcx, bword ptr [rbp+20H]
       mov      edx, 5
       call     Span`1:get_Item(int):byref:this
       mov      bword ptr [rbp-68H], rax
       mov      rcx, gword ptr [rbp-20H]
       mov      edx, 1
       cmp      dword ptr [rcx], ecx
       call     String:get_Chars(int):ushort:this
       mov      rcx, bword ptr [rbp-68H]
       mov      byte  ptr [rcx], al
       mov      rcx, bword ptr [rbp+20H]
       mov      edx, 6
       call     Span`1:get_Item(int):byref:this
       mov      bword ptr [rbp-70H], rax
       mov      rcx, gword ptr [rbp-20H]
       mov      edx, 2
       cmp      dword ptr [rcx], ecx
       call     String:get_Chars(int):ushort:this
       mov      rcx, bword ptr [rbp-70H]
       mov      byte  ptr [rcx], al
       mov      rcx, bword ptr [rbp+20H]
       mov      edx, 7
       call     Span`1:get_Item(int):byref:this
       mov      bword ptr [rbp-78H], rax
       mov      rcx, gword ptr [rbp-20H]
       mov      edx, 3
       cmp      dword ptr [rcx], ecx
       call     String:get_Chars(int):ushort:this
       mov      rcx, bword ptr [rbp-78H]
       mov      byte  ptr [rcx], al
       mov      rcx, gword ptr [rbp-10H]
       mov      edx, 8
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:set_Offset(int):this
						;; bbWeight=1    PerfScore 60.75
G_M56570_IG09:
       nop      
						;; bbWeight=1    PerfScore 0.25
G_M56570_IG10:
       cmp      gword ptr [rbp-18H], 0
       je       SHORT G_M56570_IG11
       mov      rcx, gword ptr [rbp-18H]
       mov      r11, 0xD1FFAB1E
       call     [ISharedStringWriter:PrepareWrite():this]
						;; bbWeight=1    PerfScore 6.25
G_M56570_IG11:
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx]
       mov      qword ptr [rbp-40H], rcx
       mov      rcx, qword ptr [rbp-40H]
       mov      rcx, qword ptr [rcx+48]
       mov      rcx, qword ptr [rcx]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M56570_IG13
						;; bbWeight=1    PerfScore 12.00
G_M56570_IG12:
       mov      rcx, qword ptr [rbp-40H]
       mov      rcx, qword ptr [rcx+48]
       mov      rcx, qword ptr [rcx]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-48H], rcx
       jmp      SHORT G_M56570_IG14
						;; bbWeight=0.50 PerfScore 5.00
G_M56570_IG13:
       mov      rcx, qword ptr [rbp-40H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_CLASS
       mov      qword ptr [rbp-48H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M56570_IG14:
       mov      rcx, gword ptr [rbp+18H]
       mov      r8, qword ptr [rbp-48H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      qword ptr [rbp-50H], rax
       mov      rcx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-B8H], rcx
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+8]
       mov      gword ptr [rbp-C0H], rcx
       mov      rcx, bword ptr [rbp+20H]
						;; bbWeight=1    PerfScore 11.25
G_M56570_IG15:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-B0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M56570_IG16:
       xor      ecx, ecx
       mov      dword ptr [rsp+20H], ecx
       mov      rcx, gword ptr [rbp-10H]
       mov      gword ptr [rsp+28H], rcx
       mov      rcx, gword ptr [rbp-B8H]
       mov      rdx, gword ptr [rbp-C0H]
       lea      r8, bword ptr [rbp-B0H]
       mov      r9, gword ptr [rbp+28H]
       mov      rax, qword ptr [rbp-50H]
       call     rax
       cmp      gword ptr [rbp-18H], 0
       je       SHORT G_M56570_IG19
       mov      rcx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-D8H], rcx
       mov      rcx, gword ptr [rbp-18H]
       mov      gword ptr [rbp-E0H], rcx
       mov      rcx, bword ptr [rbp+20H]
						;; bbWeight=1    PerfScore 17.75
G_M56570_IG17:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-D0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M56570_IG18:
       mov      rcx, gword ptr [rbp-D8H]
       mov      rdx, gword ptr [rbp-E0H]
       lea      r8, bword ptr [rbp-D0H]
       mov      r9, gword ptr [rbp-10H]
       mov      r11, 0xD1FFAB1E
       call     [ISpanWriter:FlushSharedStrings(ISharedStringWriter,Span`1,SerializationContext):this]
						;; bbWeight=1    PerfScore 6.75
G_M56570_IG19:
       mov      rcx, gword ptr [rbp-10H]
       mov      gword ptr [rbp-F8H], rcx
       mov      rcx, bword ptr [rbp+20H]
						;; bbWeight=1    PerfScore 3.00
G_M56570_IG20:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-F0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M56570_IG21:
       mov      rcx, gword ptr [rbp-F8H]
       lea      rdx, bword ptr [rbp-F0H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:InvokePostSerializeActions(Span`1):this
       jmp      SHORT G_M56570_IG22
						;; bbWeight=1    PerfScore 6.50
G_M56570_IG22:
       mov      rcx, gword ptr [rbp-10H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:get_Offset():int:this
       nop      
						;; bbWeight=1    PerfScore 4.25
G_M56570_IG23:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M56570_IG24:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       mov      rbp, qword ptr [rcx+48]
       mov      qword ptr [rsp+30H], rbp
       lea      rbp, [rbp+140H]
						;; bbWeight=0.01 PerfScore 0.06
G_M56570_IG25:
       mov      gword ptr [rbp-58H], rdx
       mov      rcx, gword ptr [rbp+10H]
       mov      rdx, gword ptr [rbp+28H]
       call     [GeneratedSerializerWrapper`1:GetMaxSize(__Canon):int:this]
       mov      dword ptr [rbp-FCH], eax
       mov      edx, dword ptr [rbp-FCH]
       mov      rcx, gword ptr [rbp-58H]
       cmp      dword ptr [rcx], ecx
       call     BufferTooSmallException:set_SizeNeeded(int):this
       call     CORINFO_HELP_RETHROW
       int3     
						;; bbWeight=0.01 PerfScore 0.13

; Total bytes of code 1127, prolog size 112, PerfScore 295.89, (MethodHash=cb0d2305) for method GeneratedSerializerWrapper`1:Write(ISpanWriter,Span`1,__Canon):int:this
; ============================================================

; Assembly listing for method SerializationContext:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V01 tmp1         [V01    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;  V02 tmp2         [V02    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd exact "NewObj constructor temp"
;  V03 tmp3         [V03    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init "argument with side effect"
;
; Lcl frame size = 64

G_M19927_IG01:
       push     rbp
       sub      rsp, 64
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqu  xmmword ptr [rbp-18H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 4.33
G_M19927_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, 0xD1FFAB1E
       mov      edx, 109
       call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE
       mov      rdx, 0xD1FFAB1E
       mov      rdx, gword ptr [rdx]
       mov      gword ptr [rbp-18H], rdx
       mov      rdx, gword ptr [rbp-18H]
       mov      r8, 0xD1FFAB1E
       mov      rcx, gword ptr [rbp-08H]
       call     MulticastDelegate:CtorClosed(Object,long):this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWFAST
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp-10H]
       mov      rdx, gword ptr [rbp-08H]
       call     ThreadLocal`1:.ctor(Func`1):this
       mov      rcx, 0xD1FFAB1E
       mov      rdx, gword ptr [rbp-10H]
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 18.00
G_M19927_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 162, prolog size 25, PerfScore 40.73, (MethodHash=ac37b228) for method SerializationContext:.cctor()
; ============================================================

; Assembly listing for method <>c:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V01 tmp1         [V01    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M3271_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 3.00
G_M3271_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       call     <>c:.ctor():this
       mov      rcx, 0xD1FFAB1E
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 6.75
G_M3271_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 70, prolog size 16, PerfScore 18.75, (MethodHash=7a92f338) for method <>c:.cctor()
; ============================================================

; Assembly listing for method <>c:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M5848_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M5848_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M5848_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 30, prolog size 10, PerfScore 10.00, (MethodHash=cce2e927) for method <>c:.ctor():this
; ============================================================

; Assembly listing for method <>c:<.cctor>b__21_0():SerializationContext:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M64604_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 4.00
G_M64604_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       call     SerializationContext:.ctor():this
       mov      rax, gword ptr [rbp-08H]
						;; bbWeight=1    PerfScore 5.25
G_M64604_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 58, prolog size 16, PerfScore 17.05, (MethodHash=131303a3) for method <>c:<.cctor>b__21_0():SerializationContext:this
; ============================================================

; Assembly listing for method SerializationContext:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;  V03 tmp2         [V03    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M56264_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp-10H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M56264_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       call     List`1:.ctor():this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp-10H]
       call     List`1:.ctor():this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+16]
       mov      rdx, gword ptr [rbp-10H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 17.75
G_M56264_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 130, prolog size 20, PerfScore 37.75, (MethodHash=bab02437) for method SerializationContext:.ctor():this
; ============================================================

; Assembly listing for method SerializationContext:Reset(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M7434_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M7434_IG02:
       mov      rcx, gword ptr [rbp+10H]
       xor      edx, edx
       mov      dword ptr [rcx+32], edx
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rcx+36], edx
       mov      rcx, gword ptr [rbp+10H]
       xor      rdx, rdx
       call     SerializationContext:set_SharedStringWriter(ISharedStringWriter):this
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+8]
       cmp      dword ptr [rcx], ecx
       call     [List`1:Clear():this]
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+16]
       cmp      dword ptr [rcx], ecx
       call     [List`1:Clear():this]
       nop      
						;; bbWeight=1    PerfScore 23.75
G_M7434_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 86, prolog size 10, PerfScore 38.10, (MethodHash=93d7e2f5) for method SerializationContext:Reset(int):this
; ============================================================

; Assembly listing for method SerializationContext:set_SharedStringWriter(ISharedStringWriter):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M58424_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.25
G_M58424_IG02:
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+24]
       mov      rdx, gword ptr [rbp+18H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 3.75
G_M58424_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 32, prolog size 4, PerfScore 11.70, (MethodHash=5da21bc7) for method SerializationContext:set_SharedStringWriter(ISharedStringWriter):this
; ============================================================

; Assembly listing for method SerializationContext:set_Offset(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M60847_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M60847_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+32], edx
						;; bbWeight=1    PerfScore 3.00
G_M60847_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=068c1250) for method SerializationContext:set_Offset(int):this
; ============================================================

; Assembly listing for method ILStubClass:IL_STUB_InstantiatingStub(IGeneratedSerializer`1,Span`1,ScalarTable,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T01] (  3,  3   )   byref  ->  rcx         this
;  V01 arg1         [V01,T02] (  3,  3   )     ref  ->  rdx         class-hnd
;  V02 arg2         [V02,T00] (  3,  6   )   byref  ->  rax        
;  V03 arg3         [V03,T03] (  3,  3   )     ref  ->   r9         class-hnd
;  V04 arg4         [V04,T05] (  1,  1   )     int  ->  [rsp+0x60]  
;  V05 arg5         [V05,T04] (  1,  1   )     ref  ->  [rsp+0x68]   class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (56) [rsp+0x00]   "OutgoingArgSpace"
;* V07 tmp1         [V07    ] (  0,  0   )    long  ->  zero-ref    "impImportIndirectCall"
;* V08 tmp2         [V08    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;* V09 tmp3         [V09    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;* V10 tmp4         [V10    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 56

G_M24856_IG01:
       sub      rsp, 56
       mov      rax, r8
						;; bbWeight=1    PerfScore 0.50
G_M24856_IG02:
       mov      gword ptr [rsp+20H], r9
       mov      r8d, dword ptr [rsp+60H]
       mov      dword ptr [rsp+28H], r8d
       mov      r8, gword ptr [rsp+68H]
       mov      gword ptr [rsp+30H], r8
       mov      r8, rdx
       mov      r9, rax
       mov      rdx, 0xD1FFAB1E
       mov      rax, 0xD1FFAB1E
       call     rax
       nop      
						;; bbWeight=1    PerfScore 9.25
G_M24856_IG03:
       add      rsp, 56
       ret      
						;; bbWeight=1    PerfScore 1.25

; Total bytes of code 66, prolog size 4, PerfScore 17.60, (MethodHash=fec89ee7) for method ILStubClass:IL_STUB_InstantiatingStub(IGeneratedSerializer`1,Span`1,ScalarTable,int,SerializationContext):this
; ============================================================

; Assembly listing for method SpanWriter:InvokeWrite(IGeneratedSerializer`1,Span`1,__Canon,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 TypeCtx      [V01    ] (  1,  1   )    long  ->  [rbp+0x18]  
;  V02 arg1         [V02    ] (  1,  1   )     ref  ->  [rbp+0x20]   class-hnd
;  V03 arg2         [V03    ] (  1,  1   )   byref  ->  [rbp+0x28]  
;  V04 arg3         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 arg4         [V05    ] (  1,  1   )     int  ->  [rbp+0x38]  
;  V06 arg5         [V06    ] (  1,  1   )     ref  ->  [rbp+0x40]   class-hnd
;  V07 OutArgs      [V07    ] (  1,  1   )  lclBlk (48) [rsp+0x00]   "OutgoingArgSpace"
;  V08 tmp1         [V08    ] (  1,  1   )    long  ->  [rbp-0x10]   "spilling Runtime Lookup tree"
;  V09 tmp2         [V09    ] (  1,  1   )    long  ->  [rbp-0x18]   "spilling Runtime Lookup tree"
;  V10 tmp3         [V10    ] (  1,  1   )    long  ->  [rbp-0x20]   "VirtualCall through function pointer"
;  V11 tmp4         [V11    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V12 tmp5         [V12    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init "argument with side effect"
;  V13 tmp6         [V13    ] (  1,  1   )     int  ->  [rbp-0x3C]   "argument with side effect"
;
; Lcl frame size = 112

G_M12562_IG01:
       push     rbp
       sub      rsp, 112
       vzeroupper 
       lea      rbp, [rsp+70H]
       vxorps   xmm4, xmm4
       vmovdqu  xmmword ptr [rbp-38H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-28H], rax
       mov      qword ptr [rbp-08H], rdx
       mov      bword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      gword ptr [rbp+20H], r8
       mov      bword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 10.33
G_M12562_IG02:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M12562_IG04
						;; bbWeight=1    PerfScore 6.00
G_M12562_IG03:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-10H], rcx
       jmp      SHORT G_M12562_IG05
						;; bbWeight=0.50 PerfScore 4.00
G_M12562_IG04:
       mov      rcx, qword ptr [rbp+18H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-10H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M12562_IG05:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+24], 0
       je       SHORT G_M12562_IG07
						;; bbWeight=1    PerfScore 6.00
G_M12562_IG06:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+24]
       mov      qword ptr [rbp-18H], rcx
       jmp      SHORT G_M12562_IG08
						;; bbWeight=0.50 PerfScore 4.00
G_M12562_IG07:
       mov      rcx, qword ptr [rbp+18H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-18H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M12562_IG08:
       mov      rcx, gword ptr [rbp+20H]
       mov      rdx, qword ptr [rbp-10H]
       mov      r8, qword ptr [rbp-18H]
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      qword ptr [rbp-20H], rax
       mov      rcx, gword ptr [rbp+20H]
       mov      gword ptr [rbp-38H], rcx
       mov      rcx, bword ptr [rbp+10H]
       movsx    rcx, byte  ptr [rcx]
       mov      dword ptr [rbp-3CH], ecx
       mov      rcx, bword ptr [rbp+28H]
						;; bbWeight=1    PerfScore 12.00
G_M12562_IG09:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-30H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M12562_IG10:
       mov      ecx, dword ptr [rbp+38H]
       mov      dword ptr [rsp+20H], ecx
       mov      rcx, gword ptr [rbp+40H]
       mov      gword ptr [rsp+28H], rcx
       mov      rcx, gword ptr [rbp-38H]
       mov      edx, dword ptr [rbp-3CH]
       lea      r8, bword ptr [rbp-30H]
       mov      r9, gword ptr [rbp+30H]
       mov      rax, qword ptr [rbp-20H]
       call     rax
       nop      
						;; bbWeight=1    PerfScore 11.75
G_M12562_IG11:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 257, prolog size 32, PerfScore 88.43, (MethodHash=51e0ceed) for method SpanWriter:InvokeWrite(IGeneratedSerializer`1,Span`1,__Canon,int,SerializationContext):this
; ============================================================

; Assembly listing for method GeneratedSerializer:Write(SpanWriter,Span`1,ScalarTable,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 8) [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )   byref  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     ref  ->  [rbp+0x28]   class-hnd
;  V04 arg4         [V04    ] (  1,  1   )     int  ->  [rbp+0x30]  
;  V05 arg5         [V05    ] (  1,  1   )     ref  ->  [rbp+0x38]   class-hnd
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V08 tmp2         [V08    ] (  1,  1   )     int  ->  [rbp-0x14]   "argument with side effect"
;
; Lcl frame size = 64

G_M9543_IG01:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       lea      rbp, [rsp+40H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      bword ptr [rbp+20H], r8
       mov      gword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 8.00
G_M9543_IG02:
       movsx    rcx, byte  ptr [rbp+18H]
       mov      dword ptr [rbp-14H], ecx
       mov      rcx, bword ptr [rbp+20H]
						;; bbWeight=1    PerfScore 3.00
G_M9543_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-10H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M9543_IG04:
       mov      rcx, gword ptr [rbp+38H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp-14H]
       lea      rdx, bword ptr [rbp-10H]
       mov      r8, gword ptr [rbp+28H]
       mov      r9d, dword ptr [rbp+30H]
       call     GeneratedSerializer:WriteInlineValueOf_55bc853cd3904128b3329b38587280d1(SpanWriter,Span`1,ScalarTable,int,SerializationContext)
       nop      
						;; bbWeight=1    PerfScore 6.75
G_M9543_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 92, prolog size 19, PerfScore 32.15, (MethodHash=fbe6dab8) for method GeneratedSerializer:Write(SpanWriter,Span`1,ScalarTable,int,SerializationContext):this
; ============================================================

; Assembly listing for method GeneratedSerializer:WriteInlineValueOf_55bc853cd3904128b3329b38587280d1(SpanWriter,Span`1,ScalarTable,int,SerializationContext)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x1F0]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x1F8]  
;  V02 arg2         [V02    ] (  1,  1   )     ref  ->  [rbp+0x200]   class-hnd
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x208]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x210]   class-hnd
;  V05 loc0         [V05    ] (  1,  1   )     int  ->  [rbp+0x1DC]   must-init
;  V06 loc1         [V06    ] (  1,  1   )     int  ->  [rbp+0x1D8]   must-init
;  V07 loc2         [V07    ] (  1,  1   )     int  ->  [rbp+0x1D4]   must-init
;  V08 loc3         [V08    ] (  1,  1   )  struct (16) [rbp+0x1C0]   do-not-enreg[XSB] must-init addr-exposed ld-addr-op
;  V09 loc4         [V09    ] (  1,  1   )     ref  ->  [rbp+0x1B8]   must-init class-hnd
;  V10 loc5         [V10    ] (  1,  1   )     int  ->  [rbp+0x1B4]   must-init
;  V11 loc6         [V11    ] (  1,  1   )     int  ->  [rbp+0x1B0]   must-init
;  V12 loc7         [V12    ] (  1,  1   )     int  ->  [rbp+0x1AC]   must-init
;  V13 loc8         [V13    ] (  1,  1   )     int  ->  [rbp+0x1A8]   must-init
;  V14 loc9         [V14    ] (  1,  1   )     int  ->  [rbp+0x1A4]   must-init
;  V15 loc10        [V15    ] (  1,  1   )     int  ->  [rbp+0x1A0]   must-init
;  V16 loc11        [V16    ] (  1,  1   )     int  ->  [rbp+0x19C]   must-init
;  V17 loc12        [V17    ] (  1,  1   )     int  ->  [rbp+0x198]   must-init
;  V18 loc13        [V18    ] (  1,  1   )     int  ->  [rbp+0x194]   must-init
;  V19 loc14        [V19    ] (  1,  1   )  struct (16) [rbp+0x180]   do-not-enreg[SB] must-init
;  V20 OutArgs      [V20    ] (  1,  1   )  lclBlk (48) [rsp+0x00]   "OutgoingArgSpace"
;  V21 tmp1         [V21    ] (  1,  1   )  struct (16) [rbp+0x170]   do-not-enreg[XSB] must-init addr-exposed "NewObj constructor temp"
;  V22 tmp2         [V22    ] (  1,  1   )  struct (16) [rbp+0x160]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V23 tmp3         [V23    ] (  1,  1   )  struct (16) [rbp+0x150]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V24 tmp4         [V24    ] (  1,  1   )     int  ->  [rbp+0x14C]   "argument with side effect"
;  V25 tmp5         [V25    ] (  1,  1   )  struct (16) [rbp+0x138]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V26 tmp6         [V26    ] (  1,  1   )     int  ->  [rbp+0x134]   "argument with side effect"
;  V27 tmp7         [V27    ] (  1,  1   )  struct (16) [rbp+0x120]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V28 tmp8         [V28    ] (  1,  1   )   byref  ->  [rbp+0x118]   must-init "argument with side effect"
;  V29 tmp9         [V29    ] (  1,  1   )  struct (16) [rbp+0x108]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V30 tmp10        [V30    ] (  1,  1   )     int  ->  [rbp+0x104]   "argument with side effect"
;  V31 tmp11        [V31    ] (  1,  1   )  struct (16) [rbp+0xF0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V32 tmp12        [V32    ] (  1,  1   )   byref  ->  [rbp+0xE8]   must-init "argument with side effect"
;  V33 tmp13        [V33    ] (  1,  1   )  struct (16) [rbp+0xD8]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V34 tmp14        [V34    ] (  1,  1   )     int  ->  [rbp+0xD4]   "argument with side effect"
;  V35 tmp15        [V35    ] (  1,  1   )  struct (16) [rbp+0xC0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V36 tmp16        [V36    ] (  1,  1   )   byref  ->  [rbp+0xB8]   must-init "argument with side effect"
;  V37 tmp17        [V37    ] (  1,  1   )  struct (16) [rbp+0xA8]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V38 tmp18        [V38    ] (  1,  1   )     int  ->  [rbp+0xA4]   "argument with side effect"
;  V39 tmp19        [V39    ] (  1,  1   )  struct (16) [rbp+0x90]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V40 tmp20        [V40    ] (  1,  1   )   byref  ->  [rbp+0x88]   must-init "argument with side effect"
;  V41 tmp21        [V41    ] (  1,  1   )     int  ->  [rbp+0x84]   "argument with side effect"
;  V42 tmp22        [V42    ] (  1,  1   )  struct (16) [rbp+0x70]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V43 tmp23        [V43    ] (  1,  1   )   byref  ->  [rbp+0x68]   must-init "argument with side effect"
;  V44 tmp24        [V44    ] (  1,  1   )  struct (16) [rbp+0x58]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V45 tmp25        [V45    ] (  1,  1   )   byref  ->  [rbp+0x50]   must-init "argument with side effect"
;  V46 tmp26        [V46    ] (  1,  1   )  struct (16) [rbp+0x40]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V47 tmp27        [V47    ] (  1,  1   )  struct (16) [rbp+0x30]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V48 tmp28        [V48    ] (  1,  1   )     ref  ->  [rbp+0x28]   must-init "argument with side effect"
;  V49 tmp29        [V49    ] (  1,  1   )  struct (16) [rbp+0x18]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V50 tmp30        [V50    ] (  1,  1   )   byref  ->  [rbp+0x10]   must-init "argument with side effect"
;  V51 GsCookie     [V51    ] (  1,  1   )    long  ->  [rbp+0x08]   do-not-enreg[X] must-init addr-exposed "GSSecurityCookie"
;
; Lcl frame size = 528

G_M21015_IG01:
       push     rbp
       sub      rsp, 528
       vzeroupper 
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp+08H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp+10H], xmm4
       vmovdqa  xmmword ptr [rbp+20H], xmm4
       mov      rax, -432
       vmovdqa  xmmword ptr [rbp+rax+1E0H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+1F0H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+200H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      rax, 0xD1FFAB1E
       mov      qword ptr [rbp+08H], rax
       mov      qword ptr [rbp+1F0H], rcx
       mov      bword ptr [rbp+1F8H], rdx
       mov      gword ptr [rbp+200H], r8
       mov      dword ptr [rbp+208H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M21015_IG02:
       mov      rcx, gword ptr [rbp+210H]
       mov      edx, 92
       mov      r8d, 4
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:AllocateSpace(int,int):int:this
       mov      dword ptr [rbp+1DCH], eax
       movsx    rcx, byte  ptr [rbp+1F0H]
       mov      dword ptr [rbp+14CH], ecx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 8.50
G_M21015_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+150H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG04:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp+14CH]
       lea      rdx, bword ptr [rbp+150H]
       mov      r8d, dword ptr [rbp+208H]
       mov      r9d, dword ptr [rbp+1DCH]
       call     SpanWriterExtensions:WriteUOffset(SpanWriter,Span`1,int,int,SerializationContext)
       mov      ecx, dword ptr [rbp+1DCH]
       add      ecx, 4
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], ecx
       mov      dword ptr [rbp+1D4H], 12
       lea      rcx, bword ptr [rbp+170H]
       mov      edx, 12
       mov      edx, edx
       test     rdx, rdx
       je       SHORT G_M21015_IG06
       add      rdx, 15
       shr      rdx, 4
       add      rsp, 48
						;; bbWeight=1    PerfScore 15.50
G_M21015_IG05:
       push     0
       push     0
       dec      rdx
       jne      SHORT G_M21015_IG05
       sub      rsp, 48
       lea      rdx, [rsp+30H]
						;; bbWeight=1    PerfScore 4.00
G_M21015_IG06:
       mov      r8d, 12
       call     Span`1:.ctor(long,int):this
						;; bbWeight=1    PerfScore 1.25
G_M21015_IG07:
       vmovdqu  xmm0, xmmword ptr [rbp+170H]
       vmovdqu  xmmword ptr [rbp+180H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG08:
       vmovdqu  xmm0, xmmword ptr [rbp+180H]
       vmovdqu  xmmword ptr [rbp+1C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG09:
       mov      rcx, gword ptr [rbp+200H]
       mov      rax, gword ptr [rbp+200H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+64]
       call     gword ptr [rax+32]ScalarTable:get_Struct():Struct:this
       mov      gword ptr [rbp+1B8H], rax
       mov      rcx, gword ptr [rbp+200H]
       mov      rax, gword ptr [rbp+200H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+64]
       call     qword ptr [rax+48]ScalarTable:get_A():int:this
       mov      dword ptr [rbp+1B4H], eax
       mov      rcx, gword ptr [rbp+200H]
       mov      rax, gword ptr [rbp+200H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+72]
       call     qword ptr [rax]ScalarTable:get_B():int:this
       mov      dword ptr [rbp+1B0H], eax
       mov      rcx, gword ptr [rbp+200H]
       mov      rax, gword ptr [rbp+200H]
       mov      rax, qword ptr [rax]
       mov      rax, qword ptr [rax+72]
       call     qword ptr [rax+16]ScalarTable:get_C():int:this
       mov      dword ptr [rbp+1ACH], eax
       mov      ecx, dword ptr [rbp+1DCH]
       mov      dword ptr [rbp+1A8H], ecx
       mov      ecx, dword ptr [rbp+1D8H]
       mov      edx, 4
       call     SerializationHelpers:GetAlignmentError(int,int):int
       add      eax, dword ptr [rbp+1D8H]
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], eax
       mov      ecx, dword ptr [rbp+1D8H]
       mov      dword ptr [rbp+1A8H], ecx
       mov      ecx, dword ptr [rbp+1D8H]
       add      ecx, 4
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], ecx
       movsx    rcx, byte  ptr [rbp+1F0H]
       mov      dword ptr [rbp+134H], ecx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 55.50
G_M21015_IG10:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+138H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG11:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp+134H]
       lea      rdx, bword ptr [rbp+138H]
       mov      r8d, dword ptr [rbp+1ACH]
       mov      r9d, dword ptr [rbp+1A8H]
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       mov      dword ptr [rbp+1D4H], 12
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+118H], rcx
						;; bbWeight=1    PerfScore 9.00
G_M21015_IG12:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+120H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG13:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+118H]
       lea      rdx, bword ptr [rbp+120H]
       mov      r8d, dword ptr [rbp+1A8H]
       sub      r8d, dword ptr [rbp+1DCH]
       jo       G_M21015_IG40
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       mov      r9d, 10
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       mov      ecx, dword ptr [rbp+1DCH]
       mov      dword ptr [rbp+1A4H], ecx
       cmp      dword ptr [rbp+1B0H], 0
       je       G_M21015_IG16
       mov      ecx, dword ptr [rbp+1D8H]
       mov      edx, 4
       call     SerializationHelpers:GetAlignmentError(int,int):int
       add      eax, dword ptr [rbp+1D8H]
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], eax
       mov      ecx, dword ptr [rbp+1D8H]
       mov      dword ptr [rbp+1A4H], ecx
       mov      ecx, dword ptr [rbp+1D8H]
       add      ecx, 4
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], ecx
       movsx    rcx, byte  ptr [rbp+1F0H]
       mov      dword ptr [rbp+104H], ecx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 26.50
G_M21015_IG14:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+108H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG15:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp+104H]
       lea      rdx, bword ptr [rbp+108H]
       mov      r8d, dword ptr [rbp+1B0H]
       mov      r9d, dword ptr [rbp+1A4H]
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
						;; bbWeight=1    PerfScore 6.50
G_M21015_IG16:
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+E8H], rcx
						;; bbWeight=1    PerfScore 1.50
G_M21015_IG17:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+F0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG18:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+E8H]
       lea      rdx, bword ptr [rbp+F0H]
       mov      r8d, dword ptr [rbp+1A4H]
       sub      r8d, dword ptr [rbp+1DCH]
       jo       G_M21015_IG40
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       mov      r9d, 8
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       mov      ecx, dword ptr [rbp+1DCH]
       mov      dword ptr [rbp+1A0H], ecx
       cmp      dword ptr [rbp+1B4H], 0
       je       G_M21015_IG21
       mov      ecx, dword ptr [rbp+1D8H]
       mov      edx, 4
       call     SerializationHelpers:GetAlignmentError(int,int):int
       add      eax, dword ptr [rbp+1D8H]
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], eax
       mov      ecx, dword ptr [rbp+1D8H]
       mov      dword ptr [rbp+1A0H], ecx
       mov      ecx, dword ptr [rbp+1D8H]
       add      ecx, 4
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], ecx
       movsx    rcx, byte  ptr [rbp+1F0H]
       mov      dword ptr [rbp+D4H], ecx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 26.50
G_M21015_IG19:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+D8H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG20:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp+D4H]
       lea      rdx, bword ptr [rbp+D8H]
       mov      r8d, dword ptr [rbp+1B4H]
       mov      r9d, dword ptr [rbp+1A0H]
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
						;; bbWeight=1    PerfScore 6.50
G_M21015_IG21:
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+B8H], rcx
						;; bbWeight=1    PerfScore 1.50
G_M21015_IG22:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG23:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+B8H]
       lea      rdx, bword ptr [rbp+C0H]
       mov      r8d, dword ptr [rbp+1A0H]
       sub      r8d, dword ptr [rbp+1DCH]
       jo       G_M21015_IG40
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       mov      r9d, 6
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       mov      ecx, dword ptr [rbp+1DCH]
       mov      dword ptr [rbp+19CH], ecx
       cmp      gword ptr [rbp+1B8H], 0
       je       G_M21015_IG26
       mov      ecx, dword ptr [rbp+1D8H]
       mov      edx, 4
       call     SerializationHelpers:GetAlignmentError(int,int):int
       add      eax, dword ptr [rbp+1D8H]
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], eax
       mov      ecx, dword ptr [rbp+1D8H]
       mov      dword ptr [rbp+19CH], ecx
       mov      ecx, dword ptr [rbp+1D8H]
       add      ecx, 64
       jo       G_M21015_IG40
       mov      dword ptr [rbp+1D8H], ecx
       movsx    rcx, byte  ptr [rbp+1F0H]
       mov      dword ptr [rbp+A4H], ecx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 26.50
G_M21015_IG24:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+A8H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG25:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      ecx, dword ptr [rbp+A4H]
       lea      rdx, bword ptr [rbp+A8H]
       mov      r8, gword ptr [rbp+1B8H]
       mov      r9d, dword ptr [rbp+19CH]
       call     GeneratedSerializer:WriteInlineValueOf_ad8721f46daa4ecf8d0a074bda86da39(SpanWriter,Span`1,Struct,int,SerializationContext)
						;; bbWeight=1    PerfScore 6.50
G_M21015_IG26:
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+88H], rcx
						;; bbWeight=1    PerfScore 1.50
G_M21015_IG27:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+90H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG28:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+88H]
       lea      rdx, bword ptr [rbp+90H]
       mov      r8d, dword ptr [rbp+19CH]
       sub      r8d, dword ptr [rbp+1DCH]
       jo       G_M21015_IG40
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       mov      r9d, 4
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       mov      ecx, dword ptr [rbp+1D8H]
       sub      ecx, dword ptr [rbp+1DCH]
       jo       G_M21015_IG40
       mov      dword ptr [rbp+198H], ecx
       mov      rcx, gword ptr [rbp+210H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:get_Offset():int:this
       mov      edx, 92
       sub      edx, dword ptr [rbp+198H]
       jo       G_M21015_IG40
       sub      eax, edx
       jo       G_M21015_IG40
       mov      dword ptr [rbp+84H], eax
       mov      edx, dword ptr [rbp+84H]
       mov      rcx, gword ptr [rbp+210H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:set_Offset(int):this
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+68H], rcx
						;; bbWeight=1    PerfScore 28.00
G_M21015_IG29:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+70H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG30:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+68H]
       lea      rdx, bword ptr [rbp+70H]
       mov      r8d, dword ptr [rbp+1D4H]
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       xor      r9d, r9d
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+50H], rcx
						;; bbWeight=1    PerfScore 8.50
G_M21015_IG31:
       vmovdqu  xmm0, xmmword ptr [rbp+1C0H]
       vmovdqu  xmmword ptr [rbp+58H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG32:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+50H]
       lea      rdx, bword ptr [rbp+58H]
       mov      r8d, dword ptr [rbp+198H]
       cmp      r8d, 0xFFFF
       ja       G_M21015_IG40
       mov      r9d, 2
       call     SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
       lea      rcx, bword ptr [rbp+1C0H]
       lea      rdx, [rbp+160H]
       mov      r9d, dword ptr [rbp+1D4H]
       xor      r8d, r8d
       call     Span`1:Slice(int,int):Span`1:this
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rbp+28H], rcx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 13.25
G_M21015_IG33:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+40H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG34:
       vmovdqu  xmm0, xmmword ptr [rbp+160H]
       vmovdqu  xmmword ptr [rbp+30H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG35:
       mov      rcx, gword ptr [rbp+28H]
       lea      rdx, bword ptr [rbp+40H]
       lea      r8, bword ptr [rbp+30H]
       cmp      dword ptr [rcx], ecx
       call     SerializationContext:FinishVTable(Span`1,Span`1):int:this
       mov      dword ptr [rbp+194H], eax
       lea      rcx, bword ptr [rbp+1F0H]
       mov      bword ptr [rbp+10H], rcx
       mov      rcx, bword ptr [rbp+1F8H]
						;; bbWeight=1    PerfScore 8.50
G_M21015_IG36:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp+18H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M21015_IG37:
       mov      rcx, gword ptr [rbp+210H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp+10H]
       lea      rdx, bword ptr [rbp+18H]
       mov      r8d, dword ptr [rbp+1DCH]
       sub      r8d, dword ptr [rbp+194H]
       jo       SHORT G_M21015_IG40
       mov      r9d, dword ptr [rbp+1DCH]
       call     SpanWriter:WriteInt(Span`1,int,int,SerializationContext):this
       mov      rcx, 0xD1FFAB1E
       cmp      qword ptr [rbp+08H], rcx
       je       SHORT G_M21015_IG38
       call     CORINFO_HELP_FAIL_FAST
						;; bbWeight=1    PerfScore 11.75
G_M21015_IG38:
       nop      
						;; bbWeight=1    PerfScore 0.25
G_M21015_IG39:
       lea      rsp, [rbp+1E0H]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M21015_IG40:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 1988, prolog size 93, PerfScore 511.10, (MethodHash=8dafade8) for method GeneratedSerializer:WriteInlineValueOf_55bc853cd3904128b3329b38587280d1(SpanWriter,Span`1,ScalarTable,int,SerializationContext)
; ============================================================

; Assembly listing for method SerializationContext:AllocateSpace(int,int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 loc0         [V03    ] (  1,  1   )     int  ->  [rbp-0x04]   must-init
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V05 tmp1         [V05    ] (  1,  1   )     int  ->  [rbp-0x08]   "dup spill"
;  V06 tmp2         [V06    ] (  1,  1   )     int  ->  [rbp-0x0C]   "dup spill"
;  V07 tmp3         [V07    ] (  1,  1   )     int  ->  [rbp-0x10]   must-init
;  V08 tmp4         [V08    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 64

G_M9104_IG01:
       push     rbp
       sub      rsp, 64
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqu  xmmword ptr [rbp-18H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
						;; bbWeight=0    PerfScore 0.00
G_M9104_IG02:
       mov      rcx, gword ptr [rbp+10H]
       mov      ecx, dword ptr [rcx+32]
       mov      dword ptr [rbp-08H], ecx
       mov      ecx, dword ptr [rbp-08H]
       mov      edx, dword ptr [rbp+20H]
       call     SerializationHelpers:GetAlignmentError(int,int):int
       add      eax, dword ptr [rbp-08H]
       jo       SHORT G_M9104_IG06
       mov      dword ptr [rbp-0CH], eax
       mov      eax, dword ptr [rbp-0CH]
       add      eax, dword ptr [rbp+18H]
       jo       SHORT G_M9104_IG06
       mov      dword ptr [rbp-04H], eax
       mov      eax, dword ptr [rbp-0CH]
       mov      dword ptr [rbp-10H], eax
       mov      eax, dword ptr [rbp-04H]
       mov      rcx, gword ptr [rbp+10H]
       cmp      eax, dword ptr [rcx+36]
       jl       SHORT G_M9104_IG04
						;; bbWeight=1    PerfScore 21.00
G_M9104_IG03:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-18H], rax
       mov      rcx, gword ptr [rbp-18H]
       call     BufferTooSmallException:.ctor():this
       mov      rcx, gword ptr [rbp-18H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M9104_IG04:
       mov      rax, gword ptr [rbp+10H]
       mov      ecx, dword ptr [rbp-04H]
       mov      dword ptr [rax+32], ecx
       mov      eax, dword ptr [rbp-10H]
						;; bbWeight=1    PerfScore 4.00
G_M9104_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M9104_IG06:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 156, prolog size 25, PerfScore 42.80, (MethodHash=7bfddc6f) for method SerializationContext:AllocateSpace(int,int):int:this
; ============================================================

; Assembly listing for method SerializationHelpers:GetAlignmentError(int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )     int  ->  [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M9326_IG01:
       push     rbp
       mov      rbp, rsp
       mov      dword ptr [rbp+10H], ecx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M9326_IG02:
       mov      eax, dword ptr [rbp+10H]
       neg      eax
       mov      edx, dword ptr [rbp+18H]
       dec      edx
       and      eax, edx
						;; bbWeight=1    PerfScore 2.75
G_M9326_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 24, prolog size 4, PerfScore 9.90, (MethodHash=5a68db91) for method SerializationHelpers:GetAlignmentError(int,int):int
; ============================================================

; Assembly listing for method SpanWriterExtensions:WriteUOffset(SpanWriter,Span`1,int,int,SerializationContext)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 loc0         [V05    ] (  1,  1   )     int  ->  [rbp-0x04]   must-init
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07    ] (  1,  1   )  struct (16) [rbp-0x18]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V08 tmp2         [V08    ] (  1,  1   )   byref  ->  [rbp-0x20]   must-init "argument with side effect"
;
; Lcl frame size = 80

G_M14786_IG01:
       push     rbp
       sub      rsp, 80
       vzeroupper 
       lea      rbp, [rsp+50H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       vmovdqa  xmmword ptr [rbp-10H], xmm4
       mov      qword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M14786_IG02:
       mov      ecx, dword ptr [rbp+28H]
       sub      ecx, dword ptr [rbp+20H]
       jo       SHORT G_M14786_IG06
       test     ecx, ecx
       jl       SHORT G_M14786_IG06
       mov      dword ptr [rbp-04H], ecx
       lea      rcx, bword ptr [rbp+10H]
       mov      bword ptr [rbp-20H], rcx
       mov      rcx, bword ptr [rbp+18H]
						;; bbWeight=1    PerfScore 7.75
G_M14786_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-18H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M14786_IG04:
       mov      rcx, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp-20H]
       lea      rdx, bword ptr [rbp-18H]
       mov      r8d, dword ptr [rbp-04H]
       mov      r9d, dword ptr [rbp+20H]
       call     SpanWriter:WriteUInt(Span`1,int,int,SerializationContext):this
       nop      
						;; bbWeight=1    PerfScore 6.75
G_M14786_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M14786_IG06:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 122, prolog size 27, PerfScore 32.20, (MethodHash=28bfc63d) for method SpanWriterExtensions:WriteUOffset(SpanWriter,Span`1,int,int,SerializationContext)
; ============================================================

; Assembly listing for method SpanWriter:WriteUInt(Span`1,int,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]   ld-addr-op
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V06 tmp1         [V06    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V07 tmp2         [V07    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 64

G_M40453_IG01:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       vmovdqa  xmmword ptr [rbp-10H], xmm4
       mov      bword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 9.08
G_M40453_IG02:
       lea      rdx, [rbp-10H]
       mov      rcx, bword ptr [rbp+18H]
       mov      r8d, dword ptr [rbp+28H]
       call     Span`1:Slice(int):Span`1:this
						;; bbWeight=1    PerfScore 3.50
G_M40453_IG03:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M40453_IG04:
       lea      rcx, bword ptr [rbp-20H]
       mov      edx, dword ptr [rbp+20H]
       call     BinaryPrimitives:WriteUInt32LittleEndian(Span`1,int)
       nop      
						;; bbWeight=1    PerfScore 2.75
G_M40453_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 89, prolog size 27, PerfScore 28.73, (MethodHash=6e8061fa) for method SpanWriter:WriteUInt(Span`1,int,int,SerializationContext):this
; ============================================================

; Assembly listing for method ScalarTable:get_Struct():Struct:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M23870_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M23870_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      rax, gword ptr [rax+8]
						;; bbWeight=1    PerfScore 3.00
G_M23870_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 18, prolog size 4, PerfScore 8.55, (MethodHash=5e52a2c1) for method ScalarTable:get_Struct():Struct:this
; ============================================================

; Assembly listing for method ScalarTable:get_A():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M8332_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M8332_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+16]
						;; bbWeight=1    PerfScore 3.00
G_M8332_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=c362df73) for method ScalarTable:get_A():int:this
; ============================================================

; Assembly listing for method ScalarTable:get_B():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M56559_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M56559_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+20]
						;; bbWeight=1    PerfScore 3.00
G_M56559_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=f6af2310) for method ScalarTable:get_B():int:this
; ============================================================

; Assembly listing for method ScalarTable:get_C():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M26830_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M26830_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+24]
						;; bbWeight=1    PerfScore 3.00
G_M26830_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=7ce99731) for method ScalarTable:get_C():int:this
; ============================================================

; Assembly listing for method GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V06 tmp1         [V06    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V07 tmp2         [V07    ] (  1,  1   )   byref  ->  [rbp-0x18]   must-init "argument with side effect"
;
; Lcl frame size = 64

G_M24048_IG01:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqu  xmmword ptr [rbp-18H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 9.33
G_M24048_IG02:
       lea      rcx, bword ptr [rbp+10H]
       mov      bword ptr [rbp-18H], rcx
       mov      rcx, bword ptr [rbp+18H]
						;; bbWeight=1    PerfScore 2.50
G_M24048_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-10H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M24048_IG04:
       mov      rcx, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], rcx
       mov      rcx, bword ptr [rbp-18H]
       lea      rdx, bword ptr [rbp-10H]
       mov      r8d, dword ptr [rbp+20H]
       mov      r9d, dword ptr [rbp+28H]
       call     SpanWriter:WriteInt(Span`1,int,int,SerializationContext):this
       nop      
						;; bbWeight=1    PerfScore 6.75
G_M24048_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 102, prolog size 28, PerfScore 34.18, (MethodHash=774da20f) for method GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
; ============================================================

; Assembly listing for method SpanWriter:WriteInt(Span`1,int,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]   ld-addr-op
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V06 tmp1         [V06    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V07 tmp2         [V07    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 64

G_M8400_IG01:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       vmovdqa  xmmword ptr [rbp-10H], xmm4
       mov      bword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 9.08
G_M8400_IG02:
       lea      rdx, [rbp-10H]
       mov      rcx, bword ptr [rbp+18H]
       mov      r8d, dword ptr [rbp+28H]
       call     Span`1:Slice(int):Span`1:this
						;; bbWeight=1    PerfScore 3.50
G_M8400_IG03:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M8400_IG04:
       lea      rcx, bword ptr [rbp-20H]
       mov      edx, dword ptr [rbp+20H]
       call     BinaryPrimitives:WriteInt32LittleEndian(Span`1,int)
       nop      
						;; bbWeight=1    PerfScore 2.75
G_M8400_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 89, prolog size 27, PerfScore 28.73, (MethodHash=88d1df2f) for method SpanWriter:WriteInt(Span`1,int,int,SerializationContext):this
; ============================================================

; Assembly listing for method SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]   ld-addr-op
;  V02 arg2         [V02    ] (  1,  1   )  ushort  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V06 tmp1         [V06    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V07 tmp2         [V07    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 64

G_M9456_IG01:
       push     rbp
       sub      rsp, 64
       vzeroupper 
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       vmovdqa  xmmword ptr [rbp-10H], xmm4
       mov      bword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 9.08
G_M9456_IG02:
       lea      rdx, [rbp-10H]
       mov      rcx, bword ptr [rbp+18H]
       mov      r8d, dword ptr [rbp+28H]
       call     Span`1:Slice(int):Span`1:this
						;; bbWeight=1    PerfScore 3.50
G_M9456_IG03:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M9456_IG04:
       lea      rcx, bword ptr [rbp-20H]
       mov      edx, dword ptr [rbp+20H]
       movzx    rdx, dx
       call     BinaryPrimitives:WriteUInt16LittleEndian(Span`1,ushort)
       nop      
						;; bbWeight=1    PerfScore 3.00
G_M9456_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 92, prolog size 27, PerfScore 29.28, (MethodHash=680bdb0f) for method SpanWriter:WriteUShort(Span`1,ushort,int,SerializationContext):this
; ============================================================

; Assembly listing for method GeneratedSerializer:WriteInlineValueOf_ad8721f46daa4ecf8d0a074bda86da39(SpanWriter,Span`1,Struct,int,SerializationContext)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]   ld-addr-op
;  V02 arg2         [V02    ] (  1,  1   )     ref  ->  [rbp+0x20]   class-hnd
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 arg4         [V04    ] (  1,  1   )     ref  ->  [rbp+0x30]   class-hnd
;  V05 loc0         [V05    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (40) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V08 tmp2         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init "argument with side effect"
;  V09 tmp3         [V09    ] (  1,  1   )     int  ->  [rbp-0x2C]   "argument with side effect"
;  V10 tmp4         [V10    ] (  1,  1   )     int  ->  [rbp-0x30]   "argument with side effect"
;  V11 tmp5         [V11    ] (  1,  1   )  struct (16) [rbp-0x40]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V12 tmp6         [V12    ] (  1,  1   )     ref  ->  [rbp-0x48]   must-init "argument with side effect"
;  V13 tmp7         [V13    ] (  1,  1   )     int  ->  [rbp-0x4C]   "argument with side effect"
;  V14 tmp8         [V14    ] (  1,  1   )     int  ->  [rbp-0x50]   "argument with side effect"
;  V15 tmp9         [V15    ] (  1,  1   )  struct (16) [rbp-0x60]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V16 tmp10        [V16    ] (  1,  1   )     ref  ->  [rbp-0x68]   must-init "argument with side effect"
;  V17 tmp11        [V17    ] (  1,  1   )     int  ->  [rbp-0x6C]   "argument with side effect"
;  V18 tmp12        [V18    ] (  1,  1   )     int  ->  [rbp-0x70]   "argument with side effect"
;  V19 tmp13        [V19    ] (  1,  1   )  struct (16) [rbp-0x80]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V20 tmp14        [V20    ] (  1,  1   )     ref  ->  [rbp-0x88]   must-init "argument with side effect"
;  V21 tmp15        [V21    ] (  1,  1   )     int  ->  [rbp-0x8C]   "argument with side effect"
;  V22 tmp16        [V22    ] (  1,  1   )     int  ->  [rbp-0x90]   "argument with side effect"
;  V23 tmp17        [V23    ] (  1,  1   )  struct (16) [rbp-0xA0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V24 tmp18        [V24    ] (  1,  1   )     ref  ->  [rbp-0xA8]   must-init "argument with side effect"
;  V25 tmp19        [V25    ] (  1,  1   )     int  ->  [rbp-0xAC]   "argument with side effect"
;  V26 tmp20        [V26    ] (  1,  1   )     int  ->  [rbp-0xB0]   "argument with side effect"
;  V27 tmp21        [V27    ] (  1,  1   )  struct (16) [rbp-0xC0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V28 tmp22        [V28    ] (  1,  1   )     ref  ->  [rbp-0xC8]   must-init "argument with side effect"
;  V29 tmp23        [V29    ] (  1,  1   )     int  ->  [rbp-0xCC]   "argument with side effect"
;  V30 tmp24        [V30    ] (  1,  1   )     int  ->  [rbp-0xD0]   "argument with side effect"
;  V31 tmp25        [V31    ] (  1,  1   )  struct (16) [rbp-0xE0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V32 tmp26        [V32    ] (  1,  1   )     ref  ->  [rbp-0xE8]   must-init "argument with side effect"
;  V33 tmp27        [V33    ] (  1,  1   )     int  ->  [rbp-0xEC]   "argument with side effect"
;  V34 tmp28        [V34    ] (  1,  1   )     int  ->  [rbp-0xF0]   "argument with side effect"
;  V35 tmp29        [V35    ] (  1,  1   )  struct (16) [rbp-0x100]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V36 tmp30        [V36    ] (  1,  1   )     ref  ->  [rbp-0x108]   must-init "argument with side effect"
;  V37 tmp31        [V37    ] (  1,  1   )     int  ->  [rbp-0x10C]   "argument with side effect"
;  V38 tmp32        [V38    ] (  1,  1   )     int  ->  [rbp-0x110]   "argument with side effect"
;  V39 tmp33        [V39    ] (  1,  1   )  struct (16) [rbp-0x120]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V40 tmp34        [V40    ] (  1,  1   )     ref  ->  [rbp-0x128]   must-init "argument with side effect"
;  V41 tmp35        [V41    ] (  1,  1   )     int  ->  [rbp-0x12C]   "argument with side effect"
;  V42 tmp36        [V42    ] (  1,  1   )     int  ->  [rbp-0x130]   "argument with side effect"
;  V43 tmp37        [V43    ] (  1,  1   )  struct (16) [rbp-0x140]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V44 tmp38        [V44    ] (  1,  1   )     ref  ->  [rbp-0x148]   must-init "argument with side effect"
;  V45 tmp39        [V45    ] (  1,  1   )     int  ->  [rbp-0x14C]   "argument with side effect"
;  V46 tmp40        [V46    ] (  1,  1   )     int  ->  [rbp-0x150]   "argument with side effect"
;  V47 tmp41        [V47    ] (  1,  1   )  struct (16) [rbp-0x160]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V48 tmp42        [V48    ] (  1,  1   )     ref  ->  [rbp-0x168]   must-init "argument with side effect"
;  V49 tmp43        [V49    ] (  1,  1   )     int  ->  [rbp-0x16C]   "argument with side effect"
;  V50 tmp44        [V50    ] (  1,  1   )     int  ->  [rbp-0x170]   "argument with side effect"
;  V51 tmp45        [V51    ] (  1,  1   )  struct (16) [rbp-0x180]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V52 tmp46        [V52    ] (  1,  1   )     ref  ->  [rbp-0x188]   must-init "argument with side effect"
;  V53 tmp47        [V53    ] (  1,  1   )     int  ->  [rbp-0x18C]   "argument with side effect"
;  V54 tmp48        [V54    ] (  1,  1   )     int  ->  [rbp-0x190]   "argument with side effect"
;  V55 tmp49        [V55    ] (  1,  1   )  struct (16) [rbp-0x1A0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V56 tmp50        [V56    ] (  1,  1   )     ref  ->  [rbp-0x1A8]   must-init "argument with side effect"
;  V57 tmp51        [V57    ] (  1,  1   )     int  ->  [rbp-0x1AC]   "argument with side effect"
;  V58 tmp52        [V58    ] (  1,  1   )     int  ->  [rbp-0x1B0]   "argument with side effect"
;  V59 tmp53        [V59    ] (  1,  1   )  struct (16) [rbp-0x1C0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V60 tmp54        [V60    ] (  1,  1   )     ref  ->  [rbp-0x1C8]   must-init "argument with side effect"
;  V61 tmp55        [V61    ] (  1,  1   )     int  ->  [rbp-0x1CC]   "argument with side effect"
;  V62 tmp56        [V62    ] (  1,  1   )     int  ->  [rbp-0x1D0]   "argument with side effect"
;  V63 tmp57        [V63    ] (  1,  1   )  struct (16) [rbp-0x1E0]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V64 tmp58        [V64    ] (  1,  1   )     ref  ->  [rbp-0x1E8]   must-init "argument with side effect"
;  V65 tmp59        [V65    ] (  1,  1   )     int  ->  [rbp-0x1EC]   "argument with side effect"
;  V66 tmp60        [V66    ] (  1,  1   )     int  ->  [rbp-0x1F0]   "argument with side effect"
;  V67 tmp61        [V67    ] (  1,  1   )  struct (16) [rbp-0x200]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V68 tmp62        [V68    ] (  1,  1   )     ref  ->  [rbp-0x208]   must-init "argument with side effect"
;  V69 tmp63        [V69    ] (  1,  1   )     int  ->  [rbp-0x20C]   "argument with side effect"
;  V70 tmp64        [V70    ] (  1,  1   )     int  ->  [rbp-0x210]   "argument with side effect"
;
; Lcl frame size = 576

G_M12429_IG01:
       push     rbp
       sub      rsp, 576
       vzeroupper 
       lea      rbp, [rsp+240H]
       xor      rax, rax
       mov      qword ptr [rbp-208H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-200H], xmm4
       vmovdqa  xmmword ptr [rbp-1F0H], xmm4
       mov      rax, -480
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+20H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      qword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
       mov      gword ptr [rbp+20H], r8
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 14.83
G_M12429_IG02:
       lea      rdx, [rbp-10H]
       mov      rcx, bword ptr [rbp+18H]
       mov      r8d, dword ptr [rbp+28H]
       mov      r9d, 64
       call     Span`1:Slice(int,int):Span`1:this
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-30H], ecx
						;; bbWeight=1    PerfScore 5.75
G_M12429_IG03:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG04:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-28H], rax
       mov      rcx, gword ptr [rbp-28H]
       xor      edx, edx
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-2CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-2CH]
       lea      rdx, bword ptr [rbp-20H]
       mov      ecx, dword ptr [rbp-30H]
       xor      r9d, r9d
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-50H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG05:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-40H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG06:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-48H], rax
       mov      rcx, gword ptr [rbp-48H]
       mov      edx, 1
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-4CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-4CH]
       lea      rdx, bword ptr [rbp-40H]
       mov      ecx, dword ptr [rbp-50H]
       mov      r9d, 4
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-70H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG07:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-60H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG08:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-68H], rax
       mov      rcx, gword ptr [rbp-68H]
       mov      edx, 2
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-6CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-6CH]
       lea      rdx, bword ptr [rbp-60H]
       mov      ecx, dword ptr [rbp-70H]
       mov      r9d, 8
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-90H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG09:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-80H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG10:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-88H], rax
       mov      rcx, gword ptr [rbp-88H]
       mov      edx, 3
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-8CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-8CH]
       lea      rdx, bword ptr [rbp-80H]
       mov      ecx, dword ptr [rbp-90H]
       mov      r9d, 12
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-B0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG11:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-A0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG12:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-A8H], rax
       mov      rcx, gword ptr [rbp-A8H]
       mov      edx, 4
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-ACH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-ACH]
       lea      rdx, bword ptr [rbp-A0H]
       mov      ecx, dword ptr [rbp-B0H]
       mov      r9d, 16
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-D0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG13:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG14:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-C8H], rax
       mov      rcx, gword ptr [rbp-C8H]
       mov      edx, 5
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-CCH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-CCH]
       lea      rdx, bword ptr [rbp-C0H]
       mov      ecx, dword ptr [rbp-D0H]
       mov      r9d, 20
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-F0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG15:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-E0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG16:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-E8H], rax
       mov      rcx, gword ptr [rbp-E8H]
       mov      edx, 6
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-ECH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-ECH]
       lea      rdx, bword ptr [rbp-E0H]
       mov      ecx, dword ptr [rbp-F0H]
       mov      r9d, 24
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-110H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG17:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-100H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG18:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-108H], rax
       mov      rcx, gword ptr [rbp-108H]
       mov      edx, 7
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-10CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-10CH]
       lea      rdx, bword ptr [rbp-100H]
       mov      ecx, dword ptr [rbp-110H]
       mov      r9d, 28
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-130H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG19:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-120H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG20:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-128H], rax
       mov      rcx, gword ptr [rbp-128H]
       mov      edx, 8
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-12CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-12CH]
       lea      rdx, bword ptr [rbp-120H]
       mov      ecx, dword ptr [rbp-130H]
       mov      r9d, 32
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-150H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG21:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-140H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG22:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-148H], rax
       mov      rcx, gword ptr [rbp-148H]
       mov      edx, 9
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-14CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-14CH]
       lea      rdx, bword ptr [rbp-140H]
       mov      ecx, dword ptr [rbp-150H]
       mov      r9d, 36
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-170H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG23:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-160H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG24:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-168H], rax
       mov      rcx, gword ptr [rbp-168H]
       mov      edx, 10
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-16CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-16CH]
       lea      rdx, bword ptr [rbp-160H]
       mov      ecx, dword ptr [rbp-170H]
       mov      r9d, 40
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-190H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG25:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-180H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG26:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-188H], rax
       mov      rcx, gword ptr [rbp-188H]
       mov      edx, 11
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-18CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-18CH]
       lea      rdx, bword ptr [rbp-180H]
       mov      ecx, dword ptr [rbp-190H]
       mov      r9d, 44
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-1B0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG27:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-1A0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG28:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-1A8H], rax
       mov      rcx, gword ptr [rbp-1A8H]
       mov      edx, 12
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-1ACH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-1ACH]
       lea      rdx, bword ptr [rbp-1A0H]
       mov      ecx, dword ptr [rbp-1B0H]
       mov      r9d, 48
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-1D0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG29:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-1C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG30:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-1C8H], rax
       mov      rcx, gword ptr [rbp-1C8H]
       mov      edx, 13
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-1CCH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-1CCH]
       lea      rdx, bword ptr [rbp-1C0H]
       mov      ecx, dword ptr [rbp-1D0H]
       mov      r9d, 52
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-1F0H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG31:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-1E0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG32:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-1E8H], rax
       mov      rcx, gword ptr [rbp-1E8H]
       mov      edx, 14
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-1ECH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-1ECH]
       lea      rdx, bword ptr [rbp-1E0H]
       mov      ecx, dword ptr [rbp-1F0H]
       mov      r9d, 56
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       movsx    rcx, byte  ptr [rbp+10H]
       mov      dword ptr [rbp-210H], ecx
						;; bbWeight=1    PerfScore 18.00
G_M12429_IG33:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-200H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M12429_IG34:
       mov      rcx, gword ptr [rbp+20H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get_Int():IntVector:this
       mov      gword ptr [rbp-208H], rax
       mov      rcx, gword ptr [rbp-208H]
       mov      edx, 15
       cmp      dword ptr [rcx], ecx
       call     IntVector:get_Item(int):int:this
       mov      dword ptr [rbp-20CH], eax
       mov      r8, gword ptr [rbp+30H]
       mov      gword ptr [rsp+20H], r8
       mov      r8d, dword ptr [rbp-20CH]
       lea      rdx, bword ptr [rbp-200H]
       mov      ecx, dword ptr [rbp-210H]
       mov      r9d, 60
       call     GeneratedSerializer:WriteInlineValueOf_871da7cf3f784556aa1b530f1148d63c(SpanWriter,Span`1,int,int,SerializationContext)
       nop      
						;; bbWeight=1    PerfScore 16.25
G_M12429_IG35:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 1755, prolog size 81, PerfScore 520.13, (MethodHash=8f3fcf72) for method GeneratedSerializer:WriteInlineValueOf_ad8721f46daa4ecf8d0a074bda86da39(SpanWriter,Span`1,Struct,int,SerializationContext)
; ============================================================

; Assembly listing for method Struct:get_Int():IntVector:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M47392_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M47392_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      rax, gword ptr [rax+8]
						;; bbWeight=1    PerfScore 3.00
G_M47392_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 18, prolog size 4, PerfScore 8.55, (MethodHash=da5846df) for method Struct:get_Int():IntVector:this
; ============================================================

; Assembly listing for method IntVector:get_Item(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 loc0         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd exact "NewObj constructor temp"
;  V05 tmp2         [V05    ] (  1,  1   )     int  ->  [rbp-0x14]   "Single return block return value"
;
; Lcl frame size = 64

G_M35569_IG01:
       push     rbp
       sub      rsp, 64
       lea      rbp, [rsp+40H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp-10H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 6.00
G_M35569_IG02:
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+8]
       mov      gword ptr [rbp-08H], rcx
       cmp      dword ptr [rbp+18H], 15
       ja       SHORT G_M35569_IG03
       mov      ecx, dword ptr [rbp+18H]
       mov      ecx, ecx
       lea      rax, [reloc @RWD00]
       mov      eax, dword ptr [rax+4*rcx]
       lea      rdx, G_M35569_IG02
       add      rax, rdx
       jmp      rax
						;; bbWeight=1    PerfScore 13.00
G_M35569_IG03:
       jmp      G_M35569_IG20
						;; bbWeight=0    PerfScore 0.00
G_M35569_IG04:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_0():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG05:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_1():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG06:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_2():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG07:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_3():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG08:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_4():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG09:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_5():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG10:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_6():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG11:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_7():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG12:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_8():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG13:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_9():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG14:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_10():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG15:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_11():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG16:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_12():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG17:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_13():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG18:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_14():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG19:
       mov      rcx, gword ptr [rbp-08H]
       cmp      dword ptr [rcx], ecx
       call     Struct:get___flatsharp__Int_15():int:this
       mov      dword ptr [rbp-14H], eax
       jmp      SHORT G_M35569_IG21
						;; bbWeight=1    PerfScore 7.00
G_M35569_IG20:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-10H], rax
       mov      rcx, gword ptr [rbp-10H]
       call     IndexOutOfRangeException:.ctor():this
       mov      rcx, gword ptr [rbp-10H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M35569_IG21:
       mov      eax, dword ptr [rbp-14H]
						;; bbWeight=1    PerfScore 1.00
G_M35569_IG22:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
RWD00  dd	G_M35569_IG04 - G_M35569_IG02
       dd	G_M35569_IG05 - G_M35569_IG02
       dd	G_M35569_IG06 - G_M35569_IG02
       dd	G_M35569_IG07 - G_M35569_IG02
       dd	G_M35569_IG08 - G_M35569_IG02
       dd	G_M35569_IG09 - G_M35569_IG02
       dd	G_M35569_IG10 - G_M35569_IG02
       dd	G_M35569_IG11 - G_M35569_IG02
       dd	G_M35569_IG12 - G_M35569_IG02
       dd	G_M35569_IG13 - G_M35569_IG02
       dd	G_M35569_IG14 - G_M35569_IG02
       dd	G_M35569_IG15 - G_M35569_IG02
       dd	G_M35569_IG16 - G_M35569_IG02
       dd	G_M35569_IG17 - G_M35569_IG02
       dd	G_M35569_IG18 - G_M35569_IG02
       dd	G_M35569_IG19 - G_M35569_IG02


; Total bytes of code 409, prolog size 20, PerfScore 174.90, (MethodHash=8e44750e) for method IntVector:get_Item(int):int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_0():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M9905_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M9905_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+16]
						;; bbWeight=1    PerfScore 3.00
G_M9905_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=c53cd94e) for method Struct:get___flatsharp__Int_0():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_1():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M45712_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M45712_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+20]
						;; bbWeight=1    PerfScore 3.00
G_M45712_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=4b774d6f) for method Struct:get___flatsharp__Int_1():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_2():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M28403_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M28403_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+24]
						;; bbWeight=1    PerfScore 3.00
G_M28403_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=7ec3910c) for method Struct:get___flatsharp__Int_2():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_3():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M64210_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M64210_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+28]
						;; bbWeight=1    PerfScore 3.00
G_M64210_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=04fe052d) for method Struct:get___flatsharp__Int_3():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_4():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M46389_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M46389_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+32]
						;; bbWeight=1    PerfScore 3.00
G_M46389_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=33dd4aca) for method Struct:get___flatsharp__Int_4():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_5():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M16660_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M16660_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+36]
						;; bbWeight=1    PerfScore 3.00
G_M16660_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=ba17beeb) for method Struct:get___flatsharp__Int_5():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_6():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M64887_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M64887_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+40]
						;; bbWeight=1    PerfScore 3.00
G_M64887_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=ed640288) for method Struct:get___flatsharp__Int_6():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_7():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M35158_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M35158_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+44]
						;; bbWeight=1    PerfScore 3.00
G_M35158_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=739e76a9) for method Struct:get___flatsharp__Int_7():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_8():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M34745_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M34745_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+48]
						;; bbWeight=1    PerfScore 3.00
G_M34745_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=a4f07846) for method Struct:get___flatsharp__Int_8():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_9():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M5016_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M5016_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+52]
						;; bbWeight=1    PerfScore 3.00
G_M5016_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=2b2aec67) for method Struct:get___flatsharp__Int_9():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_10():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M54464_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M54464_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+56]
						;; bbWeight=1    PerfScore 3.00
G_M54464_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=787c2b3f) for method Struct:get___flatsharp__Int_10():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_11():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M18657_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M18657_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+60]
						;; bbWeight=1    PerfScore 3.00
G_M18657_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=f241b71e) for method Struct:get___flatsharp__Int_11():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_12():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M39938_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M39938_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+64]
						;; bbWeight=1    PerfScore 3.00
G_M39938_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=37ca63fd) for method Struct:get___flatsharp__Int_12():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_13():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M4131_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M4131_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+68]
						;; bbWeight=1    PerfScore 3.00
G_M4131_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=b18fefdc) for method Struct:get___flatsharp__Int_13():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_14():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M25412_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M25412_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+72]
						;; bbWeight=1    PerfScore 3.00
G_M25412_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=e71c9cbb) for method Struct:get___flatsharp__Int_14():int:this
; ============================================================

; Assembly listing for method Struct:get___flatsharp__Int_15():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M55141_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M55141_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+76]
						;; bbWeight=1    PerfScore 3.00
G_M55141_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=60e2289a) for method Struct:get___flatsharp__Int_15():int:this
; ============================================================

; Assembly listing for method SerializationContext:get_Offset():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M4769_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.25
G_M4769_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      eax, dword ptr [rax+32]
						;; bbWeight=1    PerfScore 3.00
G_M4769_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 17, prolog size 4, PerfScore 8.45, (MethodHash=b5c7ed5e) for method SerializationContext:get_Offset():int:this
; ============================================================

; Assembly listing for method SerializationContext:FinishVTable(Span`1,Span`1):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 this         [V00,T21] (  4,  3.50)     ref  ->  rsi         this class-hnd
;  V01 arg1         [V01,T10] (  4,  8   )   byref  ->  rdx         ld-addr-op
;  V02 arg2         [V02,T11] (  4,  8   )   byref  ->   r8         ld-addr-op
;  V03 loc0         [V03,T06] ( 19, 17.50)     ref  ->  r15         class-hnd
;  V04 loc1         [V04,T20] (  3,  6   )     int  ->  r12        
;  V05 loc2         [V05,T32] (  7,  3.50)     int  ->  rsi        
;  V06 loc3         [V06,T02] ( 15, 29   )     int  ->  r13        
;  V07 loc4         [V07,T07] (  5, 16.50)     int  ->  [rsp+0x24]  
;* V08 loc5         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op
;  V09 OutArgs      [V09    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V10 tmp1         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp2         [V11    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V12 tmp3         [V12    ] (  0,  0   )  struct (16) zero-ref    "impAppendStmt"
;* V13 tmp4         [V13    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V14 tmp5         [V14    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V15 tmp6         [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V16 tmp7         [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp8         [V17    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V18 tmp9         [V18    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V19 tmp10        [V19,T04] (  2, 16   )     int  ->   r8         "Inlining Arg"
;* V20 tmp11        [V20    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V21 tmp12        [V21    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V22 tmp13        [V22    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V23 tmp14        [V23    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V24 tmp15        [V24    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V25 tmp16        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V26 tmp17        [V26    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V27 tmp18        [V27,T17] (  2,  8   )  ushort  ->  rdx         "Inline stloc first use temp"
;* V28 tmp19        [V28    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V29 tmp20        [V29    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V30 tmp21        [V30    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V31 tmp22        [V31    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V32 tmp23        [V32,T00] (  3, 24   )     int  ->  rdx         "Inlining Arg"
;* V33 tmp24        [V33    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V34 tmp25        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V35 tmp26        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp27        [V36    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V37 tmp28        [V37    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V38 tmp29        [V38    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V39 tmp30        [V39    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V40 tmp31        [V40    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V41 tmp32        [V41    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;  V42 tmp33        [V42,T25] (  2,  4   )    bool  ->  rax         "Inline return value spill temp"
;* V43 tmp34        [V43    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V44 tmp35        [V44,T26] (  2,  4   )     int  ->   r8         "Inline stloc first use temp"
;* V45 tmp36        [V45    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V46 tmp37        [V46    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;* V47 tmp38        [V47,T54] (  0,  0   )    long  ->  zero-ref    "Inline stloc first use temp"
;* V48 tmp39        [V48    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;* V49 tmp40        [V49    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V50 tmp41        [V50    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V51 tmp42        [V51    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V52 tmp43        [V52    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V53 tmp44        [V53    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V54 tmp45        [V54    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V55 tmp46        [V55,T33] (  6,  3   )     int  ->  rcx         "Inline stloc first use temp"
;  V56 tmp47        [V56,T63] (  2,  1   )     int  ->   r9         "Inline stloc first use temp"
;  V57 tmp48        [V57,T45] (  2,  2   )     int  ->  r10         "Inlining Arg"
;* V58 tmp49        [V58    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V59 tmp50        [V59    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V60 tmp51        [V60    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V61 tmp52        [V61    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V62 tmp53        [V62,T46] (  2,  2   )     int  ->  r14         "Inlining Arg"
;* V63 tmp54        [V63    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V64 tmp55        [V64    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V65 tmp56        [V65    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V66 tmp57        [V66    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V67 tmp58        [V67    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;  V68 tmp59        [V68,T47] (  2,  2   )    long  ->   r8         "Inlining Arg"
;* V69 tmp60        [V69    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;* V70 tmp61        [V70    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;* V71 tmp62        [V71    ] (  0,  0   )   byref  ->  zero-ref    "impAppendStmt"
;* V72 tmp63        [V72    ] (  0,  0   )    long  ->  zero-ref    "Inlining Arg"
;  V73 tmp64        [V73,T55] (  3,  1.50)     ref  ->  rax         class-hnd "Inline stloc first use temp"
;  V74 tmp65        [V74,T40] (  4,  2   )     int  ->  rcx         "Inline stloc first use temp"
;  V75 tmp66        [V75,T18] (  7,  7   )     int  ->  rdx         "Inlining Arg"
;  V76 tmp67        [V76,T38] (  5,  2.50)     int  ->  rdi         "Inline stloc first use temp"
;  V77 tmp68        [V77,T64] (  2,  1   )     int  ->  rbx         "Inline stloc first use temp"
;  V78 tmp69        [V78,T22] (  3,  5.50)   byref  ->  rbp         V133._pointer(offs=0x00) P-INDEP "field V01._pointer (fldOffset=0x0)"
;  V79 tmp70        [V79,T09] (  5, 10   )     int  ->  r14         V133._length(offs=0x08) P-INDEP "field V01._length (fldOffset=0x8)"
;  V80 tmp71        [V80,T08] (  3,  3.50)   byref  ->  rdi         V134._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V81 tmp72        [V81,T19] (  5,  6.50)     int  ->  rbx         V134._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;  V82 tmp73        [V82,T01] (  5, 18   )   byref  ->  rcx         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V83 tmp74        [V83,T05] (  6, 22   )     int  ->   r8         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V84 tmp75        [V84    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V85 tmp76        [V85    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V86 tmp77        [V86,T23] (  2,  4   )   byref  ->  rcx         V12._pointer(offs=0x00) P-INDEP "field V12._pointer (fldOffset=0x0)"
;* V87 tmp78        [V87    ] (  0,  0   )     int  ->  zero-ref    V12._length(offs=0x08) P-INDEP "field V12._length (fldOffset=0x8)"
;* V88 tmp79        [V88,T50] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;* V89 tmp80        [V89    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V90 tmp81        [V90,T59] (  2,  1   )   byref  ->  rcx         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;* V91 tmp82        [V91    ] (  0,  0   )     int  ->  zero-ref    V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;* V92 tmp83        [V92    ] (  0,  0   )   byref  ->  zero-ref    V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;* V93 tmp84        [V93    ] (  0,  0   )     int  ->  zero-ref    V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V94 tmp85        [V94,T12] (  2,  8   )   byref  ->  rcx         V18._value(offs=0x00) P-INDEP "field V18._value (fldOffset=0x0)"
;* V95 tmp86        [V95    ] (  0,  0   )   byref  ->  zero-ref    V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V96 tmp87        [V96    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V97 tmp88        [V97,T13] (  2,  8   )   byref  ->  rcx         V21._pointer(offs=0x00) P-INDEP "field V21._pointer (fldOffset=0x0)"
;* V98 tmp89        [V98,T30] (  0,  0   )     int  ->  zero-ref    V21._length(offs=0x08) P-INDEP "field V21._length (fldOffset=0x8)"
;  V99 tmp90        [V99,T14] (  2,  8   )   byref  ->  rcx         V23._value(offs=0x00) P-INDEP "field V23._value (fldOffset=0x0)"
;* V100 tmp91       [V100,T27] (  0,  0   )   byref  ->  zero-ref    V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V101 tmp92       [V101    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;* V102 tmp93       [V102,T28] (  0,  0   )   byref  ->  zero-ref    V26._pointer(offs=0x00) P-INDEP "field V26._pointer (fldOffset=0x0)"
;* V103 tmp94       [V103    ] (  0,  0   )     int  ->  zero-ref    V26._length(offs=0x08) P-INDEP "field V26._length (fldOffset=0x8)"
;* V104 tmp95       [V104,T29] (  0,  0   )   byref  ->  zero-ref    V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V105 tmp96       [V105    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;* V106 tmp97       [V106    ] (  0,  0   )   byref  ->  zero-ref    V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V107 tmp98       [V107    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V108 tmp99       [V108,T15] (  2,  8   )   byref  ->  rcx         V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V109 tmp100      [V109,T31] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V110 tmp101      [V110,T16] (  2,  8   )   byref  ->  rcx         V36._value(offs=0x00) P-INDEP "field V36._value (fldOffset=0x0)"
;* V111 tmp102      [V111    ] (  0,  0   )   byref  ->  zero-ref    V37._pointer(offs=0x00) P-INDEP "field V37._pointer (fldOffset=0x0)"
;* V112 tmp103      [V112    ] (  0,  0   )     int  ->  zero-ref    V37._length(offs=0x08) P-INDEP "field V37._length (fldOffset=0x8)"
;* V113 tmp104      [V113,T51] (  0,  0   )   byref  ->  zero-ref    V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;* V114 tmp105      [V114    ] (  0,  0   )     int  ->  zero-ref    V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;* V115 tmp106      [V115,T52] (  0,  0   )   byref  ->  zero-ref    V40._value(offs=0x00) P-INDEP "field V40._value (fldOffset=0x0)"
;  V116 tmp107      [V116,T24] (  2,  4   )   byref  ->  rcx         V43._pointer(offs=0x00) P-INDEP "field V43._pointer (fldOffset=0x0)"
;* V117 tmp108      [V117    ] (  0,  0   )     int  ->  zero-ref    V43._length(offs=0x08) P-INDEP "field V43._length (fldOffset=0x8)"
;* V118 tmp109      [V118,T53] (  0,  0   )   byref  ->  zero-ref    V45._pointer(offs=0x00) P-INDEP "field V45._pointer (fldOffset=0x0)"
;* V119 tmp110      [V119    ] (  0,  0   )     int  ->  zero-ref    V45._length(offs=0x08) P-INDEP "field V45._length (fldOffset=0x8)"
;* V120 tmp111      [V120    ] (  0,  0   )   byref  ->  zero-ref    V49._pointer(offs=0x00) P-INDEP "field V49._pointer (fldOffset=0x0)"
;* V121 tmp112      [V121    ] (  0,  0   )     int  ->  zero-ref    V49._length(offs=0x08) P-INDEP "field V49._length (fldOffset=0x8)"
;* V122 tmp113      [V122    ] (  0,  0   )   byref  ->  zero-ref    V51._pointer(offs=0x00) P-INDEP "field V51._pointer (fldOffset=0x0)"
;* V123 tmp114      [V123    ] (  0,  0   )     int  ->  zero-ref    V51._length(offs=0x08) P-INDEP "field V51._length (fldOffset=0x8)"
;* V124 tmp115      [V124    ] (  0,  0   )   byref  ->  zero-ref    V53._pointer(offs=0x00) P-INDEP "field V53._pointer (fldOffset=0x0)"
;* V125 tmp116      [V125    ] (  0,  0   )     int  ->  zero-ref    V53._length(offs=0x08) P-INDEP "field V53._length (fldOffset=0x8)"
;* V126 tmp117      [V126    ] (  0,  0   )   byref  ->  zero-ref    V54._pointer(offs=0x00) P-INDEP "field V54._pointer (fldOffset=0x0)"
;* V127 tmp118      [V127    ] (  0,  0   )     int  ->  zero-ref    V54._length(offs=0x08) P-INDEP "field V54._length (fldOffset=0x8)"
;  V128 tmp119      [V128,T60] (  2,  1   )   byref  ->  rcx         V58._pointer(offs=0x00) P-INDEP "field V58._pointer (fldOffset=0x0)"
;* V129 tmp120      [V129    ] (  0,  0   )     int  ->  zero-ref    V58._length(offs=0x08) P-INDEP "field V58._length (fldOffset=0x8)"
;  V130 tmp121      [V130,T61] (  2,  1   )   byref  ->  rcx         V61._value(offs=0x00) P-INDEP "field V61._value (fldOffset=0x0)"
;  V131 tmp122      [V131,T62] (  2,  1   )   byref  ->  rcx         V63._pointer(offs=0x00) P-INDEP "field V63._pointer (fldOffset=0x0)"
;* V132 tmp123      [V132    ] (  0,  0   )     int  ->  zero-ref    V63._length(offs=0x08) P-INDEP "field V63._length (fldOffset=0x8)"
;* V133 tmp124      [V133    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;* V134 tmp125      [V134    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;  V135 tmp126      [V135,T03] (  3, 24   )     ref  ->   r8         "arr expr"
;  V136 tmp127      [V136,T34] (  3,  3   )     ref  ->   r9         "arr expr"
;  V137 tmp128      [V137,T42] (  2,  2   )     ref  ->  r11         "arr expr"
;  V138 tmp129      [V138,T43] (  2,  2   )     ref  ->  r11         "arr expr"
;  V139 tmp130      [V139,T44] (  2,  2   )     ref  ->   r8         "arr expr"
;  V140 tmp131      [V140,T35] (  3,  3   )     ref  ->  rax         "arr expr"
;  V141 tmp132      [V141,T36] (  3,  3   )     ref  ->   r8         "arr expr"
;* V142 tmp133      [V142,T66] (  0,  0   )     ref  ->  zero-ref    "argument with side effect"
;  V143 tmp134      [V143,T48] (  2,  2   )     int  ->  rdx         "argument with side effect"
;  V144 tmp135      [V144,T49] (  2,  2   )     int  ->   r8         "argument with side effect"
;  V145 cse0        [V145,T57] (  3,  1.50)     int  ->  r10         "CSE - conservative"
;  V146 cse1        [V146,T65] (  2,  1   )     int  ->  rdx         "CSE - conservative"
;  V147 cse2        [V147,T39] (  5,  2.50)     int  ->  rdx         "CSE - conservative"
;  V148 cse3        [V148,T37] (  5,  2.50)     ref  ->   r8         "CSE - conservative"
;  V149 cse4        [V149,T41] (  4,  2   )     int  ->  rcx         "CSE - conservative"
;  V150 cse5        [V150,T56] (  3,  1.50)     ref  ->   r8         "CSE - conservative"
;  V151 cse6        [V151,T58] (  3,  1.50)     int  ->  r10         "CSE - conservative"
;
; Lcl frame size = 40

G_M27506_IG01:
       push     r15
       push     r14
       push     r13
       push     r12
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 40
       mov      rsi, rcx
						;; bbWeight=1    PerfScore 8.50
G_M27506_IG02:
       mov      rdi, bword ptr [r8]
       mov      ebx, dword ptr [r8+8]
       mov      rbp, bword ptr [rdx]
       mov      r14d, dword ptr [rdx+8]
						;; bbWeight=1    PerfScore 8.00
G_M27506_IG03:
       mov      r15, gword ptr [rsi+16]
       mov      r12d, dword ptr [r15+16]
       xor      r13d, r13d
       test     r12d, r12d
       jle      SHORT G_M27506_IG11
						;; bbWeight=1    PerfScore 5.50
G_M27506_IG04:
       cmp      r13d, dword ptr [r15+16]
       jae      G_M27506_IG29
						;; bbWeight=4    PerfScore 12.00
G_M27506_IG05:
       mov      r8, gword ptr [r15+8]
       cmp      r13d, dword ptr [r8+8]
       jae      G_M27506_IG30
       movsxd   rcx, r13d
       mov      eax, dword ptr [r8+4*rcx+16]
       cmp      eax, r14d
       ja       G_M27506_IG27
						;; bbWeight=4    PerfScore 34.00
G_M27506_IG06:
       mov      r8d, r14d
       sub      r8d, eax
       mov      dword ptr [rsp+24H], eax
       movsxd   rcx, eax
       add      rcx, rbp
       cmp      r8d, 2
       jl       G_M27506_IG26
						;; bbWeight=4    PerfScore 13.00
G_M27506_IG07:
       movzx    rdx, word  ptr [rcx]
       mov      r9d, edx
       mov      r8d, r8d
       cmp      r9, r8
       ja       G_M27506_IG27
						;; bbWeight=4    PerfScore 15.00
G_M27506_IG08:
       mov      r8d, edx
       cmp      r8d, ebx
       jne      SHORT G_M27506_IG10
						;; bbWeight=4    PerfScore 6.00
G_M27506_IG09:
       movsxd   r8, r8d
       mov      rdx, rdi
       call     SpanHelpers:SequenceEqual(byref,byref,long):bool
       test     eax, eax
       jne      SHORT G_M27506_IG13
						;; bbWeight=2    PerfScore 5.50
G_M27506_IG10:
       add      r13d, 1
       jo       G_M27506_IG25
       cmp      r13d, r12d
       jl       SHORT G_M27506_IG04
						;; bbWeight=4    PerfScore 10.00
G_M27506_IG11:
       mov      rcx, rsi
       mov      edx, ebx
       mov      r8d, 2
       call     SerializationContext:AllocateSpace(int,int):int:this
       mov      esi, eax
       cmp      esi, r14d
       ja       G_M27506_IG27
						;; bbWeight=0.50 PerfScore 1.63
G_M27506_IG12:
       sub      r14d, esi
       movsxd   rcx, esi
       add      rcx, rbp
       cmp      ebx, r14d
       ja       G_M27506_IG28
       movsxd   r8, ebx
       mov      rdx, rdi
       call     Buffer:Memmove(byref,byref,long)
       inc      dword ptr [r15+20]
       mov      rax, gword ptr [r15+8]
       mov      ecx, dword ptr [r15+16]
       mov      edx, dword ptr [rax+8]
       cmp      edx, ecx
       jbe      G_M27506_IG20
       lea      edx, [rcx+1]
       mov      dword ptr [r15+16], edx
       movsxd   rcx, ecx
       mov      dword ptr [rax+4*rcx+16], esi
       jmp      G_M27506_IG21
						;; bbWeight=0.50 PerfScore 10.25
G_M27506_IG13:
       test     r13d, r13d
       je       G_M27506_IG18
       mov      ecx, r13d
       shr      ecx, 31
       add      ecx, r13d
       sar      ecx, 1
       mov      edx, dword ptr [r15+16]
       cmp      r13d, edx
       jae      G_M27506_IG29
						;; bbWeight=0.50 PerfScore 3.75
G_M27506_IG14:
       mov      r8, gword ptr [r15+8]
       mov      r9, r8
       mov      r10d, dword ptr [r9+8]
       cmp      r13d, r10d
       jae      G_M27506_IG30
       movsxd   r11, r13d
       mov      r9d, dword ptr [r9+4*r11+16]
       cmp      ecx, edx
       jae      G_M27506_IG29
						;; bbWeight=0.50 PerfScore 4.50
G_M27506_IG15:
       mov      r11, r8
       cmp      ecx, r10d
       jae      G_M27506_IG30
       movsxd   r10, ecx
       mov      r10d, dword ptr [r11+4*r10+16]
       cmp      r13d, edx
       jae      G_M27506_IG29
						;; bbWeight=0.50 PerfScore 2.50
G_M27506_IG16:
       mov      r11, r8
       movsxd   rsi, r13d
       mov      dword ptr [r11+4*rsi+16], r10d
       mov      r10d, dword ptr [r15+20]
       inc      r10d
       mov      dword ptr [r15+20], r10d
       cmp      ecx, edx
       jae      G_M27506_IG29
						;; bbWeight=0.50 PerfScore 3.00
G_M27506_IG17:
       movsxd   rcx, ecx
       mov      dword ptr [r8+4*rcx+16], r9d
       inc      r10d
       mov      dword ptr [r15+20], r10d
						;; bbWeight=0.50 PerfScore 1.25
G_M27506_IG18:
       mov      eax, dword ptr [rsp+24H]
						;; bbWeight=0.50 PerfScore 0.50
G_M27506_IG19:
       add      rsp, 40
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r12
       pop      r13
       pop      r14
       pop      r15
       ret      
						;; bbWeight=0.50 PerfScore 2.63
G_M27506_IG20:
       mov      rcx, r15
       mov      edx, esi
       call     List`1:AddWithResize(int):this
						;; bbWeight=0.50 PerfScore 0.75
G_M27506_IG21:
       mov      ecx, dword ptr [r15+16]
       mov      edx, ecx
       sub      edx, 1
       jo       SHORT G_M27506_IG25
       mov      edi, edx
       shr      edi, 31
       add      edi, edx
       sar      edi, 1
       cmp      edx, ecx
       jae      SHORT G_M27506_IG29
						;; bbWeight=0.50 PerfScore 3.88
G_M27506_IG22:
       mov      r8, gword ptr [r15+8]
       mov      rax, r8
       cmp      edx, dword ptr [rax+8]
       jae      SHORT G_M27506_IG30
       movsxd   r9, edx
       mov      ebx, dword ptr [rax+4*r9+16]
       cmp      edi, ecx
       jae      SHORT G_M27506_IG29
						;; bbWeight=0.50 PerfScore 4.38
G_M27506_IG23:
       cmp      edi, dword ptr [r8+8]
       jae      SHORT G_M27506_IG30
       movsxd   rcx, edi
       mov      r8d, dword ptr [r8+4*rcx+16]
       mov      rcx, r15
       call     [List`1:set_Item(int,int):this]
       mov      rcx, r15
       mov      edx, edi
       mov      r8d, ebx
       call     [List`1:set_Item(int,int):this]
       mov      eax, esi
						;; bbWeight=0.50 PerfScore 6.25
G_M27506_IG24:
       add      rsp, 40
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r12
       pop      r13
       pop      r14
       pop      r15
       ret      
						;; bbWeight=0.50 PerfScore 2.63
G_M27506_IG25:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M27506_IG26:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M27506_IG27:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M27506_IG28:
       call     ThrowHelper:ThrowArgumentException_DestinationTooShort()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M27506_IG29:
       call     ThrowHelper:ThrowArgumentOutOfRange_IndexException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M27506_IG30:
       call     CORINFO_HELP_RNGCHKFAIL
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 588, prolog size 19, PerfScore 224.18, (MethodHash=d21e948d) for method SerializationContext:FinishVTable(Span`1,Span`1):int:this
; ============================================================

; Assembly listing for method SerializationContext:InvokePostSerializeActions(Span`1):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T06] (  4,  7   )     ref  ->  rdi         this class-hnd
;  V01 arg1         [V01,T04] (  3, 12   )   byref  ->  rsi        
;  V02 loc0         [V02,T05] (  4, 10   )     ref  ->  rbx         class-hnd
;  V03 loc1         [V03,T07] (  3,  6   )     int  ->  rbp        
;  V04 loc2         [V04,T00] (  7, 25   )     int  ->  r14        
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V06 tmp1         [V06    ] (  0,  0   )   byref  ->  zero-ref    V08._pointer(offs=0x00) P-INDEP "field V01._pointer (fldOffset=0x0)"
;* V07 tmp2         [V07    ] (  0,  0   )     int  ->  zero-ref    V08._length(offs=0x08) P-INDEP "field V01._length (fldOffset=0x8)"
;* V08 tmp3         [V08    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;  V09 tmp4         [V09,T01] (  3, 24   )     ref  ->  rcx         "arr expr"
;  V10 tmp5         [V10    ] (  2, 16   )  struct (16) [rsp+0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V11 tmp6         [V11,T03] (  2, 16   )     ref  ->  rax         "argument with side effect"
;  V12 rat0         [V12,T02] (  3, 24   )     ref  ->  rax         "delegate invoke call"
;
; Lcl frame size = 48

G_M48578_IG01:
       push     r14
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 48
       vzeroupper 
       xor      rax, rax
       mov      qword ptr [rsp+20H], rax
       mov      qword ptr [rsp+28H], rax
       mov      rdi, rcx
       mov      rsi, rdx
						;; bbWeight=1    PerfScore 9.00
G_M48578_IG02:
       mov      rbx, gword ptr [rdi+8]
       mov      ebp, dword ptr [rbx+16]
       xor      r14d, r14d
       test     ebp, ebp
       jle      SHORT G_M48578_IG07
						;; bbWeight=1    PerfScore 5.50
G_M48578_IG03:
       cmp      r14d, dword ptr [rbx+16]
       jae      SHORT G_M48578_IG08
						;; bbWeight=4    PerfScore 12.00
G_M48578_IG04:
       mov      rcx, gword ptr [rbx+8]
       cmp      r14d, dword ptr [rcx+8]
       jae      SHORT G_M48578_IG09
       movsxd   rdx, r14d
       mov      rax, gword ptr [rcx+8*rdx+16]
						;; bbWeight=4    PerfScore 29.00
G_M48578_IG05:
       vmovdqu  xmm0, xmmword ptr [rsi]
       vmovdqu  xmmword ptr [rsp+20H], xmm0
						;; bbWeight=4    PerfScore 12.00
G_M48578_IG06:
       mov      rcx, gword ptr [rax+8]
       lea      rdx, bword ptr [rsp+20H]
       mov      r8, rdi
       call     qword ptr [rax+24]PostSerializeAction:Invoke(Span`1,SerializationContext):this
       inc      r14d
       cmp      r14d, ebp
       jl       SHORT G_M48578_IG03
						;; bbWeight=4    PerfScore 29.00
G_M48578_IG07:
       add      rsp, 48
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r14
       ret      
						;; bbWeight=1    PerfScore 3.75
G_M48578_IG08:
       call     ThrowHelper:ThrowArgumentOutOfRange_IndexException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M48578_IG09:
       call     CORINFO_HELP_RNGCHKFAIL
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 125, prolog size 25, PerfScore 112.95, (MethodHash=78d8423d) for method SerializationContext:InvokePostSerializeActions(Span`1):this
; ============================================================

; Assembly listing for method StructVectorClone:Parse():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;  V03 tmp2         [V03    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd "impAppendStmt"
;
; Lcl frame size = 48

G_M55981_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp-10H], rax
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M55981_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       call     ScalarTable:get_Serializer():ISerializer`1
       mov      gword ptr [rbp-10H], rax
       mov      rdx, gword ptr [rbp+10H]
       mov      rdx, gword ptr [rdx+8]
       mov      rcx, gword ptr [rbp-08H]
       call     ArrayInputBuffer:.ctor(ref):this
       mov      rcx, gword ptr [rbp-10H]
       mov      rdx, gword ptr [rbp-08H]
       mov      r11, 0xD1FFAB1E
       call     [ISerializer`1:Parse(IInputBuffer):__Canon:this]
       nop      
						;; bbWeight=1    PerfScore 14.75
G_M55981_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 100, prolog size 20, PerfScore 31.75, (MethodHash=d4b22552) for method StructVectorClone:Parse():this
; ============================================================

; Assembly listing for method ArrayInputBuffer:.ctor(ref):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "NewObj constructor temp"
;  V04 tmp2         [V04    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V05 tmp3         [V05    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init "argument with side effect"
;
; Lcl frame size = 80

G_M11623_IG01:
       push     rbp
       sub      rsp, 80
       vzeroupper 
       lea      rbp, [rsp+50H]
       xor      rax, rax
       mov      qword ptr [rbp-28H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       vmovdqa  xmmword ptr [rbp-10H], xmm4
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 8.33
G_M11623_IG02:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rbp-10H], xmm0
       lea      rcx, bword ptr [rbp-10H]
       mov      rdx, gword ptr [rbp+18H]
       call     ArraySegment`1:.ctor(ref):this
       mov      rcx, gword ptr [rbp+10H]
       mov      gword ptr [rbp-28H], rcx
						;; bbWeight=1    PerfScore 5.83
G_M11623_IG03:
       vmovdqu  xmm0, xmmword ptr [rbp-10H]
       vmovdqu  xmmword ptr [rbp-20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11623_IG04:
       mov      rcx, gword ptr [rbp-28H]
       lea      rdx, bword ptr [rbp-20H]
       call     ArrayInputBuffer:.ctor(ArraySegment`1):this
       nop      
						;; bbWeight=1    PerfScore 2.75
G_M11623_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 101, prolog size 33, PerfScore 31.72, (MethodHash=1a06d298) for method ArrayInputBuffer:.ctor(ref):this
; ============================================================

; Assembly listing for method ArrayInputBuffer:.ctor(ArraySegment`1):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M18685_IG01:
       push     rbp
       push     rdi
       push     rsi
       sub      rsp, 32
       lea      rbp, [rsp+30H]
       mov      gword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 5.75
G_M18685_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rsi, bword ptr [rbp+18H]
       mov      rdi, gword ptr [rbp+10H]
       add      rdi, 16
       call     CORINFO_HELP_ASSIGN_BYREF
       movsq    
						;; bbWeight=1    PerfScore 6.25
G_M18685_IG03:
       lea      rsp, [rbp-10H]
       pop      rsi
       pop      rdi
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 56, prolog size 12, PerfScore 20.60, (MethodHash=6a28b702) for method ArrayInputBuffer:.ctor(ArraySegment`1):this
; ============================================================

; Assembly listing for method GeneratedSerializerWrapper`1:Parse(IInputBuffer):__Canon:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )     ref  ->  [rbp-0x10]   must-init class-hnd "dup spill"
;  V04 tmp2         [V04    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init
;  V05 tmp3         [V05    ] (  1,  1   )     ref  ->  [rbp-0x20]   must-init
;  V06 tmp4         [V06    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init class-hnd "dup spill"
;  V07 tmp5         [V07    ] (  1,  1   )     ref  ->  [rbp-0x30]   must-init
;  V08 tmp6         [V08    ] (  1,  1   )     ref  ->  [rbp-0x38]   must-init
;  V09 tmp7         [V09    ] (  1,  1   )     ref  ->  [rbp-0x40]   must-init
;  V10 tmp8         [V10    ] (  1,  1   )     ref  ->  [rbp-0x48]   must-init
;  V11 tmp9         [V11    ] (  1,  1   )    long  ->  [rbp-0x50]   "impRuntimeLookup slot"
;  V12 tmp10        [V12    ] (  1,  1   )    long  ->  [rbp-0x58]   "spilling Runtime Lookup tree"
;  V13 tmp11        [V13    ] (  1,  1   )    long  ->  [rbp-0x60]   "VirtualCall through function pointer"
;  V14 tmp12        [V14    ] (  1,  1   )     ref  ->  [rbp-0x68]   must-init class-hnd exact "NewObj constructor temp"
;  V15 tmp13        [V15    ] (  1,  1   )     ref  ->  [rbp-0x70]   must-init class-hnd exact "NewObj constructor temp"
;  V16 tmp14        [V16    ] (  1,  1   )     ref  ->  [rbp-0x78]   must-init "argument with side effect"
;  V17 tmp15        [V17    ] (  1,  1   )     ref  ->  [rbp-0x80]   must-init "argument with side effect"
;  V18 tmp16        [V18    ] (  1,  1   )     ref  ->  [rbp-0x88]   must-init "delegate invoke call"
;
; Lcl frame size = 176

G_M43145_IG01:
       push     rbp
       sub      rsp, 176
       lea      rbp, [rsp+B0H]
       xor      rax, rax
       mov      qword ptr [rbp-88H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-80H], xmm4
       mov      rax, -96
       vmovdqa  xmmword ptr [rbp+rax-10H], xmm4
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rcx
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 12.83
G_M43145_IG02:
       mov      rcx, gword ptr [rbp+18H]
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:get_Length():int:this]
       cmp      eax, 0xD1FFAB1E
       jl       SHORT G_M43145_IG04
						;; bbWeight=1    PerfScore 5.50
G_M43145_IG03:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-70H], rax
       mov      ecx, 829
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      gword ptr [rbp-78H], rax
       mov      rdx, gword ptr [rbp-78H]
       mov      rcx, gword ptr [rbp-70H]
       call     ArgumentOutOfRangeException:.ctor(String):this
       mov      rcx, gword ptr [rbp-70H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M43145_IG04:
       mov      rcx, gword ptr [rbp+18H]
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:get_Length():int:this]
       cmp      eax, 8
       jg       SHORT G_M43145_IG06
						;; bbWeight=1    PerfScore 5.50
G_M43145_IG05:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-68H], rax
       mov      ecx, 891
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      gword ptr [rbp-80H], rax
       mov      rdx, gword ptr [rbp-80H]
       mov      rcx, gword ptr [rbp-68H]
       call     ArgumentException:.ctor(String):this
       mov      rcx, gword ptr [rbp-68H]
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M43145_IG06:
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx+32]
       mov      gword ptr [rbp-10H], rcx
       mov      rcx, gword ptr [rbp+18H]
       mov      gword ptr [rbp-18H], rcx
       mov      rcx, gword ptr [rbp-10H]
       mov      gword ptr [rbp-20H], rcx
       cmp      gword ptr [rbp-10H], 0
       jne      SHORT G_M43145_IG07
       mov      rcx, gword ptr [rbp-18H]
       mov      gword ptr [rbp-40H], rcx
       xor      rcx, rcx
       mov      gword ptr [rbp-48H], rcx
       jmp      SHORT G_M43145_IG09
						;; bbWeight=1    PerfScore 15.25
G_M43145_IG07:
       mov      rcx, gword ptr [rbp-20H]
       call     SerializerSettings:get_SharedStringReaderFactory():Func`1:this
       mov      gword ptr [rbp-28H], rax
       mov      rcx, gword ptr [rbp-18H]
       mov      gword ptr [rbp-30H], rcx
       mov      rcx, gword ptr [rbp-28H]
       mov      gword ptr [rbp-38H], rcx
       cmp      gword ptr [rbp-28H], 0
       jne      SHORT G_M43145_IG08
       mov      rcx, gword ptr [rbp-30H]
       mov      gword ptr [rbp-40H], rcx
       xor      rcx, rcx
       mov      gword ptr [rbp-48H], rcx
       jmp      SHORT G_M43145_IG09
						;; bbWeight=1    PerfScore 14.25
G_M43145_IG08:
       mov      rcx, gword ptr [rbp-30H]
       mov      gword ptr [rbp-40H], rcx
       mov      rcx, gword ptr [rbp-38H]
       mov      gword ptr [rbp-88H], rcx
       mov      rcx, gword ptr [rbp-88H]
       mov      rcx, gword ptr [rcx+8]
       mov      rax, gword ptr [rbp-88H]
       call     gword ptr [rax+24]Func`1:Invoke():__Canon:this
       mov      gword ptr [rbp-48H], rax
						;; bbWeight=1    PerfScore 12.00
G_M43145_IG09:
       mov      rcx, gword ptr [rbp-40H]
       mov      rdx, gword ptr [rbp-48H]
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:set_SharedStringReader(ISharedStringReader):this]
       mov      rcx, gword ptr [rbp+10H]
       mov      rcx, qword ptr [rcx]
       mov      qword ptr [rbp-50H], rcx
       mov      rcx, qword ptr [rbp-50H]
       mov      rcx, qword ptr [rcx+48]
       mov      rcx, qword ptr [rcx]
       cmp      qword ptr [rcx+24], 0
       je       SHORT G_M43145_IG11
						;; bbWeight=1    PerfScore 17.25
G_M43145_IG10:
       mov      rcx, qword ptr [rbp-50H]
       mov      rcx, qword ptr [rcx+48]
       mov      rcx, qword ptr [rcx]
       mov      rcx, qword ptr [rcx+24]
       mov      qword ptr [rbp-58H], rcx
       jmp      SHORT G_M43145_IG12
						;; bbWeight=0.50 PerfScore 5.00
G_M43145_IG11:
       mov      rcx, qword ptr [rbp-50H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_CLASS
       mov      qword ptr [rbp-58H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M43145_IG12:
       mov      rcx, gword ptr [rbp+18H]
       mov      r8, qword ptr [rbp-58H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      qword ptr [rbp-60H], rax
       mov      rdx, gword ptr [rbp+10H]
       mov      rdx, gword ptr [rdx+8]
       mov      rcx, gword ptr [rbp+18H]
       xor      r8d, r8d
       mov      rax, qword ptr [rbp-60H]
       call     rax
       nop      
						;; bbWeight=1    PerfScore 12.75
G_M43145_IG13:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 564, prolog size 75, PerfScore 160.86, (MethodHash=4f2b5776) for method GeneratedSerializerWrapper`1:Parse(IInputBuffer):__Canon:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:get_Length():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M42990_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 2.75
G_M42990_IG02:
       mov      rcx, gword ptr [rbp+10H]
       cmp      dword ptr [rcx], ecx
       mov      rcx, gword ptr [rbp+10H]
       add      rcx, 16
       call     ArraySegment`1:get_Count():int:this
       nop      
						;; bbWeight=1    PerfScore 5.50
G_M42990_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 40, prolog size 10, PerfScore 14.25, (MethodHash=971c5811) for method ArrayInputBuffer:get_Length():int:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:set_SharedStringReader(ISharedStringReader):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M20806_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.25
G_M20806_IG02:
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp+18H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 3.75
G_M20806_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 32, prolog size 4, PerfScore 11.70, (MethodHash=dbdfaeb9) for method ArrayInputBuffer:set_SharedStringReader(ISharedStringReader):this
; ============================================================

; Assembly listing for method ArrayInputBuffer:InvokeParse(IGeneratedSerializer`1,int):__Canon:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 TypeCtx      [V01    ] (  1,  1   )    long  ->  [rbp+0x18]  
;  V02 arg1         [V02    ] (  1,  1   )     ref  ->  [rbp+0x20]   class-hnd
;  V03 arg2         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V05 tmp1         [V05    ] (  1,  1   )  struct ( 8) [rbp-0x10]   do-not-enreg[XS] must-init addr-exposed "NewObj constructor temp"
;  V06 tmp2         [V06    ] (  1,  1   )    long  ->  [rbp-0x18]   "spilling Runtime Lookup tree"
;  V07 tmp3         [V07    ] (  1,  1   )    long  ->  [rbp-0x20]   "spilling Runtime Lookup tree"
;  V08 tmp4         [V08    ] (  1,  1   )    long  ->  [rbp-0x28]   "VirtualCall through function pointer"
;
; Lcl frame size = 80

G_M53612_IG01:
       push     rbp
       sub      rsp, 80
       lea      rbp, [rsp+50H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      qword ptr [rbp-08H], rdx
       mov      gword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      gword ptr [rbp+20H], r8
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 8.00
G_M53612_IG02:
       lea      rcx, bword ptr [rbp-10H]
       mov      rdx, gword ptr [rbp+10H]
       call     Wrapper:.ctor(ArrayInputBuffer):this
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+16], 0
       je       SHORT G_M53612_IG04
						;; bbWeight=1    PerfScore 8.50
G_M53612_IG03:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+16]
       mov      qword ptr [rbp-18H], rcx
       jmp      SHORT G_M53612_IG05
						;; bbWeight=0.50 PerfScore 4.00
G_M53612_IG04:
       mov      rcx, qword ptr [rbp+18H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-18H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M53612_IG05:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       cmp      qword ptr [rcx+24], 0
       je       SHORT G_M53612_IG07
						;; bbWeight=1    PerfScore 6.00
G_M53612_IG06:
       mov      rcx, qword ptr [rbp+18H]
       mov      rcx, qword ptr [rcx+16]
       mov      rcx, qword ptr [rcx+24]
       mov      qword ptr [rbp-20H], rcx
       jmp      SHORT G_M53612_IG08
						;; bbWeight=0.50 PerfScore 4.00
G_M53612_IG07:
       mov      rcx, qword ptr [rbp+18H]
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      qword ptr [rbp-20H], rax
						;; bbWeight=0.50 PerfScore 1.63
G_M53612_IG08:
       mov      rcx, gword ptr [rbp+20H]
       mov      rdx, qword ptr [rbp-18H]
       mov      r8, qword ptr [rbp-20H]
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      qword ptr [rbp-28H], rax
       mov      rcx, gword ptr [rbp+20H]
       mov      rdx, gword ptr [rbp-10H]
       mov      r8d, dword ptr [rbp+28H]
       mov      rax, qword ptr [rbp-28H]
       call     rax
       nop      
						;; bbWeight=1    PerfScore 12.25
G_M53612_IG09:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 207, prolog size 20, PerfScore 68.70, (MethodHash=51f02e93) for method ArrayInputBuffer:InvokeParse(IGeneratedSerializer`1,int):__Canon:this
; ============================================================

; Assembly listing for method Wrapper:.ctor(ArrayInputBuffer):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M48101_IG01:
       push     rbp
       mov      rbp, rsp
       mov      bword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.25
G_M48101_IG02:
       mov      rcx, bword ptr [rbp+10H]
       mov      rdx, gword ptr [rbp+18H]
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 3.25
G_M48101_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 28, prolog size 4, PerfScore 10.80, (MethodHash=a7f4441a) for method Wrapper:.ctor(ArrayInputBuffer):this
; ============================================================

; Assembly listing for method GeneratedSerializer:Parse(Wrapper,int):ScalarTable:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 8) [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M63173_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
						;; bbWeight=1    PerfScore 4.75
G_M63173_IG02:
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       call     GeneratedSerializer:Read_55bc853cd3904128b3329b38587280d1(Wrapper,int):ScalarTable
       nop      
						;; bbWeight=1    PerfScore 3.25
G_M63173_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 41, prolog size 10, PerfScore 14.10, (MethodHash=6429093a) for method GeneratedSerializer:Parse(Wrapper,int):ScalarTable:this
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_55bc853cd3904128b3329b38587280d1(Wrapper,int):ScalarTable
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;  V04 tmp2         [V04    ] (  1,  1   )     int  ->  [rbp-0x0C]   "argument with side effect"
;
; Lcl frame size = 48

G_M43993_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=0    PerfScore 0.00
G_M43993_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       call     InputBufferExtensions:ReadUOffset(Wrapper,int):int
       add      eax, dword ptr [rbp+18H]
       jo       SHORT G_M43993_IG04
       mov      dword ptr [rbp-0CH], eax
       mov      r8d, dword ptr [rbp-0CH]
       mov      rdx, gword ptr [rbp+10H]
       mov      rcx, gword ptr [rbp-08H]
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
       mov      rax, gword ptr [rbp-08H]
						;; bbWeight=1    PerfScore 13.25
G_M43993_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M43993_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 95, prolog size 16, PerfScore 24.75, (MethodHash=ef675426) for method GeneratedSerializer:Read_55bc853cd3904128b3329b38587280d1(Wrapper,int):ScalarTable
; ============================================================

; Assembly listing for method InputBufferExtensions:ReadUOffset(Wrapper,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 loc0         [V02    ] (  1,  1   )     int  ->  [rbp-0x04]   must-init
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M62354_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=0    PerfScore 0.00
G_M62354_IG02:
       lea      rcx, bword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       call     Wrapper:ReadUInt(int):int:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 4
       jae      SHORT G_M62354_IG03
       mov      ecx, dword ptr [rbp-04H]
       call     InputBufferExtensions:ThrowUOffsetLessThanMinimumException(int)
						;; bbWeight=1    PerfScore 7.50
G_M62354_IG03:
       mov      eax, dword ptr [rbp-04H]
       test     eax, eax
       jl       SHORT G_M62354_IG05
						;; bbWeight=1    PerfScore 2.25
G_M62354_IG04:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M62354_IG05:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 70, prolog size 15, PerfScore 18.75, (MethodHash=e0d90c6d) for method InputBufferExtensions:ReadUOffset(Wrapper,int):int
; ============================================================

; Assembly listing for method Wrapper:ReadUInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M64320_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      bword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M64320_IG02:
       mov      rcx, bword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx]
       mov      edx, dword ptr [rbp+18H]
       cmp      dword ptr [rcx], ecx
       call     [ArrayInputBuffer:ReadUInt(int):int:this]
       nop      
						;; bbWeight=1    PerfScore 9.25
G_M64320_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 42, prolog size 10, PerfScore 19.20, (MethodHash=508304bf) for method Wrapper:ReadUInt(int):int:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadUInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 loc0         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V05 tmp2         [V05    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V06 tmp3         [V06    ] (  1,  1   )  struct (16) [rbp-0x40]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V07 tmp4         [V07    ] (  1,  1   )    long  ->  [rbp-0x48]   "argument with side effect"
;  V08 tmp5         [V08    ] (  1,  1   )  struct (16) [rbp-0x58]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V09 tmp6         [V09    ] (  1,  1   )    long  ->  [rbp-0x60]   "argument with side effect"
;  V10 tmp7         [V10    ] (  1,  1   )  struct (16) [rbp-0x70]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 144

G_M18428_IG01:
       push     rbp
       sub      rsp, 144
       vzeroupper 
       lea      rbp, [rsp+90H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-70H], xmm4
       mov      rax, -96
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+20H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 10.58
G_M18428_IG02:
       lea      rcx, [rbp-10H]
       mov      qword ptr [rbp-48H], rcx
       mov      rcx, gword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 2.50
G_M18428_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx+16]
       vmovdqu  xmmword ptr [rbp-40H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M18428_IG04:
       mov      rcx, qword ptr [rbp-48H]
       lea      rdx, bword ptr [rbp-40H]
       call     MemoryExtensions:AsSpan(ArraySegment`1):Span`1
       lea      rcx, bword ptr [rbp-10H]
       lea      rdx, [rbp-20H]
       mov      r8d, dword ptr [rbp+18H]
       call     Span`1:Slice(int):Span`1:this
       lea      rcx, [rbp-30H]
       mov      qword ptr [rbp-60H], rcx
						;; bbWeight=1    PerfScore 7.00
G_M18428_IG05:
       vmovdqu  xmm0, xmmword ptr [rbp-20H]
       vmovdqu  xmmword ptr [rbp-58H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M18428_IG06:
       mov      rcx, qword ptr [rbp-60H]
       lea      rdx, bword ptr [rbp-58H]
       call     Span`1:op_Implicit(Span`1):ReadOnlySpan`1
						;; bbWeight=1    PerfScore 2.50
G_M18428_IG07:
       vmovdqu  xmm0, xmmword ptr [rbp-30H]
       vmovdqu  xmmword ptr [rbp-70H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M18428_IG08:
       lea      rcx, bword ptr [rbp-70H]
       call     ScalarSpanReader:ReadUInt(ReadOnlySpan`1):int
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M18428_IG09:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 177, prolog size 61, PerfScore 52.13, (MethodHash=954cb803) for method ArrayInputBuffer:ReadUInt(int):int:this
; ============================================================

; Assembly listing for method MemoryExtensions:AsSpan(ArraySegment`1):Span`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 RetBuf       [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]  
;  V01 arg0         [V01    ] (  1,  1   )   byref  ->  [rbp+0x18]   ld-addr-op
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init class-hnd "non-inline candidate call"
;  V04 tmp2         [V04    ] (  1,  1   )     int  ->  [rbp-0x1C]   "non-inline candidate call"
;  V05 tmp3         [V05    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "NewObj constructor temp"
;  V06 tmp4         [V06    ] (  1,  1   )     int  ->  [rbp-0x34]   "argument with side effect"
;
; Lcl frame size = 80

G_M13336_IG01:
       push     rbp
       push     rdi
       push     rsi
       sub      rsp, 80
       vzeroupper 
       lea      rbp, [rsp+60H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-30H], xmm4
       vmovdqa  xmmword ptr [rbp-20H], xmm4
       mov      bword ptr [rbp+10H], rcx
       mov      bword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 9.08
G_M13336_IG02:
       mov      rcx, bword ptr [rbp+18H]
       call     ArraySegment`1:get_Array():ref:this
       mov      gword ptr [rbp-18H], rax
       mov      rcx, bword ptr [rbp+18H]
       call     ArraySegment`1:get_Offset():int:this
       mov      dword ptr [rbp-1CH], eax
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rbp-30H], xmm0
       mov      rcx, bword ptr [rbp+18H]
       call     ArraySegment`1:get_Count():int:this
       mov      dword ptr [rbp-34H], eax
       mov      r9d, dword ptr [rbp-34H]
       lea      rcx, bword ptr [rbp-30H]
       mov      rdx, gword ptr [rbp-18H]
       mov      r8d, dword ptr [rbp-1CH]
       call     Span`1:.ctor(ref,int,int):this
       mov      rdi, bword ptr [rbp+10H]
       lea      rsi, bword ptr [rbp-30H]
       call     CORINFO_HELP_ASSIGN_BYREF
       movsq    
       mov      rax, bword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 19.33
G_M13336_IG03:
       lea      rsp, [rbp-10H]
       pop      rsi
       pop      rdi
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 3.00

; Total bytes of code 131, prolog size 29, PerfScore 45.02, (MethodHash=fa96cbe7) for method MemoryExtensions:AsSpan(ArraySegment`1):Span`1
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadUInt(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]  
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 48

G_M30048_IG01:
       push     rbp
       sub      rsp, 48
       vzeroupper 
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      bword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M30048_IG02:
       mov      rcx, bword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 1.00
G_M30048_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-10H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M30048_IG04:
       lea      rcx, bword ptr [rbp-10H]
       call     BinaryPrimitives:ReadUInt32LittleEndian(ReadOnlySpan`1):int
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M30048_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 52, prolog size 19, PerfScore 18.15, (MethodHash=bf4b8a9f) for method ScalarSpanReader:ReadUInt(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 8) [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 loc0         [V03    ] (  1,  1   )     int  ->  [rbp-0x08]   do-not-enreg[X] must-init addr-exposed ld-addr-op
;  V04 loc1         [V04    ] (  1,  1   )     int  ->  [rbp-0x10]   do-not-enreg[X] must-init addr-exposed ld-addr-op
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V06 tmp1         [V06    ] (  1,  1   )     ref  ->  [rbp-0x18]   must-init "argument with side effect"
;
; Lcl frame size = 64

G_M64856_IG01:
       push     rbp
       sub      rsp, 64
       lea      rbp, [rsp+40H]
       vxorps   xmm4, xmm4
       vmovdqu  xmmword ptr [rbp-18H], xmm4
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
						;; bbWeight=1    PerfScore 7.33
G_M64856_IG02:
       mov      rcx, 0xD1FFAB1E
       xor      edx, edx
       call     CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
       mov      rdx, 0xD1FFAB1E
       mov      rdx, gword ptr [rdx]
       mov      gword ptr [rbp-18H], rdx
       mov      rdx, gword ptr [rbp-18H]
       mov      rcx, gword ptr [rbp+10H]
       call     ScalarTable:.ctor(FlatBufferDeserializationContext):this
       lea      r8, [rbp-08H]
       lea      r9, [rbp-10H]
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       call     InputBufferExtensions:InitializeVTable(Wrapper,int,byref,byref)
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       mov      r8d, dword ptr [rbp-08H]
       mov      r9d, dword ptr [rbp-10H]
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex0Value(Wrapper,int,int,int):Struct
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+32]
       mov      rdx, rax
       call     CORINFO_HELP_ASSIGN_REF
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       mov      r8d, dword ptr [rbp-08H]
       mov      r9d, dword ptr [rbp-10H]
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex1Value(Wrapper,int,int,int):int
       mov      rcx, gword ptr [rbp+10H]
       mov      dword ptr [rcx+28], eax
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       mov      r8d, dword ptr [rbp-08H]
       mov      r9d, dword ptr [rbp-10H]
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex2Value(Wrapper,int,int,int):int
       mov      rcx, gword ptr [rbp+10H]
       mov      dword ptr [rcx+40], eax
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       mov      r8d, dword ptr [rbp-08H]
       mov      r9d, dword ptr [rbp-10H]
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex3Value(Wrapper,int,int,int):int
       mov      rdx, gword ptr [rbp+10H]
       mov      dword ptr [rdx+44], eax
						;; bbWeight=1    PerfScore 40.50
G_M64856_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 227, prolog size 25, PerfScore 72.73, (MethodHash=eebd02a7) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V01 tmp1         [V01    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M5355_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 3.00
G_M5355_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       mov      edx, 5
       call     FlatBufferDeserializationContext:.ctor(int):this
       mov      rcx, 0xD1FFAB1E
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 7.00
G_M5355_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 75, prolog size 16, PerfScore 19.50, (MethodHash=7641eb14) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.cctor()
; ============================================================

; Assembly listing for method FlatBufferDeserializationContext:.ctor(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M63845_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M63845_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+8], edx
						;; bbWeight=1    PerfScore 5.00
G_M63845_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 42, prolog size 10, PerfScore 14.95, (MethodHash=86b8069a) for method FlatBufferDeserializationContext:.ctor(int):this
; ============================================================

; Assembly listing for method ScalarTable:.ctor(FlatBufferDeserializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M5158_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 3.75
G_M5158_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       nop      
						;; bbWeight=1    PerfScore 2.25
G_M5158_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 34, prolog size 10, PerfScore 11.40, (MethodHash=95d6ebd9) for method ScalarTable:.ctor(FlatBufferDeserializationContext):this
; ============================================================

; Assembly listing for method InputBufferExtensions:InitializeVTable(Wrapper,int,byref,byref)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )   byref  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )   byref  ->  [rbp+0x28]  
;  V04 loc0         [V04    ] (  1,  1   )  ushort  ->  [rbp-0x04]   must-init
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M59761_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      bword ptr [rbp+20H], r8
       mov      bword ptr [rbp+28H], r9
						;; bbWeight=1    PerfScore 7.00
G_M59761_IG02:
       lea      rcx, bword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       call     Wrapper:ReadInt(int):int:this
       mov      edx, dword ptr [rbp+18H]
       sub      edx, eax
       mov      rcx, bword ptr [rbp+20H]
       mov      dword ptr [rcx], edx
       mov      rdx, bword ptr [rbp+20H]
       mov      edx, dword ptr [rdx]
       lea      rcx, bword ptr [rbp+10H]
       call     Wrapper:ReadUShort(int):ushort:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 4
       jge      SHORT G_M59761_IG03
       call     InputBufferExtensions:ThrowInvalidVtableException()
						;; bbWeight=1    PerfScore 14.25
G_M59761_IG03:
       mov      eax, dword ptr [rbp-04H]
       shr      eax, 31
       add      eax, dword ptr [rbp-04H]
       sar      eax, 1
       add      eax, -3
       mov      rdx, bword ptr [rbp+28H]
       mov      dword ptr [rdx], eax
						;; bbWeight=1    PerfScore 6.75
G_M59761_IG04:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 108, prolog size 15, PerfScore 40.80, (MethodHash=d680168e) for method InputBufferExtensions:InitializeVTable(Wrapper,int,byref,byref)
; ============================================================

; Assembly listing for method Wrapper:ReadInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M20277_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      bword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M20277_IG02:
       mov      rcx, bword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx]
       mov      edx, dword ptr [rbp+18H]
       cmp      dword ptr [rcx], ecx
       call     [ArrayInputBuffer:ReadInt(int):int:this]
       nop      
						;; bbWeight=1    PerfScore 9.25
G_M20277_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 42, prolog size 10, PerfScore 19.20, (MethodHash=aba6b0ca) for method Wrapper:ReadInt(int):int:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 loc0         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V05 tmp2         [V05    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V06 tmp3         [V06    ] (  1,  1   )  struct (16) [rbp-0x40]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V07 tmp4         [V07    ] (  1,  1   )    long  ->  [rbp-0x48]   "argument with side effect"
;  V08 tmp5         [V08    ] (  1,  1   )  struct (16) [rbp-0x58]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V09 tmp6         [V09    ] (  1,  1   )    long  ->  [rbp-0x60]   "argument with side effect"
;  V10 tmp7         [V10    ] (  1,  1   )  struct (16) [rbp-0x70]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 144

G_M20425_IG01:
       push     rbp
       sub      rsp, 144
       vzeroupper 
       lea      rbp, [rsp+90H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-70H], xmm4
       mov      rax, -96
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+20H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 10.58
G_M20425_IG02:
       lea      rcx, [rbp-10H]
       mov      qword ptr [rbp-48H], rcx
       mov      rcx, gword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 2.50
G_M20425_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx+16]
       vmovdqu  xmmword ptr [rbp-40H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M20425_IG04:
       mov      rcx, qword ptr [rbp-48H]
       lea      rdx, bword ptr [rbp-40H]
       call     MemoryExtensions:AsSpan(ArraySegment`1):Span`1
       lea      rcx, bword ptr [rbp-10H]
       lea      rdx, [rbp-20H]
       mov      r8d, dword ptr [rbp+18H]
       call     Span`1:Slice(int):Span`1:this
       lea      rcx, [rbp-30H]
       mov      qword ptr [rbp-60H], rcx
						;; bbWeight=1    PerfScore 7.00
G_M20425_IG05:
       vmovdqu  xmm0, xmmword ptr [rbp-20H]
       vmovdqu  xmmword ptr [rbp-58H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M20425_IG06:
       mov      rcx, qword ptr [rbp-60H]
       lea      rdx, bword ptr [rbp-58H]
       call     Span`1:op_Implicit(Span`1):ReadOnlySpan`1
						;; bbWeight=1    PerfScore 2.50
G_M20425_IG07:
       vmovdqu  xmm0, xmmword ptr [rbp-30H]
       vmovdqu  xmmword ptr [rbp-70H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M20425_IG08:
       lea      rcx, bword ptr [rbp-70H]
       call     ScalarSpanReader:ReadInt(ReadOnlySpan`1):int
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M20425_IG09:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 177, prolog size 61, PerfScore 52.13, (MethodHash=0918b036) for method ArrayInputBuffer:ReadInt(int):int:this
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadInt(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]  
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 48

G_M5013_IG01:
       push     rbp
       sub      rsp, 48
       vzeroupper 
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      bword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M5013_IG02:
       mov      rcx, bword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 1.00
G_M5013_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-10H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M5013_IG04:
       lea      rcx, bword ptr [rbp-10H]
       call     BinaryPrimitives:ReadInt32LittleEndian(ReadOnlySpan`1):int
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M5013_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 52, prolog size 19, PerfScore 18.15, (MethodHash=79f4ec6a) for method ScalarSpanReader:ReadInt(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method Wrapper:ReadUShort(int):ushort:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]   this
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M23989_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      bword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M23989_IG02:
       mov      rcx, bword ptr [rbp+10H]
       mov      rcx, gword ptr [rcx]
       mov      edx, dword ptr [rbp+18H]
       cmp      dword ptr [rcx], ecx
       call     [ArrayInputBuffer:ReadUShort(int):ushort:this]
       nop      
						;; bbWeight=1    PerfScore 9.25
G_M23989_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 42, prolog size 10, PerfScore 19.20, (MethodHash=b4b6a24a) for method Wrapper:ReadUShort(int):ushort:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadUShort(int):ushort:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 loc0         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XS] must-init addr-exposed ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04    ] (  1,  1   )  struct (16) [rbp-0x20]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V05 tmp2         [V05    ] (  1,  1   )  struct (16) [rbp-0x30]   do-not-enreg[XSB] must-init addr-exposed "struct address for call/obj"
;  V06 tmp3         [V06    ] (  1,  1   )  struct (16) [rbp-0x40]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V07 tmp4         [V07    ] (  1,  1   )    long  ->  [rbp-0x48]   "argument with side effect"
;  V08 tmp5         [V08    ] (  1,  1   )  struct (16) [rbp-0x58]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;  V09 tmp6         [V09    ] (  1,  1   )    long  ->  [rbp-0x60]   "argument with side effect"
;  V10 tmp7         [V10    ] (  1,  1   )  struct (16) [rbp-0x70]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 144

G_M40841_IG01:
       push     rbp
       sub      rsp, 144
       vzeroupper 
       lea      rbp, [rsp+90H]
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rbp-70H], xmm4
       mov      rax, -96
       vmovdqa  xmmword ptr [rax+rbp], xmm4
       vmovdqa  xmmword ptr [rbp+rax+10H], xmm4
       vmovdqa  xmmword ptr [rbp+rax+20H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 10.58
G_M40841_IG02:
       lea      rcx, [rbp-10H]
       mov      qword ptr [rbp-48H], rcx
       mov      rcx, gword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 2.50
G_M40841_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx+16]
       vmovdqu  xmmword ptr [rbp-40H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M40841_IG04:
       mov      rcx, qword ptr [rbp-48H]
       lea      rdx, bword ptr [rbp-40H]
       call     MemoryExtensions:AsSpan(ArraySegment`1):Span`1
       lea      rcx, bword ptr [rbp-10H]
       lea      rdx, [rbp-20H]
       mov      r8d, dword ptr [rbp+18H]
       call     Span`1:Slice(int):Span`1:this
       lea      rcx, [rbp-30H]
       mov      qword ptr [rbp-60H], rcx
						;; bbWeight=1    PerfScore 7.00
G_M40841_IG05:
       vmovdqu  xmm0, xmmword ptr [rbp-20H]
       vmovdqu  xmmword ptr [rbp-58H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M40841_IG06:
       mov      rcx, qword ptr [rbp-60H]
       lea      rdx, bword ptr [rbp-58H]
       call     Span`1:op_Implicit(Span`1):ReadOnlySpan`1
						;; bbWeight=1    PerfScore 2.50
G_M40841_IG07:
       vmovdqu  xmm0, xmmword ptr [rbp-30H]
       vmovdqu  xmmword ptr [rbp-70H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M40841_IG08:
       lea      rcx, bword ptr [rbp-70H]
       call     ScalarSpanReader:ReadUShort(ReadOnlySpan`1):ushort
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M40841_IG09:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 177, prolog size 61, PerfScore 52.13, (MethodHash=19276076) for method ArrayInputBuffer:ReadUShort(int):ushort:this
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadUShort(ReadOnlySpan`1):ushort
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )   byref  ->  [rbp+0x10]  
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02    ] (  1,  1   )  struct (16) [rbp-0x10]   do-not-enreg[XSB] must-init addr-exposed "by-value struct argument"
;
; Lcl frame size = 48

G_M64341_IG01:
       push     rbp
       sub      rsp, 48
       vzeroupper 
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-10H], rax
       mov      bword ptr [rbp+10H], rcx
						;; bbWeight=1    PerfScore 5.00
G_M64341_IG02:
       mov      rcx, bword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 1.00
G_M64341_IG03:
       vmovdqu  xmm0, xmmword ptr [rcx]
       vmovdqu  xmmword ptr [rbp-10H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M64341_IG04:
       lea      rcx, bword ptr [rbp-10H]
       call     BinaryPrimitives:ReadUInt16LittleEndian(ReadOnlySpan`1):ushort
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M64341_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 52, prolog size 19, PerfScore 18.15, (MethodHash=6f1104aa) for method ScalarSpanReader:ReadUShort(ReadOnlySpan`1):ushort
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex0Value(Wrapper,int,int,int):Struct
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 loc0         [V04    ] (  1,  1   )  ushort  ->  [rbp-0x04]   must-init
;  V05 loc1         [V05    ] (  1,  1   )     int  ->  [rbp-0x08]   must-init
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M32122_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      dword ptr [rbp-08H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M32122_IG02:
       cmp      dword ptr [rbp+28H], 0
       jge      SHORT G_M32122_IG04
       xor      rax, rax
						;; bbWeight=1    PerfScore 2.25
G_M32122_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M32122_IG04:
       mov      edx, dword ptr [rbp+20H]
       add      edx, 4
       jo       SHORT G_M32122_IG08
       lea      rcx, bword ptr [rbp+10H]
       call     Wrapper:ReadUShort(int):ushort:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 0
       jne      SHORT G_M32122_IG06
       xor      rax, rax
						;; bbWeight=1    PerfScore 7.00
G_M32122_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M32122_IG06:
       mov      ecx, dword ptr [rbp+18H]
       add      ecx, dword ptr [rbp-04H]
       jo       SHORT G_M32122_IG08
       mov      dword ptr [rbp-08H], ecx
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp-08H]
       call     GeneratedSerializer:Read_ad8721f46daa4ecf8d0a074bda86da39(Wrapper,int):Struct
       nop      
						;; bbWeight=1    PerfScore 7.25
G_M32122_IG07:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M32122_IG08:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 117, prolog size 18, PerfScore 34.20, (MethodHash=8b278285) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex0Value(Wrapper,int,int,int):Struct
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_ad8721f46daa4ecf8d0a074bda86da39(Wrapper,int):Struct
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M64195_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 5.00
G_M64195_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       mov      rdx, gword ptr [rbp+10H]
       mov      r8d, dword ptr [rbp+18H]
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
       mov      rax, gword ptr [rbp-08H]
						;; bbWeight=1    PerfScore 7.25
G_M64195_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 69, prolog size 16, PerfScore 21.15, (MethodHash=3b14053c) for method GeneratedSerializer:Read_ad8721f46daa4ecf8d0a074bda86da39(Wrapper,int):Struct
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )  struct ( 8) [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init "argument with side effect"
;  V05 tmp2         [V05    ] (  1,  1   )     int  ->  [rbp-0x0C]   "argument with side effect"
;  V06 tmp3         [V06    ] (  1,  1   )     int  ->  [rbp-0x10]   "argument with side effect"
;  V07 tmp4         [V07    ] (  1,  1   )     int  ->  [rbp-0x14]   "argument with side effect"
;  V08 tmp5         [V08    ] (  1,  1   )     int  ->  [rbp-0x18]   "argument with side effect"
;  V09 tmp6         [V09    ] (  1,  1   )     int  ->  [rbp-0x1C]   "argument with side effect"
;  V10 tmp7         [V10    ] (  1,  1   )     int  ->  [rbp-0x20]   "argument with side effect"
;  V11 tmp8         [V11    ] (  1,  1   )     int  ->  [rbp-0x24]   "argument with side effect"
;  V12 tmp9         [V12    ] (  1,  1   )     int  ->  [rbp-0x28]   "argument with side effect"
;  V13 tmp10        [V13    ] (  1,  1   )     int  ->  [rbp-0x2C]   "argument with side effect"
;  V14 tmp11        [V14    ] (  1,  1   )     int  ->  [rbp-0x30]   "argument with side effect"
;  V15 tmp12        [V15    ] (  1,  1   )     int  ->  [rbp-0x34]   "argument with side effect"
;  V16 tmp13        [V16    ] (  1,  1   )     int  ->  [rbp-0x38]   "argument with side effect"
;  V17 tmp14        [V17    ] (  1,  1   )     int  ->  [rbp-0x3C]   "argument with side effect"
;  V18 tmp15        [V18    ] (  1,  1   )     int  ->  [rbp-0x40]   "argument with side effect"
;  V19 tmp16        [V19    ] (  1,  1   )     int  ->  [rbp-0x44]   "argument with side effect"
;  V20 tmp17        [V20    ] (  1,  1   )     int  ->  [rbp-0x48]   "argument with side effect"
;
; Lcl frame size = 112

G_M11670_IG01:
       push     rbp
       sub      rsp, 112
       lea      rbp, [rsp+70H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      qword ptr [rbp+18H], rdx
       mov      dword ptr [rbp+20H], r8d
						;; bbWeight=1    PerfScore 6.00
G_M11670_IG02:
       mov      rcx, 0xD1FFAB1E
       mov      edx, 1
       call     CORINFO_HELP_CLASSINIT_SHARED_DYNAMICCLASS
       mov      rdx, 0xD1FFAB1E
       mov      rdx, gword ptr [rdx]
       mov      gword ptr [rbp-08H], rdx
       mov      rdx, gword ptr [rbp-08H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:.ctor(FlatBufferDeserializationContext):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex15Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-0CH], eax
       mov      edx, dword ptr [rbp-0CH]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_15(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex0Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-10H], eax
       mov      edx, dword ptr [rbp-10H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_0(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex1Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-14H], eax
       mov      edx, dword ptr [rbp-14H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_1(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex2Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-18H], eax
       mov      edx, dword ptr [rbp-18H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_2(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex3Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-1CH], eax
       mov      edx, dword ptr [rbp-1CH]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_3(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex4Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-20H], eax
       mov      edx, dword ptr [rbp-20H]
       mov      rcx, gword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 51.75
G_M11670_IG03:
       call     Struct:set___flatsharp__Int_4(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex5Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-24H], eax
       mov      edx, dword ptr [rbp-24H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_5(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex6Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-28H], eax
       mov      edx, dword ptr [rbp-28H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_6(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex7Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-2CH], eax
       mov      edx, dword ptr [rbp-2CH]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_7(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex8Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-30H], eax
       mov      edx, dword ptr [rbp-30H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_8(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex9Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-34H], eax
       mov      edx, dword ptr [rbp-34H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_9(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex10Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-38H], eax
       mov      edx, dword ptr [rbp-38H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_10(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex11Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-3CH], eax
       mov      edx, dword ptr [rbp-3CH]
       mov      rcx, gword ptr [rbp+10H]
						;; bbWeight=1    PerfScore 52.50
G_M11670_IG04:
       call     Struct:set___flatsharp__Int_11(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex12Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-40H], eax
       mov      edx, dword ptr [rbp-40H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_12(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex13Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-44H], eax
       mov      edx, dword ptr [rbp-44H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_13(int):this
       mov      rcx, gword ptr [rbp+18H]
       mov      edx, dword ptr [rbp+20H]
       xor      r8d, r8d
       xor      r9d, r9d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex14Value(Wrapper,int,int,int):int
       mov      dword ptr [rbp-48H], eax
       mov      edx, dword ptr [rbp-48H]
       mov      rcx, gword ptr [rbp+10H]
       call     Struct:set___flatsharp__Int_14(int):this
       nop      
						;; bbWeight=1    PerfScore 23.75
G_M11670_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 613, prolog size 16, PerfScore 197.30, (MethodHash=48e0d269) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.cctor()
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V01 tmp1         [V01    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M43877_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
						;; bbWeight=1    PerfScore 3.00
G_M43877_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       mov      edx, 5
       call     FlatBufferDeserializationContext:.ctor(int):this
       mov      rcx, 0xD1FFAB1E
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 7.00
G_M43877_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 75, prolog size 16, PerfScore 19.50, (MethodHash=790e549a) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.cctor()
; ============================================================

; Assembly listing for method Struct:.ctor(FlatBufferDeserializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     ref  ->  [rbp+0x18]   class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03    ] (  1,  1   )     ref  ->  [rbp-0x08]   must-init class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 48

G_M38753_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      qword ptr [rbp-08H], rax
       mov      gword ptr [rbp+10H], rcx
       mov      gword ptr [rbp+18H], rdx
						;; bbWeight=1    PerfScore 5.00
G_M38753_IG02:
       mov      rcx, gword ptr [rbp+10H]
       call     Object:.ctor():this
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      gword ptr [rbp-08H], rax
       mov      rcx, gword ptr [rbp-08H]
       mov      rdx, gword ptr [rbp+10H]
       call     IntVector:.ctor(Struct):this
       mov      rdx, gword ptr [rbp+10H]
       lea      rcx, bword ptr [rdx+8]
       mov      rdx, gword ptr [rbp-08H]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 11.00
G_M38753_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 89, prolog size 16, PerfScore 26.90, (MethodHash=d683689e) for method Struct:.ctor(FlatBufferDeserializationContext):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex15Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M3364_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M3364_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 60
       jo       SHORT G_M3364_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M3364_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M3364_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=7c47f2db) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex15Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M64894_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.75
G_M64894_IG02:
       lea      rcx, bword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       call     Wrapper:ReadInt(int):int:this
       nop      
						;; bbWeight=1    PerfScore 2.75
G_M64894_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 36, prolog size 10, PerfScore 12.10, (MethodHash=b42e0281) for method GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_15(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M63339_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M63339_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+76], edx
						;; bbWeight=1    PerfScore 3.00
G_M63339_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=da200894) for method Struct:set___flatsharp__Int_15(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex0Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M44592_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=1    PerfScore 5.75
G_M44592_IG02:
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 3.25
G_M44592_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 44, prolog size 10, PerfScore 15.40, (MethodHash=a77351cf) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex0Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_0(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M7871_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M7871_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+16], edx
						;; bbWeight=1    PerfScore 3.00
G_M7871_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=8e21e140) for method Struct:set___flatsharp__Int_0(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex1Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M12465_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M12465_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 4
       jo       SHORT G_M12465_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M12465_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M12465_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=55ebcf4e) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex1Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_1(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M57918_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M57918_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+20], edx
						;; bbWeight=1    PerfScore 3.00
G_M57918_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=d26c1dc1) for method Struct:set___flatsharp__Int_1(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex2Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M14386_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M14386_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 8
       jo       SHORT G_M14386_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M14386_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M14386_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=e157c7cd) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex2Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_2(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M26685_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M26685_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+24], edx
						;; bbWeight=1    PerfScore 3.00
G_M26685_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=54cb97c2) for method Struct:set___flatsharp__Int_2(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex3Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M47795_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M47795_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 12
       jo       SHORT G_M47795_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M47795_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M47795_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=8fd0454c) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex3Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_3(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M11196_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M11196_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+28], edx
						;; bbWeight=1    PerfScore 3.00
G_M11196_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=9915d443) for method Struct:set___flatsharp__Int_3(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex4Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M8500_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M8500_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 16
       jo       SHORT G_M8500_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M8500_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M8500_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=da86decb) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex4Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_4(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M53179_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M53179_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+32], edx
						;; bbWeight=1    PerfScore 3.00
G_M53179_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=72f03044) for method Struct:set___flatsharp__Int_4(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex5Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M41909_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M41909_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 20
       jo       SHORT G_M41909_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M41909_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M41909_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=88ff5c4a) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex5Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_5(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M37690_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M37690_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+36], edx
						;; bbWeight=1    PerfScore 3.00
G_M37690_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=b73a6cc5) for method Struct:set___flatsharp__Int_5(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex6Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M43830_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M43830_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 24
       jo       SHORT G_M43830_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M43830_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M43830_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=146b54c9) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex6Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_6(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M6457_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M6457_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+40], edx
						;; bbWeight=1    PerfScore 3.00
G_M6457_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=3999e6c6) for method Struct:set___flatsharp__Int_6(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex7Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M11703_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M11703_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 28
       jo       SHORT G_M11703_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M11703_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M11703_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=c2e3d248) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex7Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_7(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M56504_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M56504_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+44], edx
						;; bbWeight=1    PerfScore 3.00
G_M56504_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=7de42347) for method Struct:set___flatsharp__Int_7(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex8Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M2104_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M2104_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 32
       jo       SHORT G_M2104_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M2104_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M2104_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=f0edf7c7) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex8Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_8(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M48311_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M48311_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+48], edx
						;; bbWeight=1    PerfScore 3.00
G_M48311_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=fc0a4348) for method Struct:set___flatsharp__Int_8(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex9Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M35513_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M35513_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 36
       jo       SHORT G_M35513_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M35513_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M35513_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=9f667546) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex9Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_9(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M32822_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M32822_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+52], edx
						;; bbWeight=1    PerfScore 3.00
G_M32822_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=40547fc9) for method Struct:set___flatsharp__Int_9(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex10Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M7329_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M7329_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 40
       jo       SHORT G_M7329_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M7329_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M7329_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=f7ace35e) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex10Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_10(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M51438_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M51438_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+56], edx
						;; bbWeight=1    PerfScore 3.00
G_M51438_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=39a03711) for method Struct:set___flatsharp__Int_10(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex11Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M39456_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M39456_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 44
       jo       SHORT G_M39456_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M39456_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M39456_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=493465df) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex11Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_11(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M18031_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M18031_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+60], edx
						;; bbWeight=1    PerfScore 3.00
G_M18031_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=f551b990) for method Struct:set___flatsharp__Int_11(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex12Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M42659_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M42659_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 48
       jo       SHORT G_M42659_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M42659_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M42659_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=3191595c) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex12Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_12(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M29036_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M29036_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+64], edx
						;; bbWeight=1    PerfScore 3.00
G_M29036_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=bf018e93) for method Struct:set___flatsharp__Int_12(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex13Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M9250_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M9250_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 52
       jo       SHORT G_M9250_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M9250_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M9250_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=8318dbdd) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex13Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_13(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M61165_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M61165_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+68], edx
						;; bbWeight=1    PerfScore 3.00
G_M61165_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=7ab31112) for method Struct:set___flatsharp__Int_13(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex14Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]  
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 32

G_M36773_IG01:
       push     rbp
       sub      rsp, 32
       lea      rbp, [rsp+20H]
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M36773_IG02:
       mov      edx, dword ptr [rbp+18H]
       add      edx, 56
       jo       SHORT G_M36773_IG04
       mov      rcx, gword ptr [rbp+10H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 4.50
G_M36773_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M36773_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 55, prolog size 10, PerfScore 12.00, (MethodHash=2ac0705a) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex14Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_14(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp+0x10]   this class-hnd
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M31210_IG01:
       push     rbp
       mov      rbp, rsp
       mov      gword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
						;; bbWeight=1    PerfScore 3.25
G_M31210_IG02:
       mov      rax, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp+18H]
       mov      dword ptr [rax+72], edx
						;; bbWeight=1    PerfScore 3.00
G_M31210_IG03:
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 1.50

; Total bytes of code 23, prolog size 4, PerfScore 10.05, (MethodHash=1e6e8615) for method Struct:set___flatsharp__Int_14(int):this
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex1Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 loc0         [V04    ] (  1,  1   )  ushort  ->  [rbp-0x04]   must-init
;  V05 loc1         [V05    ] (  1,  1   )     int  ->  [rbp-0x08]   must-init
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M12863_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      dword ptr [rbp-08H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M12863_IG02:
       cmp      dword ptr [rbp+28H], 1
       jge      SHORT G_M12863_IG04
       xor      eax, eax
						;; bbWeight=1    PerfScore 2.25
G_M12863_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M12863_IG04:
       mov      edx, dword ptr [rbp+20H]
       add      edx, 6
       jo       SHORT G_M12863_IG08
       lea      rcx, bword ptr [rbp+10H]
       call     Wrapper:ReadUShort(int):ushort:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 0
       jne      SHORT G_M12863_IG06
       xor      eax, eax
						;; bbWeight=1    PerfScore 7.00
G_M12863_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M12863_IG06:
       mov      ecx, dword ptr [rbp+18H]
       add      ecx, dword ptr [rbp-04H]
       jo       SHORT G_M12863_IG08
       mov      dword ptr [rbp-08H], ecx
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp-08H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 7.25
G_M12863_IG07:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M12863_IG08:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 117, prolog size 18, PerfScore 34.20, (MethodHash=a260cdc0) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex1Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex2Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 loc0         [V04    ] (  1,  1   )  ushort  ->  [rbp-0x04]   must-init
;  V05 loc1         [V05    ] (  1,  1   )     int  ->  [rbp-0x08]   must-init
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M9660_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      dword ptr [rbp-08H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M9660_IG02:
       cmp      dword ptr [rbp+28H], 2
       jge      SHORT G_M9660_IG04
       xor      eax, eax
						;; bbWeight=1    PerfScore 2.25
G_M9660_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M9660_IG04:
       mov      edx, dword ptr [rbp+20H]
       add      edx, 8
       jo       SHORT G_M9660_IG08
       lea      rcx, bword ptr [rbp+10H]
       call     Wrapper:ReadUShort(int):ushort:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 0
       jne      SHORT G_M9660_IG06
       xor      eax, eax
						;; bbWeight=1    PerfScore 7.00
G_M9660_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M9660_IG06:
       mov      ecx, dword ptr [rbp+18H]
       add      ecx, dword ptr [rbp-04H]
       jo       SHORT G_M9660_IG08
       mov      dword ptr [rbp-08H], ecx
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp-08H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 7.25
G_M9660_IG07:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M9660_IG08:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 117, prolog size 18, PerfScore 34.20, (MethodHash=ba03da43) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex2Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex3Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00    ] (  1,  1   )  struct ( 8) [rbp+0x10]   do-not-enreg[XS] addr-exposed ld-addr-op
;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp+0x18]  
;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp+0x20]  
;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp+0x28]  
;  V04 loc0         [V04    ] (  1,  1   )  ushort  ->  [rbp-0x04]   must-init
;  V05 loc1         [V05    ] (  1,  1   )     int  ->  [rbp-0x08]   must-init
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 48

G_M43069_IG01:
       push     rbp
       sub      rsp, 48
       lea      rbp, [rsp+30H]
       xor      rax, rax
       mov      dword ptr [rbp-04H], eax
       mov      dword ptr [rbp-08H], eax
       mov      qword ptr [rbp+10H], rcx
       mov      dword ptr [rbp+18H], edx
       mov      dword ptr [rbp+20H], r8d
       mov      dword ptr [rbp+28H], r9d
						;; bbWeight=0    PerfScore 0.00
G_M43069_IG02:
       cmp      dword ptr [rbp+28H], 3
       jge      SHORT G_M43069_IG04
       xor      eax, eax
						;; bbWeight=1    PerfScore 2.25
G_M43069_IG03:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M43069_IG04:
       mov      edx, dword ptr [rbp+20H]
       add      edx, 10
       jo       SHORT G_M43069_IG08
       lea      rcx, bword ptr [rbp+10H]
       call     Wrapper:ReadUShort(int):ushort:this
       mov      dword ptr [rbp-04H], eax
       cmp      dword ptr [rbp-04H], 0
       jne      SHORT G_M43069_IG06
       xor      eax, eax
						;; bbWeight=1    PerfScore 7.00
G_M43069_IG05:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M43069_IG06:
       mov      ecx, dword ptr [rbp+18H]
       add      ecx, dword ptr [rbp-04H]
       jo       SHORT G_M43069_IG08
       mov      dword ptr [rbp-08H], ecx
       mov      rcx, gword ptr [rbp+10H]
       mov      edx, dword ptr [rbp-08H]
       call     GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
       nop      
						;; bbWeight=1    PerfScore 7.25
G_M43069_IG07:
       lea      rsp, [rbp]
       pop      rbp
       ret      
						;; bbWeight=1    PerfScore 2.00
G_M43069_IG08:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 117, prolog size 18, PerfScore 34.20, (MethodHash=687c57c2) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex3Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Object:.ctor():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M23468_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M23468_IG02:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 1, prolog size 0, PerfScore 1.10, (MethodHash=2994a453) for method Object:.ctor():this
; ============================================================

; Assembly listing for method ArraySegment`1:get_Count():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )   byref  ->  rcx         this
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M3797_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M3797_IG02:
       mov      eax, dword ptr [rcx+12]
						;; bbWeight=1    PerfScore 2.00
G_M3797_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 3.40, (MethodHash=81dff12a) for method ArraySegment`1:get_Count():int:this
; ============================================================

; Assembly listing for method MemoryExtensions:AsSpan(ArraySegment`1):Span`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 RetBuf       [V00,T01] (  5,  5   )   byref  ->  rcx        
;  V01 arg0         [V01,T00] (  5, 10   )   byref  ->  rdx         ld-addr-op
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V04 tmp2         [V04,T03] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V06 tmp4         [V06,T04] (  4,  4   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V08 tmp6         [V08,T07] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V09 tmp7         [V09    ] (  0,  0   )     ref  ->  zero-ref    V15._array(offs=0x00) P-INDEP "field V01._array (fldOffset=0x0)"
;* V10 tmp8         [V10    ] (  0,  0   )     int  ->  zero-ref    V15._offset(offs=0x08) P-INDEP "field V01._offset (fldOffset=0x8)"
;* V11 tmp9         [V11    ] (  0,  0   )     int  ->  zero-ref    V15._count(offs=0x0c) P-INDEP "field V01._count (fldOffset=0xc)"
;  V12 tmp10        [V12,T05] (  3,  2   )   byref  ->   r9         V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;  V13 tmp11        [V13,T06] (  3,  2   )     int  ->  r10         V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V14 tmp12        [V14,T08] (  2,  1   )   byref  ->   r9         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;* V15 tmp13        [V15    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M13336_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M13336_IG02:
       mov      rax, gword ptr [rdx]
       mov      r8d, dword ptr [rdx+8]
       mov      edx, dword ptr [rdx+12]
       test     rax, rax
       jne      SHORT G_M13336_IG05
						;; bbWeight=1    PerfScore 7.25
G_M13336_IG03:
       or       r8d, edx
       jne      SHORT G_M13336_IG09
						;; bbWeight=0.25 PerfScore 0.31
G_M13336_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M13336_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M13336_IG05:
       mov      r9d, r8d
       mov      r10d, edx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M13336_IG09
						;; bbWeight=0.25 PerfScore 1.00
G_M13336_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, edx
						;; bbWeight=0.50 PerfScore 0.50
G_M13336_IG07:
       mov      bword ptr [rcx], r9
       mov      dword ptr [rcx+8], r10d
       mov      rax, rcx
						;; bbWeight=1    PerfScore 2.25
G_M13336_IG08:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M13336_IG09:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 84, prolog size 4, PerfScore 22.46, (MethodHash=fa96cbe7) for method MemoryExtensions:AsSpan(ArraySegment`1):Span`1
; ============================================================

; Assembly listing for method ArraySegment`1:get_Array():ref:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )   byref  ->  rcx         this
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M23661_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M23661_IG02:
       mov      rax, gword ptr [rcx]
						;; bbWeight=1    PerfScore 2.00
G_M23661_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 3.40, (MethodHash=c583a392) for method ArraySegment`1:get_Array():ref:this
; ============================================================

; Assembly listing for method ArraySegment`1:get_Offset():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )   byref  ->  rcx         this
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M36923_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M36923_IG02:
       mov      eax, dword ptr [rcx+8]
						;; bbWeight=1    PerfScore 2.00
G_M36923_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 3.40, (MethodHash=885c6fc4) for method ArraySegment`1:get_Offset():int:this
; ============================================================

; Assembly listing for method Span`1:.ctor(ref,int,int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T01] (  5,  3.50)   byref  ->  rcx         this
;  V01 arg1         [V01,T00] (  5,  4   )     ref  ->  rdx         class-hnd
;  V02 arg2         [V02,T02] (  5,  3.50)     int  ->   r8        
;  V03 arg3         [V03,T03] (  5,  3.50)     int  ->   r9        
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V06 tmp2         [V06,T04] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V07 tmp3         [V07,T05] (  2,  1   )   byref  ->  rax         V05._value(offs=0x00) P-INDEP "field V05._value (fldOffset=0x0)"
;
; Lcl frame size = 40

G_M50741_IG01:
       sub      rsp, 40
       vzeroupper 
						;; bbWeight=1    PerfScore 1.25
G_M50741_IG02:
       test     rdx, rdx
       jne      SHORT G_M50741_IG06
						;; bbWeight=1    PerfScore 1.25
G_M50741_IG03:
       or       r8d, r9d
       jne      SHORT G_M50741_IG09
						;; bbWeight=0.50 PerfScore 0.63
G_M50741_IG04:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rcx], xmm0
						;; bbWeight=0.50 PerfScore 0.67
G_M50741_IG05:
       add      rsp, 40
       ret      
						;; bbWeight=0.50 PerfScore 0.63
G_M50741_IG06:
       mov      eax, r8d
       mov      r10d, r9d
       add      rax, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      rax, r10
       ja       SHORT G_M50741_IG09
						;; bbWeight=0.50 PerfScore 2.00
G_M50741_IG07:
       add      rdx, 16
       movsxd   rax, r8d
       add      rax, rdx
       mov      bword ptr [rcx], rax
       mov      dword ptr [rcx+8], r9d
						;; bbWeight=0.50 PerfScore 1.38
G_M50741_IG08:
       add      rsp, 40
       ret      
						;; bbWeight=0.50 PerfScore 0.63
G_M50741_IG09:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 76, prolog size 7, PerfScore 16.22, (MethodHash=abf339ca) for method Span`1:.ctor(ref,int,int):this
; ============================================================

; Assembly listing for method Span`1:Slice(int):Span`1:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T02] (  4,  4   )   byref  ->  rcx         this
;  V01 RetBuf       [V01,T00] (  5,  5   )   byref  ->  rdx        
;  V02 arg1         [V02,T01] (  5,  5   )     int  ->   r8        
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V05 tmp2         [V05,T03] (  2,  4   )   byref  ->  rcx         "Inlining Arg"
;* V06 tmp3         [V06    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V07 tmp4         [V07    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V08 tmp5         [V08,T04] (  2,  4   )     int  ->  rax         "Inlining Arg"
;  V09 tmp6         [V09,T06] (  2,  2   )   byref  ->  rcx         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;  V10 tmp7         [V10,T08] (  2,  2   )     int  ->  rax         V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;  V11 tmp8         [V11,T07] (  2,  2   )   byref  ->  rcx         V07._value(offs=0x00) P-INDEP "field V07._value (fldOffset=0x0)"
;  V12 cse0         [V12,T05] (  3,  3   )     int  ->  rax         "CSE - aggressive"
;
; Lcl frame size = 40

G_M29860_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M29860_IG02:
       mov      eax, dword ptr [rcx+8]
       cmp      r8d, eax
       ja       SHORT G_M29860_IG05
						;; bbWeight=1    PerfScore 3.25
G_M29860_IG03:
       mov      rcx, bword ptr [rcx]
       sub      eax, r8d
       movsxd   r8, r8d
       add      rcx, r8
       mov      bword ptr [rdx], rcx
       mov      dword ptr [rdx+8], eax
       mov      rax, rdx
						;; bbWeight=1    PerfScore 5.00
G_M29860_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M29860_IG05:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 44, prolog size 4, PerfScore 14.15, (MethodHash=d73d8b5b) for method Span`1:Slice(int):Span`1:this
; ============================================================

; Assembly listing for method Span`1:op_Implicit(Span`1):ReadOnlySpan`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 RetBuf       [V00,T01] (  5,  5   )   byref  ->  rcx        
;  V01 arg0         [V01,T00] (  4,  8   )   byref  ->  rdx         ld-addr-op
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V04 tmp2         [V04,T02] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;* V05 tmp3         [V05    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V06 tmp4         [V06,T03] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )   byref  ->  zero-ref    V12._pointer(offs=0x00) P-INDEP "field V01._pointer (fldOffset=0x0)"
;* V08 tmp6         [V08    ] (  0,  0   )     int  ->  zero-ref    V12._length(offs=0x08) P-INDEP "field V01._length (fldOffset=0x8)"
;  V09 tmp7         [V09,T04] (  2,  2   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP "field V03._pointer (fldOffset=0x0)"
;  V10 tmp8         [V10,T06] (  2,  2   )     int  ->  rdx         V03._length(offs=0x08) P-INDEP "field V03._length (fldOffset=0x8)"
;  V11 tmp9         [V11,T05] (  2,  2   )   byref  ->  rax         V05._value(offs=0x00) P-INDEP "field V05._value (fldOffset=0x0)"
;* V12 tmp10        [V12    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 0

G_M5647_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M5647_IG02:
       mov      rax, bword ptr [rdx]
       mov      edx, dword ptr [rdx+8]
       mov      bword ptr [rcx], rax
       mov      dword ptr [rcx+8], edx
       mov      rax, rcx
						;; bbWeight=1    PerfScore 6.25
G_M5647_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 16, prolog size 0, PerfScore 8.85, (MethodHash=e67ee9f0) for method Span`1:op_Implicit(Span`1):ReadOnlySpan`1
; ============================================================

; Assembly listing for method Wrapper:ReadInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )   byref  ->  rcx         this
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T06] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp4         [V06    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V07 tmp5         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V08 tmp6         [V08,T02] (  4,  5.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V09 tmp7         [V09,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V10 tmp8         [V10    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V11 tmp9         [V11,T05] (  4,  4   )     int  ->  rax         "Inlining Arg"
;* V12 tmp10        [V12    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V13 tmp11        [V13,T11] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V15 tmp13        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp14        [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp15        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp16        [V18,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V19 tmp17        [V19    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V20 tmp18        [V20    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V21 tmp19        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp20        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V23 tmp21        [V23    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V24 tmp22        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V25 tmp23        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V26 tmp24        [V26,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V27 tmp25        [V27    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V28 tmp26        [V28    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V29 tmp27        [V29    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V30 tmp28        [V30    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V31 tmp29        [V31,T12] (  2,  2   )   byref  ->   r9         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;  V32 tmp30        [V32,T08] (  3,  3   )     int  ->  r10         V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V33 tmp31        [V33    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V34 tmp32        [V34    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V35 tmp33        [V35,T13] (  2,  2   )   byref  ->  rax         V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V36 tmp34        [V36    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;  V37 tmp35        [V37,T14] (  2,  2   )     ref  ->  rcx         V07._array(offs=0x00) P-INDEP "field V07._array (fldOffset=0x0)"
;  V38 tmp36        [V38,T22] (  2,  2   )     int  ->   r8         V07._offset(offs=0x08) P-INDEP "field V07._offset (fldOffset=0x8)"
;  V39 tmp37        [V39,T23] (  2,  2   )     int  ->  rax         V07._count(offs=0x0c) P-INDEP "field V07._count (fldOffset=0xc)"
;  V40 tmp38        [V40,T09] (  3,  2   )   byref  ->   r9         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;  V41 tmp39        [V41,T10] (  3,  2   )     int  ->  r10         V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V42 tmp40        [V42,T24] (  2,  1   )   byref  ->   r9         V12._value(offs=0x00) P-INDEP "field V12._value (fldOffset=0x0)"
;* V43 tmp41        [V43    ] (  0,  0   )   byref  ->  zero-ref    V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;* V44 tmp42        [V44    ] (  0,  0   )     int  ->  zero-ref    V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V45 tmp43        [V45,T15] (  2,  2   )   byref  ->  rax         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V46 tmp44        [V46    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V47 tmp45        [V47    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V48 tmp46        [V48,T16] (  2,  2   )   byref  ->  rax         V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V49 tmp47        [V49    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V50 tmp48        [V50,T17] (  2,  2   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;  V51 tmp49        [V51,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V52 tmp50        [V52    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V53 tmp51        [V53,T19] (  2,  2   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V54 tmp52        [V54    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V55 tmp53        [V55,T20] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V56 tmp54        [V56    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;* V57 tmp55        [V57    ] (  0,  0   )   byref  ->  zero-ref    V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V58 tmp56        [V58    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V59 tmp57        [V59,T00] (  4,  8   )   byref  ->  rax         "BlockOp address local"
;
; Lcl frame size = 40

G_M20277_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M20277_IG02:
       mov      rax, gword ptr [rcx]
       add      rax, 16
       mov      rcx, gword ptr [rax]
       mov      r8d, dword ptr [rax+8]
       mov      eax, dword ptr [rax+12]
       test     rcx, rcx
       jne      SHORT G_M20277_IG05
						;; bbWeight=1    PerfScore 9.50
G_M20277_IG03:
       or       r8d, eax
       jne      SHORT G_M20277_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M20277_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M20277_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M20277_IG05:
       mov      r9d, r8d
       mov      r10d, eax
       add      r9, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      r9, r10
       ja       SHORT G_M20277_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M20277_IG06:
       add      rcx, 16
       movsxd   r9, r8d
       add      r9, rcx
       mov      r10d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M20277_IG07:
       cmp      edx, r10d
       ja       SHORT G_M20277_IG11
						;; bbWeight=1    PerfScore 1.25
G_M20277_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M20277_IG12
						;; bbWeight=1    PerfScore 2.00
G_M20277_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M20277_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M20277_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M20277_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 114, prolog size 4, PerfScore 30.71, (MethodHash=aba6b0ca) for method Wrapper:ReadInt(int):int:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;* V02 loc0         [V02    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V05 tmp2         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp3         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V07 tmp4         [V07,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V08 tmp5         [V08,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V09 tmp6         [V09    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V10 tmp7         [V10,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V11 tmp8         [V11    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V12 tmp9         [V12,T10] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V13 tmp10        [V13    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V14 tmp11        [V14    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V15 tmp12        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp13        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp14        [V17,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V18 tmp15        [V18    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V19 tmp16        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp17        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp18        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V22 tmp19        [V22    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V23 tmp20        [V23    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V24 tmp21        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V25 tmp22        [V25,T20] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V26 tmp23        [V26    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V27 tmp24        [V27    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V28 tmp25        [V28    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V29 tmp26        [V29    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V30 tmp27        [V30,T11] (  2,  2   )   byref  ->   r9         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V31 tmp28        [V31,T07] (  3,  3   )     int  ->  r10         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;* V32 tmp29        [V32    ] (  0,  0   )   byref  ->  zero-ref    V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V33 tmp30        [V33    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;  V34 tmp31        [V34,T12] (  2,  2   )   byref  ->  rax         V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V35 tmp32        [V35    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V36 tmp33        [V36,T13] (  2,  2   )     ref  ->  rax         V06._array(offs=0x00) P-INDEP "field V06._array (fldOffset=0x0)"
;  V37 tmp34        [V37,T21] (  2,  2   )     int  ->   r8         V06._offset(offs=0x08) P-INDEP "field V06._offset (fldOffset=0x8)"
;  V38 tmp35        [V38,T22] (  2,  2   )     int  ->  rcx         V06._count(offs=0x0c) P-INDEP "field V06._count (fldOffset=0xc)"
;  V39 tmp36        [V39,T08] (  3,  2   )   byref  ->   r9         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V40 tmp37        [V40,T09] (  3,  2   )     int  ->  r10         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp38        [V41,T23] (  2,  1   )   byref  ->   r9         V11._value(offs=0x00) P-INDEP "field V11._value (fldOffset=0x0)"
;* V42 tmp39        [V42    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;* V43 tmp40        [V43    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V44 tmp41        [V44,T14] (  2,  2   )   byref  ->  rax         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V45 tmp42        [V45    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V46 tmp43        [V46    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V47 tmp44        [V47,T15] (  2,  2   )   byref  ->  rax         V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V48 tmp45        [V48    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V49 tmp46        [V49,T16] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;  V50 tmp47        [V50,T17] (  2,  2   )   byref  ->  rax         V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V51 tmp48        [V51    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V52 tmp49        [V52,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V53 tmp50        [V53    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V54 tmp51        [V54,T19] (  2,  2   )   byref  ->  rax         V26._pointer(offs=0x00) P-INDEP "field V26._pointer (fldOffset=0x0)"
;* V55 tmp52        [V55    ] (  0,  0   )     int  ->  zero-ref    V26._length(offs=0x08) P-INDEP "field V26._length (fldOffset=0x8)"
;* V56 tmp53        [V56    ] (  0,  0   )   byref  ->  zero-ref    V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V57 tmp54        [V57    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V58 tmp55        [V58,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M20425_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M20425_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M20425_IG05
						;; bbWeight=1    PerfScore 7.50
G_M20425_IG03:
       or       r8d, ecx
       jne      SHORT G_M20425_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M20425_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M20425_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M20425_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M20425_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M20425_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M20425_IG07:
       cmp      edx, r10d
       ja       SHORT G_M20425_IG11
						;; bbWeight=1    PerfScore 1.25
G_M20425_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M20425_IG12
						;; bbWeight=1    PerfScore 2.00
G_M20425_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M20425_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M20425_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M20425_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 111, prolog size 4, PerfScore 28.41, (MethodHash=0918b036) for method ArrayInputBuffer:ReadInt(int):int:this
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadInt(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T03] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V05 tmp4         [V05    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V06 tmp5         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V07 tmp6         [V07    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V08 tmp7         [V08    ] (  0,  0   )   byref  ->  zero-ref    V16._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V09 tmp8         [V09    ] (  0,  0   )     int  ->  zero-ref    V16._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V10 tmp9         [V10,T01] (  2,  2   )   byref  ->  rax         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V11 tmp10        [V11,T04] (  2,  2   )     int  ->  rcx         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;  V12 tmp11        [V12,T02] (  2,  2   )   byref  ->  rax         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V13 tmp12        [V13    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V14 tmp13        [V14    ] (  0,  0   )   byref  ->  zero-ref    V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V15 tmp14        [V15    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;* V16 tmp15        [V16    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M5013_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M5013_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 4
       jl       SHORT G_M5013_IG05
						;; bbWeight=1    PerfScore 5.25
G_M5013_IG03:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M5013_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M5013_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 33, prolog size 4, PerfScore 12.05, (MethodHash=79f4ec6a) for method ScalarSpanReader:ReadInt(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method BinaryPrimitives:ReadInt32LittleEndian(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 loc0         [V01,T02] (  2,  2   )     int  ->  rax        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V06 tmp4         [V06    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V08 tmp6         [V08    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V09 tmp7         [V09,T01] (  2,  2   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP "field V03._pointer (fldOffset=0x0)"
;  V10 tmp8         [V10,T03] (  2,  2   )     int  ->  rcx         V03._length(offs=0x08) P-INDEP "field V03._length (fldOffset=0x8)"
;* V11 tmp9         [V11    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V12 tmp10        [V12    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;* V13 tmp11        [V13    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M32043_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M32043_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 4
       jl       SHORT G_M32043_IG05
						;; bbWeight=1    PerfScore 5.25
G_M32043_IG03:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M32043_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M32043_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 33, prolog size 4, PerfScore 12.05, (MethodHash=893882d4) for method BinaryPrimitives:ReadInt32LittleEndian(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp4         [V06    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V07 tmp5         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V08 tmp6         [V08,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V09 tmp7         [V09,T03] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V10 tmp8         [V10    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V11 tmp9         [V11,T04] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V12 tmp10        [V12    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V13 tmp11        [V13,T10] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V15 tmp13        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp14        [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp15        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp16        [V18,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V19 tmp17        [V19    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V20 tmp18        [V20    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V21 tmp19        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp20        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V23 tmp21        [V23    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V24 tmp22        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V25 tmp23        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V26 tmp24        [V26,T20] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V27 tmp25        [V27    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V28 tmp26        [V28    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V29 tmp27        [V29    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V30 tmp28        [V30    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V31 tmp29        [V31,T05] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V32 tmp30        [V32,T11] (  2,  2   )   byref  ->   r9         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;  V33 tmp31        [V33,T07] (  3,  3   )     int  ->  r10         V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V34 tmp32        [V34    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V35 tmp33        [V35    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V36 tmp34        [V36,T12] (  2,  2   )   byref  ->  rax         V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V37 tmp35        [V37    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;  V38 tmp36        [V38,T13] (  2,  2   )     ref  ->  rax         V07._array(offs=0x00) P-INDEP "field V07._array (fldOffset=0x0)"
;  V39 tmp37        [V39,T21] (  2,  2   )     int  ->   r8         V07._offset(offs=0x08) P-INDEP "field V07._offset (fldOffset=0x8)"
;  V40 tmp38        [V40,T22] (  2,  2   )     int  ->  rcx         V07._count(offs=0x0c) P-INDEP "field V07._count (fldOffset=0xc)"
;  V41 tmp39        [V41,T08] (  3,  2   )   byref  ->   r9         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;  V42 tmp40        [V42,T09] (  3,  2   )     int  ->  r10         V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp41        [V43,T23] (  2,  1   )   byref  ->   r9         V12._value(offs=0x00) P-INDEP "field V12._value (fldOffset=0x0)"
;* V44 tmp42        [V44    ] (  0,  0   )   byref  ->  zero-ref    V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;* V45 tmp43        [V45    ] (  0,  0   )     int  ->  zero-ref    V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V46 tmp44        [V46,T14] (  2,  2   )   byref  ->  rax         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V47 tmp45        [V47    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V48 tmp46        [V48    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V49 tmp47        [V49,T15] (  2,  2   )   byref  ->  rax         V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V50 tmp48        [V50    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V51 tmp49        [V51,T16] (  2,  2   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;  V52 tmp50        [V52,T17] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V53 tmp51        [V53    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V54 tmp52        [V54,T18] (  2,  2   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V55 tmp53        [V55    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V56 tmp54        [V56,T19] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V57 tmp55        [V57    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;* V58 tmp56        [V58    ] (  0,  0   )   byref  ->  zero-ref    V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V59 tmp57        [V59    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V60 tmp58        [V60,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M64894_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M64894_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M64894_IG05
						;; bbWeight=1    PerfScore 7.50
G_M64894_IG03:
       or       r8d, ecx
       jne      SHORT G_M64894_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M64894_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M64894_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M64894_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M64894_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M64894_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M64894_IG07:
       cmp      edx, r10d
       ja       SHORT G_M64894_IG11
						;; bbWeight=1    PerfScore 1.25
G_M64894_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M64894_IG12
						;; bbWeight=1    PerfScore 2.00
G_M64894_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M64894_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M64894_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M64894_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 111, prolog size 4, PerfScore 28.41, (MethodHash=b42e0281) for method GeneratedSerializer:Read_871da7cf3f784556aa1b530f1148d63c(Wrapper,int):int
; ============================================================

; Assembly listing for method Wrapper:ReadUShort(int):ushort:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )   byref  ->  rcx         this
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T06] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp4         [V06    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V07 tmp5         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V08 tmp6         [V08,T02] (  4,  5.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V09 tmp7         [V09,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V10 tmp8         [V10    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V11 tmp9         [V11,T05] (  4,  4   )     int  ->  rax         "Inlining Arg"
;* V12 tmp10        [V12    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V13 tmp11        [V13,T11] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V15 tmp13        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp14        [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp15        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp16        [V18,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V19 tmp17        [V19    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V20 tmp18        [V20    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V21 tmp19        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp20        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V23 tmp21        [V23    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V24 tmp22        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V25 tmp23        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V26 tmp24        [V26,T21] (  2,  2   )  ushort  ->  rax         "Inline stloc first use temp"
;* V27 tmp25        [V27    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V28 tmp26        [V28    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V29 tmp27        [V29    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V30 tmp28        [V30    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V31 tmp29        [V31,T12] (  2,  2   )   byref  ->   r9         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;  V32 tmp30        [V32,T08] (  3,  3   )     int  ->  r10         V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V33 tmp31        [V33    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V34 tmp32        [V34    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V35 tmp33        [V35,T13] (  2,  2   )   byref  ->  rax         V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V36 tmp34        [V36    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;  V37 tmp35        [V37,T14] (  2,  2   )     ref  ->  rcx         V07._array(offs=0x00) P-INDEP "field V07._array (fldOffset=0x0)"
;  V38 tmp36        [V38,T22] (  2,  2   )     int  ->   r8         V07._offset(offs=0x08) P-INDEP "field V07._offset (fldOffset=0x8)"
;  V39 tmp37        [V39,T23] (  2,  2   )     int  ->  rax         V07._count(offs=0x0c) P-INDEP "field V07._count (fldOffset=0xc)"
;  V40 tmp38        [V40,T09] (  3,  2   )   byref  ->   r9         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;  V41 tmp39        [V41,T10] (  3,  2   )     int  ->  r10         V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V42 tmp40        [V42,T24] (  2,  1   )   byref  ->   r9         V12._value(offs=0x00) P-INDEP "field V12._value (fldOffset=0x0)"
;* V43 tmp41        [V43    ] (  0,  0   )   byref  ->  zero-ref    V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;* V44 tmp42        [V44    ] (  0,  0   )     int  ->  zero-ref    V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V45 tmp43        [V45,T15] (  2,  2   )   byref  ->  rax         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V46 tmp44        [V46    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V47 tmp45        [V47    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V48 tmp46        [V48,T16] (  2,  2   )   byref  ->  rax         V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V49 tmp47        [V49    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V50 tmp48        [V50,T17] (  2,  2   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;  V51 tmp49        [V51,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V52 tmp50        [V52    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V53 tmp51        [V53,T19] (  2,  2   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V54 tmp52        [V54    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V55 tmp53        [V55,T20] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V56 tmp54        [V56    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;* V57 tmp55        [V57    ] (  0,  0   )   byref  ->  zero-ref    V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V58 tmp56        [V58    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V59 tmp57        [V59,T00] (  4,  8   )   byref  ->  rax         "BlockOp address local"
;
; Lcl frame size = 40

G_M23989_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M23989_IG02:
       mov      rax, gword ptr [rcx]
       add      rax, 16
       mov      rcx, gword ptr [rax]
       mov      r8d, dword ptr [rax+8]
       mov      eax, dword ptr [rax+12]
       test     rcx, rcx
       jne      SHORT G_M23989_IG05
						;; bbWeight=1    PerfScore 9.50
G_M23989_IG03:
       or       r8d, eax
       jne      SHORT G_M23989_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M23989_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M23989_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M23989_IG05:
       mov      r9d, r8d
       mov      r10d, eax
       add      r9, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      r9, r10
       ja       SHORT G_M23989_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M23989_IG06:
       add      rcx, 16
       movsxd   r9, r8d
       add      r9, rcx
       mov      r10d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M23989_IG07:
       cmp      edx, r10d
       ja       SHORT G_M23989_IG11
						;; bbWeight=1    PerfScore 1.25
G_M23989_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 2
       jl       SHORT G_M23989_IG12
						;; bbWeight=1    PerfScore 2.00
G_M23989_IG09:
       movzx    rax, word  ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M23989_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M23989_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M23989_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 115, prolog size 4, PerfScore 30.81, (MethodHash=b4b6a24a) for method Wrapper:ReadUShort(int):ushort:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadUShort(int):ushort:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;* V02 loc0         [V02    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V05 tmp2         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp3         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V07 tmp4         [V07,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V08 tmp5         [V08,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V09 tmp6         [V09    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V10 tmp7         [V10,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V11 tmp8         [V11    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V12 tmp9         [V12,T10] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V13 tmp10        [V13    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V14 tmp11        [V14    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V15 tmp12        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp13        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp14        [V17,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V18 tmp15        [V18    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V19 tmp16        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp17        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp18        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V22 tmp19        [V22    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V23 tmp20        [V23    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V24 tmp21        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V25 tmp22        [V25,T20] (  2,  2   )  ushort  ->  rax         "Inline stloc first use temp"
;* V26 tmp23        [V26    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V27 tmp24        [V27    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V28 tmp25        [V28    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V29 tmp26        [V29    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V30 tmp27        [V30,T11] (  2,  2   )   byref  ->   r9         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V31 tmp28        [V31,T07] (  3,  3   )     int  ->  r10         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;* V32 tmp29        [V32    ] (  0,  0   )   byref  ->  zero-ref    V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V33 tmp30        [V33    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;  V34 tmp31        [V34,T12] (  2,  2   )   byref  ->  rax         V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V35 tmp32        [V35    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V36 tmp33        [V36,T13] (  2,  2   )     ref  ->  rax         V06._array(offs=0x00) P-INDEP "field V06._array (fldOffset=0x0)"
;  V37 tmp34        [V37,T21] (  2,  2   )     int  ->   r8         V06._offset(offs=0x08) P-INDEP "field V06._offset (fldOffset=0x8)"
;  V38 tmp35        [V38,T22] (  2,  2   )     int  ->  rcx         V06._count(offs=0x0c) P-INDEP "field V06._count (fldOffset=0xc)"
;  V39 tmp36        [V39,T08] (  3,  2   )   byref  ->   r9         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V40 tmp37        [V40,T09] (  3,  2   )     int  ->  r10         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp38        [V41,T23] (  2,  1   )   byref  ->   r9         V11._value(offs=0x00) P-INDEP "field V11._value (fldOffset=0x0)"
;* V42 tmp39        [V42    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;* V43 tmp40        [V43    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V44 tmp41        [V44,T14] (  2,  2   )   byref  ->  rax         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V45 tmp42        [V45    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V46 tmp43        [V46    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V47 tmp44        [V47,T15] (  2,  2   )   byref  ->  rax         V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V48 tmp45        [V48    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V49 tmp46        [V49,T16] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;  V50 tmp47        [V50,T17] (  2,  2   )   byref  ->  rax         V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V51 tmp48        [V51    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V52 tmp49        [V52,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V53 tmp50        [V53    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V54 tmp51        [V54,T19] (  2,  2   )   byref  ->  rax         V26._pointer(offs=0x00) P-INDEP "field V26._pointer (fldOffset=0x0)"
;* V55 tmp52        [V55    ] (  0,  0   )     int  ->  zero-ref    V26._length(offs=0x08) P-INDEP "field V26._length (fldOffset=0x8)"
;* V56 tmp53        [V56    ] (  0,  0   )   byref  ->  zero-ref    V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V57 tmp54        [V57    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V58 tmp55        [V58,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M40841_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M40841_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M40841_IG05
						;; bbWeight=1    PerfScore 7.50
G_M40841_IG03:
       or       r8d, ecx
       jne      SHORT G_M40841_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M40841_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M40841_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M40841_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M40841_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M40841_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M40841_IG07:
       cmp      edx, r10d
       ja       SHORT G_M40841_IG11
						;; bbWeight=1    PerfScore 1.25
G_M40841_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 2
       jl       SHORT G_M40841_IG12
						;; bbWeight=1    PerfScore 2.00
G_M40841_IG09:
       movzx    rax, word  ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M40841_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M40841_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M40841_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 112, prolog size 4, PerfScore 28.51, (MethodHash=19276076) for method ArrayInputBuffer:ReadUShort(int):ushort:this
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadUShort(ReadOnlySpan`1):ushort
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T03] (  2,  2   )  ushort  ->  rax         "Inline stloc first use temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V05 tmp4         [V05    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V06 tmp5         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V07 tmp6         [V07    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V08 tmp7         [V08    ] (  0,  0   )   byref  ->  zero-ref    V16._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V09 tmp8         [V09    ] (  0,  0   )     int  ->  zero-ref    V16._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V10 tmp9         [V10,T01] (  2,  2   )   byref  ->  rax         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V11 tmp10        [V11,T04] (  2,  2   )     int  ->  rcx         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;  V12 tmp11        [V12,T02] (  2,  2   )   byref  ->  rax         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V13 tmp12        [V13    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V14 tmp13        [V14    ] (  0,  0   )   byref  ->  zero-ref    V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V15 tmp14        [V15    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;* V16 tmp15        [V16    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M64341_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M64341_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 2
       jl       SHORT G_M64341_IG05
						;; bbWeight=1    PerfScore 5.25
G_M64341_IG03:
       movzx    rax, word  ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M64341_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M64341_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 34, prolog size 4, PerfScore 12.15, (MethodHash=6f1104aa) for method ScalarSpanReader:ReadUShort(ReadOnlySpan`1):ushort
; ============================================================

; Assembly listing for method BinaryPrimitives:ReadUInt16LittleEndian(ReadOnlySpan`1):ushort
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 loc0         [V01,T02] (  2,  2   )  ushort  ->  rax        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V06 tmp4         [V06    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V08 tmp6         [V08    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V09 tmp7         [V09,T01] (  2,  2   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP "field V03._pointer (fldOffset=0x0)"
;  V10 tmp8         [V10,T03] (  2,  2   )     int  ->  rcx         V03._length(offs=0x08) P-INDEP "field V03._length (fldOffset=0x8)"
;* V11 tmp9         [V11    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V12 tmp10        [V12    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;* V13 tmp11        [V13    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M23884_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M23884_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 2
       jl       SHORT G_M23884_IG05
						;; bbWeight=1    PerfScore 5.25
G_M23884_IG03:
       movzx    rax, word  ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M23884_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M23884_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 34, prolog size 4, PerfScore 12.15, (MethodHash=d3d6a2b3) for method BinaryPrimitives:ReadUInt16LittleEndian(ReadOnlySpan`1):ushort
; ============================================================

; Assembly listing for method ArrayInputBuffer:get_Length():int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;# V01 OutArgs      [V01    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02,T01] (  2,  4   )   byref  ->  rcx         "Inlining Arg"
;
; Lcl frame size = 0

G_M42990_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M42990_IG02:
       add      rcx, 16
       mov      eax, dword ptr [rcx+12]
						;; bbWeight=1    PerfScore 2.25
G_M42990_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 8, prolog size 0, PerfScore 4.05, (MethodHash=971c5811) for method ArrayInputBuffer:get_Length():int:this
; ============================================================

; Assembly listing for method IntVector:.ctor(Struct):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     ref  ->  rdx         class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M20740_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M20740_IG02:
       lea      rcx, bword ptr [rcx+8]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M20740_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 11, prolog size 0, PerfScore 3.85, (MethodHash=a9f2aefb) for method IntVector:.ctor(Struct):this
; ============================================================

; Assembly listing for method ScalarTable:get_Serializer():ISerializer`1
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;# V00 OutArgs      [V00    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M16858_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M16858_IG02:
       mov      rax, 0xD1FFAB1E
       mov      rax, gword ptr [rax]
						;; bbWeight=1    PerfScore 2.25
G_M16858_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 14, prolog size 0, PerfScore 4.65, (MethodHash=354fbe25) for method ScalarTable:get_Serializer():ISerializer`1
; ============================================================

; Assembly listing for method InputBufferExtensions:InitializeVTable(Wrapper,int,byref,byref)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T00] (  6,  6   )     int  ->  rdx        
;  V02 arg2         [V02,T04] (  4,  4   )   byref  ->   r8        
;  V03 arg3         [V03,T07] (  3,  3   )   byref  ->  rsi        
;  V04 loc0         [V04,T08] (  4,  4   )  ushort  ->  rdi        
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V06 tmp1         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V07 tmp2         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V08 tmp3         [V08    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V09 tmp4         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp5         [V10    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V11 tmp6         [V11,T05] (  4,  5.50)     ref  ->   r9         class-hnd "impAppendStmt"
;  V12 tmp7         [V12,T09] (  4,  4   )     int  ->  r10         "impAppendStmt"
;* V13 tmp8         [V13    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V14 tmp9         [V14,T10] (  4,  4   )     int  ->  rax         "Inlining Arg"
;* V15 tmp10        [V15    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V16 tmp11        [V16,T23] (  2,  2   )   byref  ->   r9         "Inlining Arg"
;* V17 tmp12        [V17    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V18 tmp13        [V18    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V19 tmp14        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp15        [V20    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V21 tmp16        [V21,T14] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V22 tmp17        [V22    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V23 tmp18        [V23    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V24 tmp19        [V24    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V25 tmp20        [V25    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V26 tmp21        [V26    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V27 tmp22        [V27    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V28 tmp23        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V29 tmp24        [V29,T43] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V30 tmp25        [V30    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V31 tmp26        [V31    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V32 tmp27        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp28        [V33    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V34 tmp29        [V34,T03] (  4,  8   )     int  ->  rax         "Inlining Arg"
;* V35 tmp30        [V35    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V36 tmp31        [V36    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V37 tmp32        [V37    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V38 tmp33        [V38    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V39 tmp34        [V39    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V40 tmp35        [V40,T06] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V41 tmp36        [V41,T11] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V42 tmp37        [V42    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V43 tmp38        [V43,T12] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V44 tmp39        [V44    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V45 tmp40        [V45,T24] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;* V46 tmp41        [V46    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V47 tmp42        [V47    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V48 tmp43        [V48    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V49 tmp44        [V49    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V50 tmp45        [V50,T15] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V51 tmp46        [V51    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V52 tmp47        [V52    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V53 tmp48        [V53    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V54 tmp49        [V54    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V55 tmp50        [V55    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V56 tmp51        [V56    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V57 tmp52        [V57    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V58 tmp53        [V58,T44] (  2,  2   )  ushort  ->  rdi         "Inline stloc first use temp"
;* V59 tmp54        [V59    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V60 tmp55        [V60    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V61 tmp56        [V61    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V62 tmp57        [V62    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V63 tmp58        [V63,T13] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V64 tmp59        [V64,T25] (  2,  2   )   byref  ->  r11         V07._pointer(offs=0x00) P-INDEP "field V07._pointer (fldOffset=0x0)"
;  V65 tmp60        [V65,T17] (  3,  3   )     int  ->  r10         V07._length(offs=0x08) P-INDEP "field V07._length (fldOffset=0x8)"
;* V66 tmp61        [V66    ] (  0,  0   )   byref  ->  zero-ref    V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;* V67 tmp62        [V67    ] (  0,  0   )     int  ->  zero-ref    V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;  V68 tmp63        [V68,T26] (  2,  2   )   byref  ->  rax         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V69 tmp64        [V69    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V70 tmp65        [V70,T27] (  2,  2   )     ref  ->   r9         V10._array(offs=0x00) P-INDEP "field V10._array (fldOffset=0x0)"
;  V71 tmp66        [V71,T45] (  2,  2   )     int  ->  r10         V10._offset(offs=0x08) P-INDEP "field V10._offset (fldOffset=0x8)"
;  V72 tmp67        [V72,T46] (  2,  2   )     int  ->  rax         V10._count(offs=0x0c) P-INDEP "field V10._count (fldOffset=0xc)"
;  V73 tmp68        [V73,T19] (  3,  2   )   byref  ->  r11         V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;  V74 tmp69        [V74,T21] (  3,  2   )     int  ->  r10         V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V75 tmp70        [V75,T49] (  2,  1   )   byref  ->  r11         V15._value(offs=0x00) P-INDEP "field V15._value (fldOffset=0x0)"
;* V76 tmp71        [V76    ] (  0,  0   )   byref  ->  zero-ref    V17._pointer(offs=0x00) P-INDEP "field V17._pointer (fldOffset=0x0)"
;* V77 tmp72        [V77    ] (  0,  0   )     int  ->  zero-ref    V17._length(offs=0x08) P-INDEP "field V17._length (fldOffset=0x8)"
;  V78 tmp73        [V78,T28] (  2,  2   )   byref  ->  rax         V20._value(offs=0x00) P-INDEP "field V20._value (fldOffset=0x0)"
;* V79 tmp74        [V79    ] (  0,  0   )   byref  ->  zero-ref    V22._pointer(offs=0x00) P-INDEP "field V22._pointer (fldOffset=0x0)"
;* V80 tmp75        [V80    ] (  0,  0   )     int  ->  zero-ref    V22._length(offs=0x08) P-INDEP "field V22._length (fldOffset=0x8)"
;  V81 tmp76        [V81,T29] (  2,  2   )   byref  ->  rax         V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V82 tmp77        [V82    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V83 tmp78        [V83,T30] (  2,  2   )   byref  ->  rax         V25._value(offs=0x00) P-INDEP "field V25._value (fldOffset=0x0)"
;  V84 tmp79        [V84,T31] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V85 tmp80        [V85    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;  V86 tmp81        [V86,T32] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V87 tmp82        [V87    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V88 tmp83        [V88,T33] (  2,  2   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V89 tmp84        [V89    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;* V90 tmp85        [V90    ] (  0,  0   )   byref  ->  zero-ref    V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V91 tmp86        [V91    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;  V92 tmp87        [V92,T34] (  2,  2   )   byref  ->   r9         V36._pointer(offs=0x00) P-INDEP "field V36._pointer (fldOffset=0x0)"
;  V93 tmp88        [V93,T18] (  3,  3   )     int  ->  r10         V36._length(offs=0x08) P-INDEP "field V36._length (fldOffset=0x8)"
;* V94 tmp89        [V94    ] (  0,  0   )   byref  ->  zero-ref    V37._pointer(offs=0x00) P-INDEP "field V37._pointer (fldOffset=0x0)"
;* V95 tmp90        [V95    ] (  0,  0   )     int  ->  zero-ref    V37._length(offs=0x08) P-INDEP "field V37._length (fldOffset=0x8)"
;  V96 tmp91        [V96,T35] (  2,  2   )   byref  ->  rax         V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;* V97 tmp92        [V97    ] (  0,  0   )     int  ->  zero-ref    V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;  V98 tmp93        [V98,T36] (  2,  2   )     ref  ->  rdx         V39._array(offs=0x00) P-INDEP "field V39._array (fldOffset=0x0)"
;  V99 tmp94        [V99,T47] (  2,  2   )     int  ->   r8         V39._offset(offs=0x08) P-INDEP "field V39._offset (fldOffset=0x8)"
;  V100 tmp95       [V100,T48] (  2,  2   )     int  ->  rcx         V39._count(offs=0x0c) P-INDEP "field V39._count (fldOffset=0xc)"
;  V101 tmp96       [V101,T20] (  3,  2   )   byref  ->   r9         V42._pointer(offs=0x00) P-INDEP "field V42._pointer (fldOffset=0x0)"
;  V102 tmp97       [V102,T22] (  3,  2   )     int  ->  r10         V42._length(offs=0x08) P-INDEP "field V42._length (fldOffset=0x8)"
;  V103 tmp98       [V103,T50] (  2,  1   )   byref  ->   r9         V44._value(offs=0x00) P-INDEP "field V44._value (fldOffset=0x0)"
;* V104 tmp99       [V104    ] (  0,  0   )   byref  ->  zero-ref    V46._pointer(offs=0x00) P-INDEP "field V46._pointer (fldOffset=0x0)"
;* V105 tmp100      [V105    ] (  0,  0   )     int  ->  zero-ref    V46._length(offs=0x08) P-INDEP "field V46._length (fldOffset=0x8)"
;  V106 tmp101      [V106,T37] (  2,  2   )   byref  ->  rax         V49._value(offs=0x00) P-INDEP "field V49._value (fldOffset=0x0)"
;* V107 tmp102      [V107    ] (  0,  0   )   byref  ->  zero-ref    V51._pointer(offs=0x00) P-INDEP "field V51._pointer (fldOffset=0x0)"
;* V108 tmp103      [V108    ] (  0,  0   )     int  ->  zero-ref    V51._length(offs=0x08) P-INDEP "field V51._length (fldOffset=0x8)"
;  V109 tmp104      [V109,T38] (  2,  2   )   byref  ->  rax         V52._pointer(offs=0x00) P-INDEP "field V52._pointer (fldOffset=0x0)"
;* V110 tmp105      [V110    ] (  0,  0   )     int  ->  zero-ref    V52._length(offs=0x08) P-INDEP "field V52._length (fldOffset=0x8)"
;  V111 tmp106      [V111,T39] (  2,  2   )   byref  ->  rax         V54._value(offs=0x00) P-INDEP "field V54._value (fldOffset=0x0)"
;  V112 tmp107      [V112,T40] (  2,  2   )   byref  ->  rax         V56._pointer(offs=0x00) P-INDEP "field V56._pointer (fldOffset=0x0)"
;* V113 tmp108      [V113    ] (  0,  0   )     int  ->  zero-ref    V56._length(offs=0x08) P-INDEP "field V56._length (fldOffset=0x8)"
;  V114 tmp109      [V114,T41] (  2,  2   )   byref  ->  rax         V57._pointer(offs=0x00) P-INDEP "field V57._pointer (fldOffset=0x0)"
;* V115 tmp110      [V115    ] (  0,  0   )     int  ->  zero-ref    V57._length(offs=0x08) P-INDEP "field V57._length (fldOffset=0x8)"
;  V116 tmp111      [V116,T42] (  2,  2   )   byref  ->  rax         V59._pointer(offs=0x00) P-INDEP "field V59._pointer (fldOffset=0x0)"
;* V117 tmp112      [V117    ] (  0,  0   )     int  ->  zero-ref    V59._length(offs=0x08) P-INDEP "field V59._length (fldOffset=0x8)"
;* V118 tmp113      [V118    ] (  0,  0   )   byref  ->  zero-ref    V61._pointer(offs=0x00) P-INDEP "field V61._pointer (fldOffset=0x0)"
;* V119 tmp114      [V119    ] (  0,  0   )     int  ->  zero-ref    V61._length(offs=0x08) P-INDEP "field V61._length (fldOffset=0x8)"
;  V120 tmp115      [V120,T01] (  4,  8   )   byref  ->  rax         "BlockOp address local"
;  V121 tmp116      [V121,T02] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;  V122 cse0        [V122,T16] (  3,  3   )   byref  ->  rcx         "CSE - moderate"
;
; Lcl frame size = 40

G_M59761_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
       mov      rsi, r9
						;; bbWeight=1    PerfScore 2.50
G_M59761_IG02:
       add      rcx, 16
       mov      rax, rcx
       mov      r9, gword ptr [rax]
       mov      r10d, dword ptr [rax+8]
       mov      eax, dword ptr [rax+12]
       test     r9, r9
       jne      SHORT G_M59761_IG05
						;; bbWeight=1    PerfScore 7.75
G_M59761_IG03:
       or       r10d, eax
       jne      G_M59761_IG20
						;; bbWeight=0.25 PerfScore 0.31
G_M59761_IG04:
       xor      r11, r11
       xor      r10d, r10d
       jmp      SHORT G_M59761_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M59761_IG05:
       mov      r11d, r10d
       mov      edi, eax
       add      r11, rdi
       mov      edi, dword ptr [r9+8]
       cmp      r11, rdi
       ja       G_M59761_IG20
						;; bbWeight=0.25 PerfScore 1.00
G_M59761_IG06:
       add      r9, 16
       movsxd   r11, r10d
       add      r11, r9
       mov      r10d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M59761_IG07:
       cmp      edx, r10d
       ja       G_M59761_IG20
						;; bbWeight=1    PerfScore 1.25
G_M59761_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r11
       cmp      r10d, 4
       jl       G_M59761_IG21
						;; bbWeight=1    PerfScore 2.00
G_M59761_IG09:
       mov      eax, dword ptr [rax]
       sub      edx, eax
       mov      dword ptr [r8], edx
       mov      eax, dword ptr [r8]
       mov      rdx, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rdx, rdx
       jne      SHORT G_M59761_IG12
						;; bbWeight=1    PerfScore 12.50
G_M59761_IG10:
       or       r8d, ecx
       jne      SHORT G_M59761_IG20
						;; bbWeight=0.25 PerfScore 0.31
G_M59761_IG11:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M59761_IG14
						;; bbWeight=0.50 PerfScore 1.25
G_M59761_IG12:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       SHORT G_M59761_IG20
						;; bbWeight=0.25 PerfScore 1.00
G_M59761_IG13:
       add      rdx, 16
       movsxd   r9, r8d
       add      r9, rdx
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M59761_IG14:
       cmp      eax, r10d
       ja       SHORT G_M59761_IG20
						;; bbWeight=1    PerfScore 1.25
G_M59761_IG15:
       sub      r10d, eax
       movsxd   rax, eax
       add      rax, r9
       cmp      r10d, 2
       jl       SHORT G_M59761_IG21
						;; bbWeight=1    PerfScore 2.00
G_M59761_IG16:
       movzx    rdi, word  ptr [rax]
       cmp      edi, 4
       jge      SHORT G_M59761_IG18
						;; bbWeight=1    PerfScore 3.25
G_M59761_IG17:
       call     InputBufferExtensions:ThrowInvalidVtableException()
						;; bbWeight=0.50 PerfScore 0.50
G_M59761_IG18:
       mov      eax, edi
       shr      eax, 31
       add      eax, edi
       sar      eax, 1
       add      eax, -3
       mov      dword ptr [rsi], eax
						;; bbWeight=1    PerfScore 4.25
G_M59761_IG19:
       add      rsp, 40
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.25
G_M59761_IG20:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M59761_IG21:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 250, prolog size 6, PerfScore 70.63, (MethodHash=d680168e) for method InputBufferExtensions:InitializeVTable(Wrapper,int,byref,byref)
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex0Value(Wrapper,int,int,int):Struct
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  3,  2.50)     int  ->  rdx        
;  V02 arg2         [V02,T02] (  3,  2.50)     int  ->   r8        
;  V03 arg3         [V03,T00] (  3,  3   )     int  ->   r9        
;  V04 loc0         [V04,T13] (  3,  1.50)  ushort  ->  rsi        
;  V05 loc1         [V05,T27] (  2,  1   )     int  ->  rsi        
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T04] (  4,  4   )     int  ->   r8         "Inlining Arg"
;* V08 tmp2         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp4         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp5         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp6         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp7         [V13,T06] (  4,  3.50)     ref  ->   r9         class-hnd "impAppendStmt"
;  V14 tmp8         [V14,T07] (  4,  3   )     int  ->  r10         "impAppendStmt"
;* V15 tmp9         [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V16 tmp10        [V16,T08] (  4,  3   )     int  ->  rax         "Inlining Arg"
;* V17 tmp11        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp12        [V18,T10] (  2,  2   )   byref  ->   r9         "Inlining Arg"
;* V19 tmp13        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp14        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp15        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V23 tmp17        [V23,T11] (  2,  2   )     int  ->  r10         "Inlining Arg"
;* V24 tmp18        [V24    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V26 tmp20        [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp21        [V27    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V28 tmp22        [V28    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V29 tmp23        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V30 tmp24        [V30    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V31 tmp25        [V31,T28] (  2,  1   )  ushort  ->  rsi         "Inline stloc first use temp"
;* V32 tmp26        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp27        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V34 tmp28        [V34    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V35 tmp29        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp30        [V36    ] (  0,  0   )  struct ( 8) zero-ref    "Inlining Arg"
;  V37 tmp31        [V37,T09] (  3,  3   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V38 tmp32        [V38,T05] (  3,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V39 tmp33        [V39,T16] (  2,  1   )   byref  ->  r11         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V40 tmp34        [V40,T14] (  3,  1.50)     int  ->  r10         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;* V41 tmp35        [V41    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp36        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp37        [V43,T17] (  2,  1   )   byref  ->  rax         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;* V44 tmp38        [V44    ] (  0,  0   )     int  ->  zero-ref    V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V45 tmp39        [V45,T18] (  2,  1   )     ref  ->   r9         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V46 tmp40        [V46,T29] (  2,  1   )     int  ->  r10         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V47 tmp41        [V47,T30] (  2,  1   )     int  ->  rax         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V48 tmp42        [V48,T12] (  3,  1.50)   byref  ->  r11         V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;  V49 tmp43        [V49,T15] (  3,  1.50)     int  ->  r10         V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V50 tmp44        [V50,T19] (  2,  1   )   byref  ->  r11         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V51 tmp45        [V51    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V52 tmp46        [V52    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V53 tmp47        [V53,T20] (  2,  1   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V54 tmp48        [V54    ] (  0,  0   )   byref  ->  zero-ref    V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp49        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp50        [V56,T21] (  2,  1   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V57 tmp51        [V57    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V58 tmp52        [V58,T22] (  2,  1   )   byref  ->  rax         V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;  V59 tmp53        [V59,T23] (  2,  1   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp54        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp55        [V61,T24] (  2,  1   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V62 tmp56        [V62    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V63 tmp57        [V63,T25] (  2,  1   )   byref  ->  rax         V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V64 tmp58        [V64    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;* V65 tmp59        [V65    ] (  0,  0   )   byref  ->  zero-ref    V34._pointer(offs=0x00) P-INDEP "field V34._pointer (fldOffset=0x0)"
;* V66 tmp60        [V66    ] (  0,  0   )     int  ->  zero-ref    V34._length(offs=0x08) P-INDEP "field V34._length (fldOffset=0x8)"
;  V67 tmp61        [V67,T26] (  2,  1   )     ref  ->  rdi         V36.buffer(offs=0x00) P-INDEP "field V36.buffer (fldOffset=0x0)"
;  V68 tmp62        [V68,T03] (  4,  4   )   byref  ->  rax         "BlockOp address local"
;
; Lcl frame size = 32

G_M32122_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
						;; bbWeight=1    PerfScore 3.25
G_M32122_IG02:
       test     r9d, r9d
       jge      SHORT G_M32122_IG05
						;; bbWeight=1    PerfScore 1.25
G_M32122_IG03:
       xor      rax, rax
						;; bbWeight=0.50 PerfScore 0.13
G_M32122_IG04:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M32122_IG05:
       add      r8d, 4
       jo       G_M32122_IG16
       lea      rax, bword ptr [rcx+16]
       mov      r9, gword ptr [rax]
       mov      r10d, dword ptr [rax+8]
       mov      eax, dword ptr [rax+12]
       test     r9, r9
       jne      SHORT G_M32122_IG08
						;; bbWeight=0.50 PerfScore 4.50
G_M32122_IG06:
       or       r10d, eax
       jne      G_M32122_IG17
						;; bbWeight=0.25 PerfScore 0.31
G_M32122_IG07:
       xor      r11, r11
       xor      r10d, r10d
       jmp      SHORT G_M32122_IG10
						;; bbWeight=0.50 PerfScore 1.25
G_M32122_IG08:
       mov      r11d, r10d
       mov      esi, eax
       add      r11, rsi
       mov      esi, dword ptr [r9+8]
       cmp      r11, rsi
       ja       SHORT G_M32122_IG17
						;; bbWeight=0.25 PerfScore 1.00
G_M32122_IG09:
       add      r9, 16
       movsxd   r11, r10d
       add      r11, r9
       mov      r10d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M32122_IG10:
       cmp      r8d, r10d
       ja       SHORT G_M32122_IG17
						;; bbWeight=0.50 PerfScore 0.63
G_M32122_IG11:
       sub      r10d, r8d
       movsxd   rax, r8d
       add      rax, r11
       cmp      r10d, 2
       jl       SHORT G_M32122_IG18
						;; bbWeight=0.50 PerfScore 1.00
G_M32122_IG12:
       movzx    rsi, word  ptr [rax]
       test     esi, esi
       jne      SHORT G_M32122_IG14
       xor      rax, rax
						;; bbWeight=0.50 PerfScore 1.75
G_M32122_IG13:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M32122_IG14:
       add      esi, edx
       jo       SHORT G_M32122_IG16
       mov      rdi, rcx
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rbx, rax
       mov      rcx, rbx
       mov      rdx, rdi
       mov      r8d, esi
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
       mov      rax, rbx
						;; bbWeight=0.50 PerfScore 2.50
G_M32122_IG15:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M32122_IG16:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M32122_IG17:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M32122_IG18:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 207, prolog size 7, PerfScore 42.89, (MethodHash=8b278285) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex0Value(Wrapper,int,int,int):Struct
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_ad8721f46daa4ecf8d0a074bda86da39(Wrapper,int):Struct
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rsi        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T00] (  3,  6   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V04 tmp2         [V04,T02] (  2,  2   )     ref  ->  rdi         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;
; Lcl frame size = 32

G_M64195_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
       mov      rdi, rcx
       mov      esi, edx
						;; bbWeight=1    PerfScore 3.75
G_M64195_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rbx, rax
       mov      rcx, rbx
       mov      rdx, rdi
       mov      r8d, esi
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
       mov      rax, rbx
						;; bbWeight=1    PerfScore 3.50
G_M64195_IG03:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.75

; Total bytes of code 55, prolog size 7, PerfScore 15.50, (MethodHash=3b14053c) for method GeneratedSerializer:Read_ad8721f46daa4ecf8d0a074bda86da39(Wrapper,int):Struct
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] ( 20, 20   )     ref  ->  rsi         this class-hnd
;* V01 arg1         [V01    ] (  0,  0   )  struct ( 8) zero-ref   
;  V02 arg2         [V02,T01] ( 20, 20   )     int  ->  rdi        
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V04 tmp1         [V04,T87] (  3,  6   )     ref  ->  rbp         class-hnd exact "NewObj constructor temp"
;* V05 tmp2         [V05    ] (  0,  0   )  struct ( 8) zero-ref    "Inlining Arg"
;* V06 tmp3         [V06    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V07 tmp4         [V07,T04] (  4,  8   )     int  ->  rax         "Inlining Arg"
;* V08 tmp5         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp6         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp7         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp8         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp9         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp10        [V13,T124] (  4,  5.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V14 tmp11        [V14,T132] (  4,  4   )     int  ->   r8         "impAppendStmt"
;  V15 tmp12        [V15    ] (  4,  5   )  struct (16) [rsp+0xA88]   do-not-enreg[XSFB] must-init addr-exposed "NewObj constructor temp"
;  V16 tmp13        [V16,T133] (  4,  4   )     int  ->  rdx         "Inlining Arg"
;  V17 tmp14        [V17,T373] (  2,  2   )  struct ( 8) [rsp+0xA80]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V18 tmp15        [V18,T353] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;  V19 tmp16        [V19    ] (  4,  8   )  struct (16) [rsp+0xA70]   do-not-enreg[XSFB] must-init addr-exposed "NewObj constructor temp"
;* V20 tmp17        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp18        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V22 tmp19        [V22,T241] (  2,  4   )  struct ( 8) [rsp+0xA68]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V23 tmp20        [V23,T242] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;  V24 tmp21        [V24    ] (  3,  6   )  struct (16) [rsp+0xA58]   do-not-enreg[XSFB] must-init addr-exposed ld-addr-op "Inlining Arg"
;  V25 tmp22        [V25    ] (  4,  8   )  struct (16) [rsp+0xA48]   do-not-enreg[XSFB] must-init addr-exposed "NewObj constructor temp"
;  V26 tmp23        [V26,T179] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V27 tmp24        [V27,T243] (  2,  4   )  struct ( 8) [rsp+0xA40]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V28 tmp25        [V28,T244] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;  V29 tmp26        [V29    ] (  2,  4   )  struct (16) [rsp+0xA30]   do-not-enreg[XSB] must-init addr-exposed "Inlining Arg"
;  V30 tmp27        [V30,T245] (  2,  4   )  struct (16) [rsp+0xA20]   do-not-enreg[SB] must-init "Inlining Arg"
;  V31 tmp28        [V31,T374] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V32 tmp29        [V32,T93] (  3,  6   )  struct (16) [rsp+0xA10]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V33 tmp30        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V34 tmp31        [V34,T246] (  2,  4   )  struct (16) [rsp+0xA00]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V35 tmp32        [V35,T180] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V36 tmp33        [V36,T247] (  2,  4   )  struct ( 8) [rsp+0x9F8]   do-not-enreg[SB] must-init "Inlining Arg"
;  V37 tmp34        [V37,T248] (  2,  4   )  struct ( 8) [rsp+0x9F0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V38 tmp35        [V38,T181] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;  V39 tmp36        [V39,T134] (  4,  4   )  struct (16) [rsp+0x9E0]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V40 tmp37        [V40    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V41 tmp38        [V41    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V42 tmp39        [V42,T05] (  4,  8   )  struct (16) [rsp+0x9D0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V43 tmp40        [V43,T125] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V44 tmp41        [V44,T135] (  4,  4   )     int  ->  rdx         "impAppendStmt"
;  V45 tmp42        [V45,T64] (  5,  7   )  struct (16) [rsp+0x9C0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V46 tmp43        [V46,T136] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;  V47 tmp44        [V47,T375] (  2,  2   )  struct ( 8) [rsp+0x9B8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V48 tmp45        [V48,T354] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;  V49 tmp46        [V49,T06] (  4,  8   )  struct (16) [rsp+0x9A8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V50 tmp47        [V50,T182] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;* V51 tmp48        [V51    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V52 tmp49        [V52,T249] (  2,  4   )  struct ( 8) [rsp+0x9A0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V53 tmp50        [V53,T250] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;  V54 tmp51        [V54,T94] (  3,  6   )  struct (16) [rsp+0x990]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V55 tmp52        [V55,T07] (  4,  8   )  struct (16) [rsp+0x980]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V56 tmp53        [V56,T183] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V57 tmp54        [V57,T251] (  2,  4   )  struct ( 8) [rsp+0x978]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V58 tmp55        [V58,T252] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V59 tmp56        [V59    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V60 tmp57        [V60    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V61 tmp58        [V61,T376] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V62 tmp59        [V62,T95] (  3,  6   )  struct (16) [rsp+0x968]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V63 tmp60        [V63    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V64 tmp61        [V64,T253] (  2,  4   )  struct (16) [rsp+0x958]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V65 tmp62        [V65,T184] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V66 tmp63        [V66,T254] (  2,  4   )  struct ( 8) [rsp+0x950]   do-not-enreg[SB] must-init "Inlining Arg"
;  V67 tmp64        [V67,T255] (  2,  4   )  struct ( 8) [rsp+0x948]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V68 tmp65        [V68,T08] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V69 tmp66        [V69,T185] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V70 tmp67        [V70,T137] (  4,  4   )  struct (16) [rsp+0x938]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V71 tmp68        [V71    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V72 tmp69        [V72    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V73 tmp70        [V73,T09] (  4,  8   )  struct (16) [rsp+0x928]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V74 tmp71        [V74,T126] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V75 tmp72        [V75,T138] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V76 tmp73        [V76,T65] (  5,  7   )  struct (16) [rsp+0x918]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V77 tmp74        [V77,T139] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V78 tmp75        [V78,T377] (  2,  2   )  struct ( 8) [rsp+0x910]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V79 tmp76        [V79,T355] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V80 tmp77        [V80,T10] (  4,  8   )  struct (16) [rsp+0x900]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V81 tmp78        [V81,T186] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V82 tmp79        [V82    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V83 tmp80        [V83,T256] (  2,  4   )  struct ( 8) [rsp+0x8F8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V84 tmp81        [V84,T257] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V85 tmp82        [V85,T96] (  3,  6   )  struct (16) [rsp+0x8E8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V86 tmp83        [V86,T11] (  4,  8   )  struct (16) [rsp+0x8D8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V87 tmp84        [V87,T187] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V88 tmp85        [V88,T258] (  2,  4   )  struct ( 8) [rsp+0x8D0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V89 tmp86        [V89,T259] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V90 tmp87        [V90    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V91 tmp88        [V91    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V92 tmp89        [V92,T378] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V93 tmp90        [V93,T97] (  3,  6   )  struct (16) [rsp+0x8C0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V94 tmp91        [V94    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V95 tmp92        [V95,T260] (  2,  4   )  struct (16) [rsp+0x8B0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V96 tmp93        [V96,T188] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V97 tmp94        [V97,T261] (  2,  4   )  struct ( 8) [rsp+0x8A8]   do-not-enreg[SB] must-init "Inlining Arg"
;  V98 tmp95        [V98,T262] (  2,  4   )  struct ( 8) [rsp+0x8A0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V99 tmp96        [V99,T12] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V100 tmp97       [V100,T189] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V101 tmp98       [V101,T140] (  4,  4   )  struct (16) [rsp+0x890]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V102 tmp99       [V102    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V103 tmp100      [V103    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V104 tmp101      [V104,T13] (  4,  8   )  struct (16) [rsp+0x880]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V105 tmp102      [V105,T127] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V106 tmp103      [V106,T141] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V107 tmp104      [V107,T66] (  5,  7   )  struct (16) [rsp+0x870]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V108 tmp105      [V108,T142] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V109 tmp106      [V109,T379] (  2,  2   )  struct ( 8) [rsp+0x868]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V110 tmp107      [V110,T356] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V111 tmp108      [V111,T14] (  4,  8   )  struct (16) [rsp+0x858]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V112 tmp109      [V112,T190] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V113 tmp110      [V113    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V114 tmp111      [V114,T263] (  2,  4   )  struct ( 8) [rsp+0x850]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V115 tmp112      [V115,T264] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V116 tmp113      [V116,T98] (  3,  6   )  struct (16) [rsp+0x840]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V117 tmp114      [V117,T15] (  4,  8   )  struct (16) [rsp+0x830]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V118 tmp115      [V118,T191] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V119 tmp116      [V119,T265] (  2,  4   )  struct ( 8) [rsp+0x828]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V120 tmp117      [V120,T266] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V121 tmp118      [V121    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V122 tmp119      [V122    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V123 tmp120      [V123,T380] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V124 tmp121      [V124,T99] (  3,  6   )  struct (16) [rsp+0x818]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V125 tmp122      [V125    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V126 tmp123      [V126,T267] (  2,  4   )  struct (16) [rsp+0x808]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V127 tmp124      [V127,T192] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V128 tmp125      [V128,T268] (  2,  4   )  struct ( 8) [rsp+0x800]   do-not-enreg[SB] must-init "Inlining Arg"
;  V129 tmp126      [V129,T269] (  2,  4   )  struct ( 8) [rsp+0x7F8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V130 tmp127      [V130,T16] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V131 tmp128      [V131,T193] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V132 tmp129      [V132,T143] (  4,  4   )  struct (16) [rsp+0x7E8]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V133 tmp130      [V133    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V134 tmp131      [V134    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V135 tmp132      [V135,T17] (  4,  8   )  struct (16) [rsp+0x7D8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V136 tmp133      [V136,T128] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V137 tmp134      [V137,T144] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V138 tmp135      [V138,T67] (  5,  7   )  struct (16) [rsp+0x7C8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V139 tmp136      [V139,T145] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V140 tmp137      [V140,T381] (  2,  2   )  struct ( 8) [rsp+0x7C0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V141 tmp138      [V141,T357] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V142 tmp139      [V142,T18] (  4,  8   )  struct (16) [rsp+0x7B0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V143 tmp140      [V143,T194] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V144 tmp141      [V144    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V145 tmp142      [V145,T270] (  2,  4   )  struct ( 8) [rsp+0x7A8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V146 tmp143      [V146,T271] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V147 tmp144      [V147,T100] (  3,  6   )  struct (16) [rsp+0x798]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V148 tmp145      [V148,T19] (  4,  8   )  struct (16) [rsp+0x788]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V149 tmp146      [V149,T195] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V150 tmp147      [V150,T272] (  2,  4   )  struct ( 8) [rsp+0x780]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V151 tmp148      [V151,T273] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V152 tmp149      [V152    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V153 tmp150      [V153    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V154 tmp151      [V154,T382] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V155 tmp152      [V155,T101] (  3,  6   )  struct (16) [rsp+0x770]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V156 tmp153      [V156    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V157 tmp154      [V157,T274] (  2,  4   )  struct (16) [rsp+0x760]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V158 tmp155      [V158,T196] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V159 tmp156      [V159,T275] (  2,  4   )  struct ( 8) [rsp+0x758]   do-not-enreg[SB] must-init "Inlining Arg"
;  V160 tmp157      [V160,T276] (  2,  4   )  struct ( 8) [rsp+0x750]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V161 tmp158      [V161,T20] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V162 tmp159      [V162,T197] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V163 tmp160      [V163,T146] (  4,  4   )  struct (16) [rsp+0x740]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V164 tmp161      [V164    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V165 tmp162      [V165    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V166 tmp163      [V166,T21] (  4,  8   )  struct (16) [rsp+0x730]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V167 tmp164      [V167,T129] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V168 tmp165      [V168,T147] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V169 tmp166      [V169,T68] (  5,  7   )  struct (16) [rsp+0x720]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V170 tmp167      [V170,T148] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V171 tmp168      [V171,T383] (  2,  2   )  struct ( 8) [rsp+0x718]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V172 tmp169      [V172,T358] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V173 tmp170      [V173,T22] (  4,  8   )  struct (16) [rsp+0x708]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V174 tmp171      [V174,T198] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V175 tmp172      [V175    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V176 tmp173      [V176,T277] (  2,  4   )  struct ( 8) [rsp+0x700]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V177 tmp174      [V177,T278] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V178 tmp175      [V178,T102] (  3,  6   )  struct (16) [rsp+0x6F0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V179 tmp176      [V179,T23] (  4,  8   )  struct (16) [rsp+0x6E0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V180 tmp177      [V180,T199] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V181 tmp178      [V181,T279] (  2,  4   )  struct ( 8) [rsp+0x6D8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V182 tmp179      [V182,T280] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V183 tmp180      [V183    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V184 tmp181      [V184    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V185 tmp182      [V185,T384] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V186 tmp183      [V186,T103] (  3,  6   )  struct (16) [rsp+0x6C8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V187 tmp184      [V187    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V188 tmp185      [V188,T281] (  2,  4   )  struct (16) [rsp+0x6B8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V189 tmp186      [V189,T200] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V190 tmp187      [V190,T282] (  2,  4   )  struct ( 8) [rsp+0x6B0]   do-not-enreg[SB] must-init "Inlining Arg"
;  V191 tmp188      [V191,T283] (  2,  4   )  struct ( 8) [rsp+0x6A8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V192 tmp189      [V192,T24] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V193 tmp190      [V193,T201] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V194 tmp191      [V194,T149] (  4,  4   )  struct (16) [rsp+0x698]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V195 tmp192      [V195    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V196 tmp193      [V196    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V197 tmp194      [V197,T25] (  4,  8   )  struct (16) [rsp+0x688]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V198 tmp195      [V198,T130] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V199 tmp196      [V199,T150] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V200 tmp197      [V200,T69] (  5,  7   )  struct (16) [rsp+0x678]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V201 tmp198      [V201,T151] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V202 tmp199      [V202,T385] (  2,  2   )  struct ( 8) [rsp+0x670]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V203 tmp200      [V203,T359] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V204 tmp201      [V204,T26] (  4,  8   )  struct (16) [rsp+0x660]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V205 tmp202      [V205,T202] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V206 tmp203      [V206    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V207 tmp204      [V207,T284] (  2,  4   )  struct ( 8) [rsp+0x658]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V208 tmp205      [V208,T285] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V209 tmp206      [V209,T104] (  3,  6   )  struct (16) [rsp+0x648]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V210 tmp207      [V210,T27] (  4,  8   )  struct (16) [rsp+0x638]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V211 tmp208      [V211,T203] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V212 tmp209      [V212,T286] (  2,  4   )  struct ( 8) [rsp+0x630]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V213 tmp210      [V213,T287] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V214 tmp211      [V214    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V215 tmp212      [V215    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V216 tmp213      [V216,T386] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V217 tmp214      [V217,T105] (  3,  6   )  struct (16) [rsp+0x620]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V218 tmp215      [V218    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V219 tmp216      [V219,T288] (  2,  4   )  struct (16) [rsp+0x610]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V220 tmp217      [V220,T204] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V221 tmp218      [V221,T289] (  2,  4   )  struct ( 8) [rsp+0x608]   do-not-enreg[SB] must-init "Inlining Arg"
;  V222 tmp219      [V222,T290] (  2,  4   )  struct ( 8) [rsp+0x600]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V223 tmp220      [V223,T28] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V224 tmp221      [V224,T205] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V225 tmp222      [V225,T152] (  4,  4   )  struct (16) [rsp+0x5F0]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V226 tmp223      [V226    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V227 tmp224      [V227    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V228 tmp225      [V228,T29] (  4,  8   )  struct (16) [rsp+0x5E0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V229 tmp226      [V229,T131] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V230 tmp227      [V230,T153] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V231 tmp228      [V231,T70] (  5,  7   )  struct (16) [rsp+0x5D0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V232 tmp229      [V232,T154] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V233 tmp230      [V233,T387] (  2,  2   )  struct ( 8) [rsp+0x5C8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V234 tmp231      [V234,T360] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V235 tmp232      [V235,T30] (  4,  8   )  struct (16) [rsp+0x5B8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V236 tmp233      [V236,T206] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V237 tmp234      [V237    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V238 tmp235      [V238,T291] (  2,  4   )  struct ( 8) [rsp+0x5B0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V239 tmp236      [V239,T292] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V240 tmp237      [V240,T106] (  3,  6   )  struct (16) [rsp+0x5A0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V241 tmp238      [V241,T31] (  4,  8   )  struct (16) [rsp+0x590]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V242 tmp239      [V242,T207] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V243 tmp240      [V243,T293] (  2,  4   )  struct ( 8) [rsp+0x588]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V244 tmp241      [V244,T294] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V245 tmp242      [V245    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V246 tmp243      [V246    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V247 tmp244      [V247,T388] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V248 tmp245      [V248,T107] (  3,  6   )  struct (16) [rsp+0x578]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V249 tmp246      [V249    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V250 tmp247      [V250,T295] (  2,  4   )  struct (16) [rsp+0x568]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V251 tmp248      [V251,T208] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V252 tmp249      [V252,T296] (  2,  4   )  struct ( 8) [rsp+0x560]   do-not-enreg[SB] must-init "Inlining Arg"
;  V253 tmp250      [V253,T297] (  2,  4   )  struct ( 8) [rsp+0x558]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V254 tmp251      [V254,T32] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V255 tmp252      [V255,T209] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V256 tmp253      [V256,T155] (  4,  4   )  struct (16) [rsp+0x548]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V257 tmp254      [V257    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V258 tmp255      [V258    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V259 tmp256      [V259,T33] (  4,  8   )  struct (16) [rsp+0x538]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V260 tmp257      [V260,T79] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V261 tmp258      [V261,T156] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V262 tmp259      [V262,T71] (  5,  7   )  struct (16) [rsp+0x528]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V263 tmp260      [V263,T157] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V264 tmp261      [V264,T389] (  2,  2   )  struct ( 8) [rsp+0x520]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V265 tmp262      [V265,T361] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V266 tmp263      [V266,T34] (  4,  8   )  struct (16) [rsp+0x510]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V267 tmp264      [V267,T210] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V268 tmp265      [V268    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V269 tmp266      [V269,T298] (  2,  4   )  struct ( 8) [rsp+0x508]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V270 tmp267      [V270,T299] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V271 tmp268      [V271,T108] (  3,  6   )  struct (16) [rsp+0x4F8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V272 tmp269      [V272,T35] (  4,  8   )  struct (16) [rsp+0x4E8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V273 tmp270      [V273,T211] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V274 tmp271      [V274,T300] (  2,  4   )  struct ( 8) [rsp+0x4E0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V275 tmp272      [V275,T301] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V276 tmp273      [V276    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V277 tmp274      [V277    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V278 tmp275      [V278,T390] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V279 tmp276      [V279,T109] (  3,  6   )  struct (16) [rsp+0x4D0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V280 tmp277      [V280    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V281 tmp278      [V281,T302] (  2,  4   )  struct (16) [rsp+0x4C0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V282 tmp279      [V282,T212] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V283 tmp280      [V283,T303] (  2,  4   )  struct ( 8) [rsp+0x4B8]   do-not-enreg[SB] must-init "Inlining Arg"
;  V284 tmp281      [V284,T304] (  2,  4   )  struct ( 8) [rsp+0x4B0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V285 tmp282      [V285,T36] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V286 tmp283      [V286,T213] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V287 tmp284      [V287,T158] (  4,  4   )  struct (16) [rsp+0x4A0]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V288 tmp285      [V288    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V289 tmp286      [V289    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V290 tmp287      [V290,T37] (  4,  8   )  struct (16) [rsp+0x490]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V291 tmp288      [V291,T80] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V292 tmp289      [V292,T159] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V293 tmp290      [V293,T72] (  5,  7   )  struct (16) [rsp+0x480]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V294 tmp291      [V294,T160] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V295 tmp292      [V295,T391] (  2,  2   )  struct ( 8) [rsp+0x478]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V296 tmp293      [V296,T362] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V297 tmp294      [V297,T38] (  4,  8   )  struct (16) [rsp+0x468]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V298 tmp295      [V298,T214] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V299 tmp296      [V299    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V300 tmp297      [V300,T305] (  2,  4   )  struct ( 8) [rsp+0x460]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V301 tmp298      [V301,T306] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V302 tmp299      [V302,T110] (  3,  6   )  struct (16) [rsp+0x450]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V303 tmp300      [V303,T39] (  4,  8   )  struct (16) [rsp+0x440]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V304 tmp301      [V304,T215] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V305 tmp302      [V305,T307] (  2,  4   )  struct ( 8) [rsp+0x438]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V306 tmp303      [V306,T308] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V307 tmp304      [V307    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V308 tmp305      [V308    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V309 tmp306      [V309,T392] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V310 tmp307      [V310,T111] (  3,  6   )  struct (16) [rsp+0x428]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V311 tmp308      [V311    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V312 tmp309      [V312,T309] (  2,  4   )  struct (16) [rsp+0x418]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V313 tmp310      [V313,T216] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V314 tmp311      [V314,T310] (  2,  4   )  struct ( 8) [rsp+0x410]   do-not-enreg[SB] must-init "Inlining Arg"
;  V315 tmp312      [V315,T311] (  2,  4   )  struct ( 8) [rsp+0x408]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V316 tmp313      [V316,T40] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V317 tmp314      [V317,T217] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V318 tmp315      [V318,T161] (  4,  4   )  struct (16) [rsp+0x3F8]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V319 tmp316      [V319    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V320 tmp317      [V320    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V321 tmp318      [V321,T41] (  4,  8   )  struct (16) [rsp+0x3E8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V322 tmp319      [V322,T81] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V323 tmp320      [V323,T162] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V324 tmp321      [V324,T73] (  5,  7   )  struct (16) [rsp+0x3D8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V325 tmp322      [V325,T163] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V326 tmp323      [V326,T393] (  2,  2   )  struct ( 8) [rsp+0x3D0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V327 tmp324      [V327,T363] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V328 tmp325      [V328,T42] (  4,  8   )  struct (16) [rsp+0x3C0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V329 tmp326      [V329,T218] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V330 tmp327      [V330    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V331 tmp328      [V331,T312] (  2,  4   )  struct ( 8) [rsp+0x3B8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V332 tmp329      [V332,T313] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V333 tmp330      [V333,T112] (  3,  6   )  struct (16) [rsp+0x3A8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V334 tmp331      [V334,T43] (  4,  8   )  struct (16) [rsp+0x398]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V335 tmp332      [V335,T219] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V336 tmp333      [V336,T314] (  2,  4   )  struct ( 8) [rsp+0x390]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V337 tmp334      [V337,T315] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V338 tmp335      [V338    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V339 tmp336      [V339    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V340 tmp337      [V340,T394] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V341 tmp338      [V341,T113] (  3,  6   )  struct (16) [rsp+0x380]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V342 tmp339      [V342    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V343 tmp340      [V343,T316] (  2,  4   )  struct (16) [rsp+0x370]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V344 tmp341      [V344,T220] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V345 tmp342      [V345,T317] (  2,  4   )  struct ( 8) [rsp+0x368]   do-not-enreg[SB] must-init "Inlining Arg"
;  V346 tmp343      [V346,T318] (  2,  4   )  struct ( 8) [rsp+0x360]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V347 tmp344      [V347,T44] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V348 tmp345      [V348,T221] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V349 tmp346      [V349,T164] (  4,  4   )  struct (16) [rsp+0x350]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V350 tmp347      [V350    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V351 tmp348      [V351    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V352 tmp349      [V352,T45] (  4,  8   )  struct (16) [rsp+0x340]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V353 tmp350      [V353,T82] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V354 tmp351      [V354,T165] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V355 tmp352      [V355,T74] (  5,  7   )  struct (16) [rsp+0x330]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V356 tmp353      [V356,T166] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V357 tmp354      [V357,T395] (  2,  2   )  struct ( 8) [rsp+0x328]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V358 tmp355      [V358,T364] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V359 tmp356      [V359,T46] (  4,  8   )  struct (16) [rsp+0x318]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V360 tmp357      [V360,T222] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V361 tmp358      [V361    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V362 tmp359      [V362,T319] (  2,  4   )  struct ( 8) [rsp+0x310]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V363 tmp360      [V363,T320] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V364 tmp361      [V364,T114] (  3,  6   )  struct (16) [rsp+0x300]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V365 tmp362      [V365,T47] (  4,  8   )  struct (16) [rsp+0x2F0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V366 tmp363      [V366,T223] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V367 tmp364      [V367,T321] (  2,  4   )  struct ( 8) [rsp+0x2E8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V368 tmp365      [V368,T322] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V369 tmp366      [V369    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V370 tmp367      [V370    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V371 tmp368      [V371,T396] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V372 tmp369      [V372,T115] (  3,  6   )  struct (16) [rsp+0x2D8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V373 tmp370      [V373    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V374 tmp371      [V374,T323] (  2,  4   )  struct (16) [rsp+0x2C8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V375 tmp372      [V375,T224] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V376 tmp373      [V376,T324] (  2,  4   )  struct ( 8) [rsp+0x2C0]   do-not-enreg[SB] must-init "Inlining Arg"
;  V377 tmp374      [V377,T325] (  2,  4   )  struct ( 8) [rsp+0x2B8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V378 tmp375      [V378,T48] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V379 tmp376      [V379,T225] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V380 tmp377      [V380,T167] (  4,  4   )  struct (16) [rsp+0x2A8]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V381 tmp378      [V381    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V382 tmp379      [V382    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V383 tmp380      [V383,T49] (  4,  8   )  struct (16) [rsp+0x298]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V384 tmp381      [V384,T83] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V385 tmp382      [V385,T168] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V386 tmp383      [V386,T75] (  5,  7   )  struct (16) [rsp+0x288]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V387 tmp384      [V387,T169] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V388 tmp385      [V388,T397] (  2,  2   )  struct ( 8) [rsp+0x280]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V389 tmp386      [V389,T365] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V390 tmp387      [V390,T50] (  4,  8   )  struct (16) [rsp+0x270]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V391 tmp388      [V391,T226] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V392 tmp389      [V392    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V393 tmp390      [V393,T326] (  2,  4   )  struct ( 8) [rsp+0x268]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V394 tmp391      [V394,T327] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V395 tmp392      [V395,T116] (  3,  6   )  struct (16) [rsp+0x258]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V396 tmp393      [V396,T51] (  4,  8   )  struct (16) [rsp+0x248]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V397 tmp394      [V397,T227] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V398 tmp395      [V398,T328] (  2,  4   )  struct ( 8) [rsp+0x240]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V399 tmp396      [V399,T329] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V400 tmp397      [V400    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V401 tmp398      [V401    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V402 tmp399      [V402,T398] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V403 tmp400      [V403,T117] (  3,  6   )  struct (16) [rsp+0x230]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V404 tmp401      [V404    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V405 tmp402      [V405,T330] (  2,  4   )  struct (16) [rsp+0x220]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V406 tmp403      [V406,T228] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V407 tmp404      [V407,T331] (  2,  4   )  struct ( 8) [rsp+0x218]   do-not-enreg[SB] must-init "Inlining Arg"
;  V408 tmp405      [V408,T332] (  2,  4   )  struct ( 8) [rsp+0x210]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V409 tmp406      [V409,T52] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V410 tmp407      [V410,T229] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V411 tmp408      [V411,T170] (  4,  4   )  struct (16) [rsp+0x200]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V412 tmp409      [V412    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V413 tmp410      [V413    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V414 tmp411      [V414,T53] (  4,  8   )  struct (16) [rsp+0x1F0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V415 tmp412      [V415,T84] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V416 tmp413      [V416,T171] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V417 tmp414      [V417,T76] (  5,  7   )  struct (16) [rsp+0x1E0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V418 tmp415      [V418,T172] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V419 tmp416      [V419,T399] (  2,  2   )  struct ( 8) [rsp+0x1D8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V420 tmp417      [V420,T366] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V421 tmp418      [V421,T54] (  4,  8   )  struct (16) [rsp+0x1C8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V422 tmp419      [V422,T230] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V423 tmp420      [V423    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V424 tmp421      [V424,T333] (  2,  4   )  struct ( 8) [rsp+0x1C0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V425 tmp422      [V425,T334] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V426 tmp423      [V426,T118] (  3,  6   )  struct (16) [rsp+0x1B0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V427 tmp424      [V427,T55] (  4,  8   )  struct (16) [rsp+0x1A0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V428 tmp425      [V428,T231] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V429 tmp426      [V429,T335] (  2,  4   )  struct ( 8) [rsp+0x198]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V430 tmp427      [V430,T336] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V431 tmp428      [V431    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V432 tmp429      [V432    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V433 tmp430      [V433,T400] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V434 tmp431      [V434,T119] (  3,  6   )  struct (16) [rsp+0x188]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V435 tmp432      [V435    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V436 tmp433      [V436,T337] (  2,  4   )  struct (16) [rsp+0x178]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V437 tmp434      [V437,T232] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V438 tmp435      [V438,T338] (  2,  4   )  struct ( 8) [rsp+0x170]   do-not-enreg[SB] must-init "Inlining Arg"
;  V439 tmp436      [V439,T339] (  2,  4   )  struct ( 8) [rsp+0x168]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V440 tmp437      [V440,T56] (  4,  8   )     int  ->  rax         "Inlining Arg"
;  V441 tmp438      [V441,T233] (  2,  4   )     ref  ->  rdx         class-hnd "Inlining Arg"
;  V442 tmp439      [V442,T173] (  4,  4   )  struct (16) [rsp+0x158]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V443 tmp440      [V443    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V444 tmp441      [V444    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V445 tmp442      [V445,T57] (  4,  8   )  struct (16) [rsp+0x148]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V446 tmp443      [V446,T85] (  5,  6.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V447 tmp444      [V447,T174] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;  V448 tmp445      [V448,T77] (  5,  7   )  struct (16) [rsp+0x138]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V449 tmp446      [V449,T175] (  4,  4   )     int  ->   r8         "Inlining Arg"
;  V450 tmp447      [V450,T401] (  2,  2   )  struct ( 8) [rsp+0x130]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V451 tmp448      [V451,T367] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;  V452 tmp449      [V452,T58] (  4,  8   )  struct (16) [rsp+0x120]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V453 tmp450      [V453,T234] (  2,  4   )   byref  ->  rdx         "Inlining Arg"
;* V454 tmp451      [V454    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V455 tmp452      [V455,T340] (  2,  4   )  struct ( 8) [rsp+0x118]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V456 tmp453      [V456,T341] (  2,  4   )     int  ->  rcx         "Inlining Arg"
;  V457 tmp454      [V457,T120] (  3,  6   )  struct (16) [rsp+0x108]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V458 tmp455      [V458,T59] (  4,  8   )  struct (16) [rsp+0xF8]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V459 tmp456      [V459,T235] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V460 tmp457      [V460,T342] (  2,  4   )  struct ( 8) [rsp+0xF0]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V461 tmp458      [V461,T343] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V462 tmp459      [V462    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V463 tmp460      [V463    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V464 tmp461      [V464,T402] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V465 tmp462      [V465,T121] (  3,  6   )  struct (16) [rsp+0xE0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V466 tmp463      [V466    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V467 tmp464      [V467,T344] (  2,  4   )  struct (16) [rsp+0xD0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V468 tmp465      [V468,T236] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V469 tmp466      [V469,T345] (  2,  4   )  struct ( 8) [rsp+0xC8]   do-not-enreg[SB] must-init "Inlining Arg"
;  V470 tmp467      [V470,T346] (  2,  4   )  struct ( 8) [rsp+0xC0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V471 tmp468      [V471,T60] (  4,  8   )     int  ->  rdi         "Inlining Arg"
;  V472 tmp469      [V472,T237] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;  V473 tmp470      [V473,T176] (  4,  4   )  struct (16) [rsp+0xB0]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V474 tmp471      [V474    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V475 tmp472      [V475    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V476 tmp473      [V476,T61] (  4,  8   )  struct (16) [rsp+0xA0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V477 tmp474      [V477,T86] (  5,  6.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V478 tmp475      [V478,T177] (  4,  4   )     int  ->  rdx         "impAppendStmt"
;  V479 tmp476      [V479,T78] (  5,  7   )  struct (16) [rsp+0x90]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V480 tmp477      [V480,T178] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;  V481 tmp478      [V481,T403] (  2,  2   )  struct ( 8) [rsp+0x88]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V482 tmp479      [V482,T368] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;  V483 tmp480      [V483,T62] (  4,  8   )  struct (16) [rsp+0x78]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V484 tmp481      [V484,T238] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;* V485 tmp482      [V485    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V486 tmp483      [V486,T347] (  2,  4   )  struct ( 8) [rsp+0x70]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V487 tmp484      [V487,T348] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;  V488 tmp485      [V488,T122] (  3,  6   )  struct (16) [rsp+0x60]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V489 tmp486      [V489,T63] (  4,  8   )  struct (16) [rsp+0x50]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V490 tmp487      [V490,T239] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V491 tmp488      [V491,T349] (  2,  4   )  struct ( 8) [rsp+0x48]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V492 tmp489      [V492,T350] (  2,  4   )     int  ->  rdx         "Inlining Arg"
;* V493 tmp490      [V493    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V494 tmp491      [V494    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V495 tmp492      [V495,T404] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;  V496 tmp493      [V496,T123] (  3,  6   )  struct (16) [rsp+0x38]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V497 tmp494      [V497    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V498 tmp495      [V498,T351] (  2,  4   )  struct (16) [rsp+0x28]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V499 tmp496      [V499,T240] (  2,  4   )   byref  ->  rax         "Inlining Arg"
;  V500 tmp497      [V500,T02] ( 17, 17   )     ref  ->  rbx         V01.buffer(offs=0x00) P-INDEP "field V01.buffer (fldOffset=0x0)"
;* V501 tmp498      [V501    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;* V502 tmp499      [V502    ] (  0,  0   )     ref  ->  zero-ref    V06.buffer(offs=0x00) P-INDEP "field V06.buffer (fldOffset=0x0)"
;  V503 tmp500      [V503,T369] (  2,  2   )   byref  ->  rcx         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V504 tmp501      [V504,T352] (  3,  3   )     int  ->  rdx         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V505 tmp502      [V505,T370] (  2,  2   )   byref  ->  rdx         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;  V506 tmp503      [V506,T405] (  2,  2   )     int  ->  rax         V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V507 tmp504      [V507,T371] (  2,  2   )   byref  ->  rdx         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;  V508 tmp505      [V508,T406] (  2,  2   )     int  ->  rax         V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V509 tmp506      [V509,T372] (  2,  2   )     ref  ->  rcx         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V510 tmp507      [V510,T407] (  2,  2   )     int  ->   r8         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V511 tmp508      [V511,T408] (  2,  2   )     int  ->  rdx         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V512 tmp509      [V512,T03] (  4,  8   )   byref  ->  rdx         "BlockOp address local"
;  V513 tmp510      [V513,T88] (  3,  6   )   byref  ->  rdx         stack-byref "BlockOp address local"
;  V514 tmp511      [V514,T89] (  3,  6   )   byref  ->  rax         stack-byref "BlockOp address local"
;  V515 tmp512      [V515,T90] (  3,  6   )   byref  ->  rcx         stack-byref "BlockOp address local"
;  V516 tmp513      [V516,T91] (  3,  6   )   byref  ->  rax         stack-byref "BlockOp address local"
;  V517 tmp514      [V517,T92] (  3,  6   )   byref  ->  rcx         stack-byref "BlockOp address local"
;
; Lcl frame size = 2712

G_M11670_IG01:
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 0xA98
       vzeroupper 
       xor      rax, rax
       mov      qword ptr [rsp+28H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rsp+30H], xmm4
       mov      rax, -0xA50
       vmovdqa  xmmword ptr [rsp+rax+A90H], xmm4
       vmovdqa  xmmword ptr [rsp+rax+AA0H], xmm4
       vmovdqa  xmmword ptr [rsp+rax+AB0H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      qword ptr [rsp+A90H], rax
       mov      rsi, rcx
       mov      rbx, rdx
       mov      edi, r8d
						;; bbWeight=1    PerfScore 14.08
G_M11670_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rbp, rax
       lea      rcx, bword ptr [rbp+8]
       mov      rdx, rsi
       call     CORINFO_HELP_ASSIGN_REF
       lea      rcx, bword ptr [rsi+8]
       mov      rdx, rbp
       call     CORINFO_HELP_ASSIGN_REF
       mov      eax, edi
       add      eax, 60
       jo       G_M11670_IG336
       lea      rdx, bword ptr [rbx+16]
       mov      rcx, gword ptr [rdx]
       mov      r8d, dword ptr [rdx+8]
       mov      edx, dword ptr [rdx+12]
       test     rcx, rcx
       jne      SHORT G_M11670_IG05
						;; bbWeight=1    PerfScore 14.25
G_M11670_IG03:
       or       r8d, edx
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG04:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+A88H], xmm0
       jmp      SHORT G_M11670_IG09
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG05:
       mov      r9d, r8d
       mov      r10d, edx
       add      r9, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG06:
       add      rcx, 16
       movsxd   r8, r8d
       add      rcx, r8
       mov      bword ptr [rsp+A80H], rcx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG07:
       mov      rcx, qword ptr [rsp+A80H]
       mov      qword ptr [rsp+A88H], rcx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG08:
       mov      dword ptr [rsp+A90H], edx
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG09:
       lea      rdx, bword ptr [rsp+A88H]
       mov      rcx, bword ptr [rdx]
       mov      edx, dword ptr [rdx+8]
       cmp      eax, edx
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 5.75
G_M11670_IG10:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+A70H], xmm0
       sub      edx, eax
       movsxd   rax, eax
       add      rax, rcx
       mov      bword ptr [rsp+A68H], rax
						;; bbWeight=1    PerfScore 3.08
G_M11670_IG11:
       mov      rax, qword ptr [rsp+A68H]
       mov      qword ptr [rsp+A70H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG12:
       mov      dword ptr [rsp+A78H], edx
       lea      rax, bword ptr [rsp+A70H]
       mov      rdx, bword ptr [rax]
       mov      eax, dword ptr [rax+8]
       lea      rcx, bword ptr [rsp+A58H]
       mov      bword ptr [rcx], rdx
       mov      dword ptr [rcx+8], eax
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+A48H], xmm0
       mov      rax, bword ptr [rsp+A58H]
       mov      edx, dword ptr [rsp+A60H]
       mov      bword ptr [rsp+A40H], rax
						;; bbWeight=1    PerfScore 12.33
G_M11670_IG13:
       mov      rax, qword ptr [rsp+A40H]
       mov      qword ptr [rsp+A48H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG14:
       mov      dword ptr [rsp+A50H], edx
       lea      rax, bword ptr [rsp+A48H]
       mov      rdx, bword ptr [rax]
       mov      eax, dword ptr [rax+8]
       lea      rcx, bword ptr [rsp+A30H]
       mov      bword ptr [rcx], rdx
       mov      dword ptr [rcx+8], eax
						;; bbWeight=1    PerfScore 8.00
G_M11670_IG15:
       vmovdqu  xmm0, xmmword ptr [rsp+A30H]
       vmovdqu  xmmword ptr [rsp+A20H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG16:
       vmovdqu  xmm0, xmmword ptr [rsp+A20H]
       vmovdqu  xmmword ptr [rsp+A10H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG17:
       cmp      dword ptr [rsp+A18H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG18:
       vmovdqu  xmm0, xmmword ptr [rsp+A10H]
       vmovdqu  xmmword ptr [rsp+A00H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG19:
       mov      rax, bword ptr [rsp+A00H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+76], eax
       mov      gword ptr [rsp+9F8H], rbx
       mov      rax, gword ptr [rsp+9F8H]
       mov      gword ptr [rsp+9F0H], rax
       mov      rax, gword ptr [rsp+9F0H]
						;; bbWeight=1    PerfScore 8.00
G_M11670_IG20:
       vmovdqu  xmm0, xmmword ptr [rax+16]
       vmovdqu  xmmword ptr [rsp+9D0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG21:
       mov      rax, gword ptr [rsp+9D0H]
       mov      edx, dword ptr [rsp+9D8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+9C0H], xmm0
       mov      ecx, dword ptr [rsp+9DCH]
       test     rax, rax
       jne      SHORT G_M11670_IG24
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG22:
       or       edx, ecx
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG23:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+9C0H], xmm0
       jmp      SHORT G_M11670_IG28
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG24:
       mov      r8d, edx
       mov      r9d, ecx
       add      r8, r9
       mov      r9d, dword ptr [rax+8]
       cmp      r8, r9
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG25:
       add      rax, 16
       movsxd   rdx, edx
       add      rax, rdx
       mov      bword ptr [rsp+9B8H], rax
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG26:
       mov      rax, qword ptr [rsp+9B8H]
       mov      qword ptr [rsp+9C0H], rax
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG27:
       mov      dword ptr [rsp+9C8H], ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG28:
       vmovdqu  xmm0, xmmword ptr [rsp+9C0H]
       vmovdqu  xmmword ptr [rsp+9E0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG29:
       cmp      edi, dword ptr [rsp+9E8H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG30:
       mov      rax, bword ptr [rsp+9E0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+9A8H], xmm0
       mov      edx, dword ptr [rsp+9E8H]
       sub      edx, edi
       movsxd   rcx, edi
       add      rax, rcx
       mov      bword ptr [rsp+9A0H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG31:
       mov      rax, qword ptr [rsp+9A0H]
       mov      qword ptr [rsp+9A8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG32:
       mov      dword ptr [rsp+9B0H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG33:
       vmovdqu  xmm0, xmmword ptr [rsp+9A8H]
       vmovdqu  xmmword ptr [rsp+990H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG34:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+980H], xmm0
       mov      rax, bword ptr [rsp+990H]
       mov      edx, dword ptr [rsp+998H]
       mov      bword ptr [rsp+978H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG35:
       mov      rax, qword ptr [rsp+978H]
       mov      qword ptr [rsp+980H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG36:
       mov      dword ptr [rsp+988H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG37:
       vmovdqu  xmm0, xmmword ptr [rsp+980H]
       vmovdqu  xmmword ptr [rsp+968H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG38:
       cmp      dword ptr [rsp+970H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG39:
       vmovdqu  xmm0, xmmword ptr [rsp+968H]
       vmovdqu  xmmword ptr [rsp+958H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG40:
       mov      rax, bword ptr [rsp+958H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+16], eax
       mov      gword ptr [rsp+950H], rbx
       mov      rax, gword ptr [rsp+950H]
       mov      gword ptr [rsp+948H], rax
       mov      eax, edi
       add      eax, 4
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+948H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG41:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+928H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG42:
       mov      rdx, gword ptr [rsp+928H]
       mov      ecx, dword ptr [rsp+930H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+918H], xmm0
       mov      r8d, dword ptr [rsp+934H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG45
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG43:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG44:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+918H], xmm0
       jmp      SHORT G_M11670_IG49
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG45:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG46:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+910H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG47:
       mov      rdx, qword ptr [rsp+910H]
       mov      qword ptr [rsp+918H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG48:
       mov      dword ptr [rsp+920H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG49:
       vmovdqu  xmm0, xmmword ptr [rsp+918H]
       vmovdqu  xmmword ptr [rsp+938H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG50:
       cmp      eax, dword ptr [rsp+940H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG51:
       mov      rdx, bword ptr [rsp+938H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+900H], xmm0
       mov      ecx, dword ptr [rsp+940H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+8F8H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG52:
       mov      rax, qword ptr [rsp+8F8H]
       mov      qword ptr [rsp+900H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG53:
       mov      dword ptr [rsp+908H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG54:
       vmovdqu  xmm0, xmmword ptr [rsp+900H]
       vmovdqu  xmmword ptr [rsp+8E8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG55:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+8D8H], xmm0
       mov      rax, bword ptr [rsp+8E8H]
       mov      edx, dword ptr [rsp+8F0H]
       mov      bword ptr [rsp+8D0H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG56:
       mov      rax, qword ptr [rsp+8D0H]
       mov      qword ptr [rsp+8D8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG57:
       mov      dword ptr [rsp+8E0H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG58:
       vmovdqu  xmm0, xmmword ptr [rsp+8D8H]
       vmovdqu  xmmword ptr [rsp+8C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG59:
       cmp      dword ptr [rsp+8C8H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG60:
       vmovdqu  xmm0, xmmword ptr [rsp+8C0H]
       vmovdqu  xmmword ptr [rsp+8B0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG61:
       mov      rax, bword ptr [rsp+8B0H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+20], eax
       mov      gword ptr [rsp+8A8H], rbx
       mov      rax, gword ptr [rsp+8A8H]
       mov      gword ptr [rsp+8A0H], rax
       mov      eax, edi
       add      eax, 8
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+8A0H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG62:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+880H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG63:
       mov      rdx, gword ptr [rsp+880H]
       mov      ecx, dword ptr [rsp+888H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+870H], xmm0
       mov      r8d, dword ptr [rsp+88CH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG66
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG64:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG65:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+870H], xmm0
       jmp      SHORT G_M11670_IG70
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG66:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG67:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+868H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG68:
       mov      rdx, qword ptr [rsp+868H]
       mov      qword ptr [rsp+870H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG69:
       mov      dword ptr [rsp+878H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG70:
       vmovdqu  xmm0, xmmword ptr [rsp+870H]
       vmovdqu  xmmword ptr [rsp+890H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG71:
       cmp      eax, dword ptr [rsp+898H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG72:
       mov      rdx, bword ptr [rsp+890H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+858H], xmm0
       mov      ecx, dword ptr [rsp+898H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+850H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG73:
       mov      rax, qword ptr [rsp+850H]
       mov      qword ptr [rsp+858H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG74:
       mov      dword ptr [rsp+860H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG75:
       vmovdqu  xmm0, xmmword ptr [rsp+858H]
       vmovdqu  xmmword ptr [rsp+840H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG76:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+830H], xmm0
       mov      rax, bword ptr [rsp+840H]
       mov      edx, dword ptr [rsp+848H]
       mov      bword ptr [rsp+828H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG77:
       mov      rax, qword ptr [rsp+828H]
       mov      qword ptr [rsp+830H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG78:
       mov      dword ptr [rsp+838H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG79:
       vmovdqu  xmm0, xmmword ptr [rsp+830H]
       vmovdqu  xmmword ptr [rsp+818H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG80:
       cmp      dword ptr [rsp+820H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG81:
       vmovdqu  xmm0, xmmword ptr [rsp+818H]
       vmovdqu  xmmword ptr [rsp+808H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG82:
       mov      rax, bword ptr [rsp+808H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+24], eax
       mov      gword ptr [rsp+800H], rbx
       mov      rax, gword ptr [rsp+800H]
       mov      gword ptr [rsp+7F8H], rax
       mov      eax, edi
       add      eax, 12
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+7F8H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG83:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+7D8H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG84:
       mov      rdx, gword ptr [rsp+7D8H]
       mov      ecx, dword ptr [rsp+7E0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+7C8H], xmm0
       mov      r8d, dword ptr [rsp+7E4H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG87
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG85:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG86:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+7C8H], xmm0
       jmp      SHORT G_M11670_IG91
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG87:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG88:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+7C0H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG89:
       mov      rdx, qword ptr [rsp+7C0H]
       mov      qword ptr [rsp+7C8H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG90:
       mov      dword ptr [rsp+7D0H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG91:
       vmovdqu  xmm0, xmmword ptr [rsp+7C8H]
       vmovdqu  xmmword ptr [rsp+7E8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG92:
       cmp      eax, dword ptr [rsp+7F0H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG93:
       mov      rdx, bword ptr [rsp+7E8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+7B0H], xmm0
       mov      ecx, dword ptr [rsp+7F0H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+7A8H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG94:
       mov      rax, qword ptr [rsp+7A8H]
       mov      qword ptr [rsp+7B0H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG95:
       mov      dword ptr [rsp+7B8H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG96:
       vmovdqu  xmm0, xmmword ptr [rsp+7B0H]
       vmovdqu  xmmword ptr [rsp+798H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG97:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+788H], xmm0
       mov      rax, bword ptr [rsp+798H]
       mov      edx, dword ptr [rsp+7A0H]
       mov      bword ptr [rsp+780H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG98:
       mov      rax, qword ptr [rsp+780H]
       mov      qword ptr [rsp+788H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG99:
       mov      dword ptr [rsp+790H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG100:
       vmovdqu  xmm0, xmmword ptr [rsp+788H]
       vmovdqu  xmmword ptr [rsp+770H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG101:
       cmp      dword ptr [rsp+778H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG102:
       vmovdqu  xmm0, xmmword ptr [rsp+770H]
       vmovdqu  xmmword ptr [rsp+760H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG103:
       mov      rax, bword ptr [rsp+760H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+28], eax
       mov      gword ptr [rsp+758H], rbx
       mov      rax, gword ptr [rsp+758H]
       mov      gword ptr [rsp+750H], rax
       mov      eax, edi
       add      eax, 16
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+750H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG104:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+730H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG105:
       mov      rdx, gword ptr [rsp+730H]
       mov      ecx, dword ptr [rsp+738H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+720H], xmm0
       mov      r8d, dword ptr [rsp+73CH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG108
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG106:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG107:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+720H], xmm0
       jmp      SHORT G_M11670_IG112
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG108:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG109:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+718H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG110:
       mov      rdx, qword ptr [rsp+718H]
       mov      qword ptr [rsp+720H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG111:
       mov      dword ptr [rsp+728H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG112:
       vmovdqu  xmm0, xmmword ptr [rsp+720H]
       vmovdqu  xmmword ptr [rsp+740H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG113:
       cmp      eax, dword ptr [rsp+748H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG114:
       mov      rdx, bword ptr [rsp+740H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+708H], xmm0
       mov      ecx, dword ptr [rsp+748H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+700H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG115:
       mov      rax, qword ptr [rsp+700H]
       mov      qword ptr [rsp+708H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG116:
       mov      dword ptr [rsp+710H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG117:
       vmovdqu  xmm0, xmmword ptr [rsp+708H]
       vmovdqu  xmmword ptr [rsp+6F0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG118:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+6E0H], xmm0
       mov      rax, bword ptr [rsp+6F0H]
       mov      edx, dword ptr [rsp+6F8H]
       mov      bword ptr [rsp+6D8H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG119:
       mov      rax, qword ptr [rsp+6D8H]
       mov      qword ptr [rsp+6E0H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG120:
       mov      dword ptr [rsp+6E8H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG121:
       vmovdqu  xmm0, xmmword ptr [rsp+6E0H]
       vmovdqu  xmmword ptr [rsp+6C8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG122:
       cmp      dword ptr [rsp+6D0H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG123:
       vmovdqu  xmm0, xmmword ptr [rsp+6C8H]
       vmovdqu  xmmword ptr [rsp+6B8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG124:
       mov      rax, bword ptr [rsp+6B8H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+32], eax
       mov      gword ptr [rsp+6B0H], rbx
       mov      rax, gword ptr [rsp+6B0H]
       mov      gword ptr [rsp+6A8H], rax
       mov      eax, edi
       add      eax, 20
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+6A8H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG125:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+688H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG126:
       mov      rdx, gword ptr [rsp+688H]
       mov      ecx, dword ptr [rsp+690H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+678H], xmm0
       mov      r8d, dword ptr [rsp+694H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG129
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG127:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG128:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+678H], xmm0
       jmp      SHORT G_M11670_IG133
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG129:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG130:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+670H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG131:
       mov      rdx, qword ptr [rsp+670H]
       mov      qword ptr [rsp+678H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG132:
       mov      dword ptr [rsp+680H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG133:
       vmovdqu  xmm0, xmmword ptr [rsp+678H]
       vmovdqu  xmmword ptr [rsp+698H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG134:
       cmp      eax, dword ptr [rsp+6A0H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG135:
       mov      rdx, bword ptr [rsp+698H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+660H], xmm0
       mov      ecx, dword ptr [rsp+6A0H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+658H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG136:
       mov      rax, qword ptr [rsp+658H]
       mov      qword ptr [rsp+660H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG137:
       mov      dword ptr [rsp+668H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG138:
       vmovdqu  xmm0, xmmword ptr [rsp+660H]
       vmovdqu  xmmword ptr [rsp+648H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG139:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+638H], xmm0
       mov      rax, bword ptr [rsp+648H]
       mov      edx, dword ptr [rsp+650H]
       mov      bword ptr [rsp+630H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG140:
       mov      rax, qword ptr [rsp+630H]
       mov      qword ptr [rsp+638H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG141:
       mov      dword ptr [rsp+640H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG142:
       vmovdqu  xmm0, xmmword ptr [rsp+638H]
       vmovdqu  xmmword ptr [rsp+620H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG143:
       cmp      dword ptr [rsp+628H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG144:
       vmovdqu  xmm0, xmmword ptr [rsp+620H]
       vmovdqu  xmmword ptr [rsp+610H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG145:
       mov      rax, bword ptr [rsp+610H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+36], eax
       mov      gword ptr [rsp+608H], rbx
       mov      rax, gword ptr [rsp+608H]
       mov      gword ptr [rsp+600H], rax
       mov      eax, edi
       add      eax, 24
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+600H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG146:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+5E0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG147:
       mov      rdx, gword ptr [rsp+5E0H]
       mov      ecx, dword ptr [rsp+5E8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+5D0H], xmm0
       mov      r8d, dword ptr [rsp+5ECH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG150
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG148:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG149:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+5D0H], xmm0
       jmp      SHORT G_M11670_IG154
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG150:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG151:
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+5C8H], rdx
						;; bbWeight=0.50 PerfScore 0.88
G_M11670_IG152:
       mov      rdx, qword ptr [rsp+5C8H]
       mov      qword ptr [rsp+5D0H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG153:
       mov      dword ptr [rsp+5D8H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG154:
       vmovdqu  xmm0, xmmword ptr [rsp+5D0H]
       vmovdqu  xmmword ptr [rsp+5F0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG155:
       cmp      eax, dword ptr [rsp+5F8H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG156:
       mov      rdx, bword ptr [rsp+5F0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+5B8H], xmm0
       mov      ecx, dword ptr [rsp+5F8H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+5B0H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG157:
       mov      rax, qword ptr [rsp+5B0H]
       mov      qword ptr [rsp+5B8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG158:
       mov      dword ptr [rsp+5C0H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG159:
       vmovdqu  xmm0, xmmword ptr [rsp+5B8H]
       vmovdqu  xmmword ptr [rsp+5A0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG160:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+590H], xmm0
       mov      rax, bword ptr [rsp+5A0H]
       mov      edx, dword ptr [rsp+5A8H]
       mov      bword ptr [rsp+588H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG161:
       mov      rax, qword ptr [rsp+588H]
       mov      qword ptr [rsp+590H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG162:
       mov      dword ptr [rsp+598H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG163:
       vmovdqu  xmm0, xmmword ptr [rsp+590H]
       vmovdqu  xmmword ptr [rsp+578H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG164:
       cmp      dword ptr [rsp+580H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG165:
       vmovdqu  xmm0, xmmword ptr [rsp+578H]
       vmovdqu  xmmword ptr [rsp+568H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG166:
       mov      rax, bword ptr [rsp+568H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+40], eax
       mov      gword ptr [rsp+560H], rbx
       mov      rax, gword ptr [rsp+560H]
       mov      gword ptr [rsp+558H], rax
       mov      eax, edi
       add      eax, 28
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+558H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG167:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+538H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG168:
       mov      rdx, gword ptr [rsp+538H]
       mov      ecx, dword ptr [rsp+540H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+528H], xmm0
       mov      r8d, dword ptr [rsp+544H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG171
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG169:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG170:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+528H], xmm0
       jmp      SHORT G_M11670_IG175
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG171:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG172:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+520H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG173:
       mov      rdx, qword ptr [rsp+520H]
       mov      qword ptr [rsp+528H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG174:
       mov      dword ptr [rsp+530H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG175:
       vmovdqu  xmm0, xmmword ptr [rsp+528H]
       vmovdqu  xmmword ptr [rsp+548H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG176:
       cmp      eax, dword ptr [rsp+550H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG177:
       mov      rdx, bword ptr [rsp+548H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+510H], xmm0
       mov      ecx, dword ptr [rsp+550H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+508H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG178:
       mov      rax, qword ptr [rsp+508H]
       mov      qword ptr [rsp+510H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG179:
       mov      dword ptr [rsp+518H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG180:
       vmovdqu  xmm0, xmmword ptr [rsp+510H]
       vmovdqu  xmmword ptr [rsp+4F8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG181:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+4E8H], xmm0
       mov      rax, bword ptr [rsp+4F8H]
       mov      edx, dword ptr [rsp+500H]
       mov      bword ptr [rsp+4E0H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG182:
       mov      rax, qword ptr [rsp+4E0H]
       mov      qword ptr [rsp+4E8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG183:
       mov      dword ptr [rsp+4F0H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG184:
       vmovdqu  xmm0, xmmword ptr [rsp+4E8H]
       vmovdqu  xmmword ptr [rsp+4D0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG185:
       cmp      dword ptr [rsp+4D8H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG186:
       vmovdqu  xmm0, xmmword ptr [rsp+4D0H]
       vmovdqu  xmmword ptr [rsp+4C0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG187:
       mov      rax, bword ptr [rsp+4C0H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+44], eax
       mov      gword ptr [rsp+4B8H], rbx
       mov      rax, gword ptr [rsp+4B8H]
       mov      gword ptr [rsp+4B0H], rax
       mov      eax, edi
       add      eax, 32
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+4B0H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG188:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+490H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG189:
       mov      rdx, gword ptr [rsp+490H]
       mov      ecx, dword ptr [rsp+498H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+480H], xmm0
       mov      r8d, dword ptr [rsp+49CH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG192
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG190:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG191:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+480H], xmm0
       jmp      SHORT G_M11670_IG196
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG192:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG193:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+478H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG194:
       mov      rdx, qword ptr [rsp+478H]
       mov      qword ptr [rsp+480H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG195:
       mov      dword ptr [rsp+488H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG196:
       vmovdqu  xmm0, xmmword ptr [rsp+480H]
       vmovdqu  xmmword ptr [rsp+4A0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG197:
       cmp      eax, dword ptr [rsp+4A8H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG198:
       mov      rdx, bword ptr [rsp+4A0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+468H], xmm0
       mov      ecx, dword ptr [rsp+4A8H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+460H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG199:
       mov      rax, qword ptr [rsp+460H]
       mov      qword ptr [rsp+468H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG200:
       mov      dword ptr [rsp+470H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG201:
       vmovdqu  xmm0, xmmword ptr [rsp+468H]
       vmovdqu  xmmword ptr [rsp+450H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG202:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+440H], xmm0
       mov      rax, bword ptr [rsp+450H]
       mov      edx, dword ptr [rsp+458H]
       mov      bword ptr [rsp+438H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG203:
       mov      rax, qword ptr [rsp+438H]
       mov      qword ptr [rsp+440H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG204:
       mov      dword ptr [rsp+448H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG205:
       vmovdqu  xmm0, xmmword ptr [rsp+440H]
       vmovdqu  xmmword ptr [rsp+428H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG206:
       cmp      dword ptr [rsp+430H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG207:
       vmovdqu  xmm0, xmmword ptr [rsp+428H]
       vmovdqu  xmmword ptr [rsp+418H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG208:
       mov      rax, bword ptr [rsp+418H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+48], eax
       mov      gword ptr [rsp+410H], rbx
       mov      rax, gword ptr [rsp+410H]
       mov      gword ptr [rsp+408H], rax
       mov      eax, edi
       add      eax, 36
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+408H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG209:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+3E8H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG210:
       mov      rdx, gword ptr [rsp+3E8H]
       mov      ecx, dword ptr [rsp+3F0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+3D8H], xmm0
       mov      r8d, dword ptr [rsp+3F4H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG213
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG211:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG212:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+3D8H], xmm0
       jmp      SHORT G_M11670_IG217
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG213:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG214:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+3D0H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG215:
       mov      rdx, qword ptr [rsp+3D0H]
       mov      qword ptr [rsp+3D8H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG216:
       mov      dword ptr [rsp+3E0H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG217:
       vmovdqu  xmm0, xmmword ptr [rsp+3D8H]
       vmovdqu  xmmword ptr [rsp+3F8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG218:
       cmp      eax, dword ptr [rsp+400H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG219:
       mov      rdx, bword ptr [rsp+3F8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+3C0H], xmm0
       mov      ecx, dword ptr [rsp+400H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+3B8H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG220:
       mov      rax, qword ptr [rsp+3B8H]
       mov      qword ptr [rsp+3C0H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG221:
       mov      dword ptr [rsp+3C8H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG222:
       vmovdqu  xmm0, xmmword ptr [rsp+3C0H]
       vmovdqu  xmmword ptr [rsp+3A8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG223:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+398H], xmm0
       mov      rax, bword ptr [rsp+3A8H]
       mov      edx, dword ptr [rsp+3B0H]
       mov      bword ptr [rsp+390H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG224:
       mov      rax, qword ptr [rsp+390H]
       mov      qword ptr [rsp+398H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG225:
       mov      dword ptr [rsp+3A0H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG226:
       vmovdqu  xmm0, xmmword ptr [rsp+398H]
       vmovdqu  xmmword ptr [rsp+380H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG227:
       cmp      dword ptr [rsp+388H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG228:
       vmovdqu  xmm0, xmmword ptr [rsp+380H]
       vmovdqu  xmmword ptr [rsp+370H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG229:
       mov      rax, bword ptr [rsp+370H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+52], eax
       mov      gword ptr [rsp+368H], rbx
       mov      rax, gword ptr [rsp+368H]
       mov      gword ptr [rsp+360H], rax
       mov      eax, edi
       add      eax, 40
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+360H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG230:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+340H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG231:
       mov      rdx, gword ptr [rsp+340H]
       mov      ecx, dword ptr [rsp+348H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+330H], xmm0
       mov      r8d, dword ptr [rsp+34CH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG234
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG232:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG233:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+330H], xmm0
       jmp      SHORT G_M11670_IG238
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG234:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG235:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+328H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG236:
       mov      rdx, qword ptr [rsp+328H]
       mov      qword ptr [rsp+330H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG237:
       mov      dword ptr [rsp+338H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG238:
       vmovdqu  xmm0, xmmword ptr [rsp+330H]
       vmovdqu  xmmword ptr [rsp+350H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG239:
       cmp      eax, dword ptr [rsp+358H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG240:
       mov      rdx, bword ptr [rsp+350H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+318H], xmm0
       mov      ecx, dword ptr [rsp+358H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+310H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG241:
       mov      rax, qword ptr [rsp+310H]
       mov      qword ptr [rsp+318H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG242:
       mov      dword ptr [rsp+320H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG243:
       vmovdqu  xmm0, xmmword ptr [rsp+318H]
       vmovdqu  xmmword ptr [rsp+300H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG244:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+2F0H], xmm0
       mov      rax, bword ptr [rsp+300H]
       mov      edx, dword ptr [rsp+308H]
       mov      bword ptr [rsp+2E8H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG245:
       mov      rax, qword ptr [rsp+2E8H]
       mov      qword ptr [rsp+2F0H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG246:
       mov      dword ptr [rsp+2F8H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG247:
       vmovdqu  xmm0, xmmword ptr [rsp+2F0H]
       vmovdqu  xmmword ptr [rsp+2D8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG248:
       cmp      dword ptr [rsp+2E0H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG249:
       vmovdqu  xmm0, xmmword ptr [rsp+2D8H]
       vmovdqu  xmmword ptr [rsp+2C8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG250:
       mov      rax, bword ptr [rsp+2C8H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+56], eax
       mov      gword ptr [rsp+2C0H], rbx
       mov      rax, gword ptr [rsp+2C0H]
       mov      gword ptr [rsp+2B8H], rax
       mov      eax, edi
       add      eax, 44
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+2B8H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG251:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+298H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG252:
       mov      rdx, gword ptr [rsp+298H]
       mov      ecx, dword ptr [rsp+2A0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+288H], xmm0
       mov      r8d, dword ptr [rsp+2A4H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG255
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG253:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG254:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+288H], xmm0
       jmp      SHORT G_M11670_IG259
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG255:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG256:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+280H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG257:
       mov      rdx, qword ptr [rsp+280H]
       mov      qword ptr [rsp+288H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG258:
       mov      dword ptr [rsp+290H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG259:
       vmovdqu  xmm0, xmmword ptr [rsp+288H]
       vmovdqu  xmmword ptr [rsp+2A8H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG260:
       cmp      eax, dword ptr [rsp+2B0H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG261:
       mov      rdx, bword ptr [rsp+2A8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+270H], xmm0
       mov      ecx, dword ptr [rsp+2B0H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+268H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG262:
       mov      rax, qword ptr [rsp+268H]
       mov      qword ptr [rsp+270H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG263:
       mov      dword ptr [rsp+278H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG264:
       vmovdqu  xmm0, xmmword ptr [rsp+270H]
       vmovdqu  xmmword ptr [rsp+258H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG265:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+248H], xmm0
       mov      rax, bword ptr [rsp+258H]
       mov      edx, dword ptr [rsp+260H]
       mov      bword ptr [rsp+240H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG266:
       mov      rax, qword ptr [rsp+240H]
       mov      qword ptr [rsp+248H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG267:
       mov      dword ptr [rsp+250H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG268:
       vmovdqu  xmm0, xmmword ptr [rsp+248H]
       vmovdqu  xmmword ptr [rsp+230H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG269:
       cmp      dword ptr [rsp+238H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG270:
       vmovdqu  xmm0, xmmword ptr [rsp+230H]
       vmovdqu  xmmword ptr [rsp+220H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG271:
       mov      rax, bword ptr [rsp+220H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+60], eax
       mov      gword ptr [rsp+218H], rbx
       mov      rax, gword ptr [rsp+218H]
       mov      gword ptr [rsp+210H], rax
       mov      eax, edi
       add      eax, 48
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+210H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG272:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+1F0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG273:
       mov      rdx, gword ptr [rsp+1F0H]
       mov      ecx, dword ptr [rsp+1F8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+1E0H], xmm0
       mov      r8d, dword ptr [rsp+1FCH]
       test     rdx, rdx
       jne      SHORT G_M11670_IG276
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG274:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG275:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+1E0H], xmm0
       jmp      SHORT G_M11670_IG280
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG276:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG277:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+1D8H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG278:
       mov      rdx, qword ptr [rsp+1D8H]
       mov      qword ptr [rsp+1E0H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG279:
       mov      dword ptr [rsp+1E8H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG280:
       vmovdqu  xmm0, xmmword ptr [rsp+1E0H]
       vmovdqu  xmmword ptr [rsp+200H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG281:
       cmp      eax, dword ptr [rsp+208H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG282:
       mov      rdx, bword ptr [rsp+200H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+1C8H], xmm0
       mov      ecx, dword ptr [rsp+208H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+1C0H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG283:
       mov      rax, qword ptr [rsp+1C0H]
       mov      qword ptr [rsp+1C8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG284:
       mov      dword ptr [rsp+1D0H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG285:
       vmovdqu  xmm0, xmmword ptr [rsp+1C8H]
       vmovdqu  xmmword ptr [rsp+1B0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG286:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+1A0H], xmm0
       mov      rax, bword ptr [rsp+1B0H]
       mov      edx, dword ptr [rsp+1B8H]
       mov      bword ptr [rsp+198H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG287:
       mov      rax, qword ptr [rsp+198H]
       mov      qword ptr [rsp+1A0H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG288:
       mov      dword ptr [rsp+1A8H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG289:
       vmovdqu  xmm0, xmmword ptr [rsp+1A0H]
       vmovdqu  xmmword ptr [rsp+188H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG290:
       cmp      dword ptr [rsp+190H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG291:
       vmovdqu  xmm0, xmmword ptr [rsp+188H]
       vmovdqu  xmmword ptr [rsp+178H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG292:
       mov      rax, bword ptr [rsp+178H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+64], eax
       mov      gword ptr [rsp+170H], rbx
       mov      rax, gword ptr [rsp+170H]
       mov      gword ptr [rsp+168H], rax
       mov      eax, edi
       add      eax, 52
       jo       G_M11670_IG336
       mov      rdx, gword ptr [rsp+168H]
						;; bbWeight=1    PerfScore 9.50
G_M11670_IG293:
       vmovdqu  xmm0, xmmword ptr [rdx+16]
       vmovdqu  xmmword ptr [rsp+148H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG294:
       mov      rdx, gword ptr [rsp+148H]
       mov      ecx, dword ptr [rsp+150H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+138H], xmm0
       mov      r8d, dword ptr [rsp+154H]
       test     rdx, rdx
       jne      SHORT G_M11670_IG297
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG295:
       or       ecx, r8d
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG296:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+138H], xmm0
       jmp      SHORT G_M11670_IG301
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG297:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rdx+8]
       cmp      r9, r10
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG298:
       cmp      dword ptr [rdx], edx
       add      rdx, 16
       movsxd   rcx, ecx
       add      rdx, rcx
       mov      bword ptr [rsp+130H], rdx
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG299:
       mov      rdx, qword ptr [rsp+130H]
       mov      qword ptr [rsp+138H], rdx
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG300:
       mov      dword ptr [rsp+140H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG301:
       vmovdqu  xmm0, xmmword ptr [rsp+138H]
       vmovdqu  xmmword ptr [rsp+158H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG302:
       cmp      eax, dword ptr [rsp+160H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG303:
       mov      rdx, bword ptr [rsp+158H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+120H], xmm0
       mov      ecx, dword ptr [rsp+160H]
       sub      ecx, eax
       movsxd   rax, eax
       add      rax, rdx
       mov      bword ptr [rsp+118H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG304:
       mov      rax, qword ptr [rsp+118H]
       mov      qword ptr [rsp+120H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG305:
       mov      dword ptr [rsp+128H], ecx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG306:
       vmovdqu  xmm0, xmmword ptr [rsp+120H]
       vmovdqu  xmmword ptr [rsp+108H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG307:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+F8H], xmm0
       mov      rax, bword ptr [rsp+108H]
       mov      edx, dword ptr [rsp+110H]
       mov      bword ptr [rsp+F0H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG308:
       mov      rax, qword ptr [rsp+F0H]
       mov      qword ptr [rsp+F8H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG309:
       mov      dword ptr [rsp+100H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG310:
       vmovdqu  xmm0, xmmword ptr [rsp+F8H]
       vmovdqu  xmmword ptr [rsp+E0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG311:
       cmp      dword ptr [rsp+E8H], 4
       jl       G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG312:
       vmovdqu  xmm0, xmmword ptr [rsp+E0H]
       vmovdqu  xmmword ptr [rsp+D0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG313:
       mov      rax, bword ptr [rsp+D0H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+68], eax
       mov      gword ptr [rsp+C8H], rbx
       mov      rax, gword ptr [rsp+C8H]
       mov      gword ptr [rsp+C0H], rax
       add      edi, 56
       jo       G_M11670_IG336
       mov      rax, gword ptr [rsp+C0H]
						;; bbWeight=1    PerfScore 9.25
G_M11670_IG314:
       vmovdqu  xmm0, xmmword ptr [rax+16]
       vmovdqu  xmmword ptr [rsp+A0H], xmm0
						;; bbWeight=1    PerfScore 3.00
G_M11670_IG315:
       mov      rax, gword ptr [rsp+A0H]
       mov      edx, dword ptr [rsp+A8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+90H], xmm0
       mov      ecx, dword ptr [rsp+ACH]
       test     rax, rax
       jne      SHORT G_M11670_IG318
						;; bbWeight=1    PerfScore 5.58
G_M11670_IG316:
       or       edx, ecx
       jne      G_M11670_IG337
						;; bbWeight=0.25 PerfScore 0.31
G_M11670_IG317:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+90H], xmm0
       jmp      SHORT G_M11670_IG322
						;; bbWeight=0.50 PerfScore 1.67
G_M11670_IG318:
       mov      r8d, edx
       mov      r9d, ecx
       add      r8, r9
       mov      r9d, dword ptr [rax+8]
       cmp      r8, r9
       ja       G_M11670_IG337
						;; bbWeight=0.25 PerfScore 1.00
G_M11670_IG319:
       cmp      dword ptr [rax], eax
       add      rax, 16
       movsxd   rdx, edx
       add      rax, rdx
       mov      bword ptr [rsp+88H], rax
						;; bbWeight=0.50 PerfScore 1.88
G_M11670_IG320:
       mov      rax, qword ptr [rsp+88H]
       mov      qword ptr [rsp+90H], rax
						;; bbWeight=0.50 PerfScore 1.00
G_M11670_IG321:
       mov      dword ptr [rsp+98H], ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M11670_IG322:
       vmovdqu  xmm0, xmmword ptr [rsp+90H]
       vmovdqu  xmmword ptr [rsp+B0H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG323:
       cmp      edi, dword ptr [rsp+B8H]
       ja       G_M11670_IG337
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG324:
       mov      rax, bword ptr [rsp+B0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+78H], xmm0
       mov      edx, dword ptr [rsp+B8H]
       sub      edx, edi
       movsxd   rcx, edi
       add      rax, rcx
       mov      bword ptr [rsp+70H], rax
						;; bbWeight=1    PerfScore 5.08
G_M11670_IG325:
       mov      rax, qword ptr [rsp+70H]
       mov      qword ptr [rsp+78H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG326:
       mov      dword ptr [rsp+80H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG327:
       vmovdqu  xmm0, xmmword ptr [rsp+78H]
       vmovdqu  xmmword ptr [rsp+60H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG328:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+50H], xmm0
       mov      rax, bword ptr [rsp+60H]
       mov      edx, dword ptr [rsp+68H]
       mov      bword ptr [rsp+48H], rax
						;; bbWeight=1    PerfScore 4.33
G_M11670_IG329:
       mov      rax, qword ptr [rsp+48H]
       mov      qword ptr [rsp+50H], rax
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG330:
       mov      dword ptr [rsp+58H], edx
						;; bbWeight=1    PerfScore 1.00
G_M11670_IG331:
       vmovdqu  xmm0, xmmword ptr [rsp+50H]
       vmovdqu  xmmword ptr [rsp+38H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG332:
       cmp      dword ptr [rsp+40H], 4
       jl       SHORT G_M11670_IG338
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG333:
       vmovdqu  xmm0, xmmword ptr [rsp+38H]
       vmovdqu  xmmword ptr [rsp+28H], xmm0
						;; bbWeight=1    PerfScore 2.00
G_M11670_IG334:
       mov      rax, bword ptr [rsp+28H]
       mov      eax, dword ptr [rax]
       mov      dword ptr [rsi+72], eax
						;; bbWeight=1    PerfScore 4.00
G_M11670_IG335:
       add      rsp, 0xA98
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 3.25
G_M11670_IG336:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M11670_IG337:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M11670_IG338:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 6850, prolog size 82, PerfScore 1564.87, (MethodHash=48e0d269) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
; ============================================================

; Assembly listing for method Struct:.ctor(FlatBufferDeserializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  4,  4   )     ref  ->  rsi         this class-hnd
;* V01 arg1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T01] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;
; Lcl frame size = 40

G_M38753_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
       mov      rsi, rcx
						;; bbWeight=1    PerfScore 2.50
G_M38753_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rdi, rax
       lea      rcx, bword ptr [rdi+8]
       mov      rdx, rsi
       call     CORINFO_HELP_ASSIGN_REF
       lea      rcx, bword ptr [rsi+8]
       mov      rdx, rdi
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 5.25
G_M38753_IG03:
       add      rsp, 40
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.25

; Total bytes of code 59, prolog size 6, PerfScore 15.90, (MethodHash=d683689e) for method Struct:.ctor(FlatBufferDeserializationContext):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex15Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M3364_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M3364_IG02:
       add      edx, 60
       jo       SHORT G_M3364_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M3364_IG05
						;; bbWeight=1    PerfScore 8.75
G_M3364_IG03:
       or       r8d, ecx
       jne      SHORT G_M3364_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M3364_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M3364_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M3364_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M3364_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M3364_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M3364_IG07:
       cmp      edx, r10d
       ja       SHORT G_M3364_IG12
						;; bbWeight=1    PerfScore 1.25
G_M3364_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M3364_IG13
						;; bbWeight=1    PerfScore 2.00
G_M3364_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M3364_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M3364_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M3364_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M3364_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=7c47f2db) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex15Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_15(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M63339_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M63339_IG02:
       mov      dword ptr [rcx+76], edx
						;; bbWeight=1    PerfScore 1.00
G_M63339_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=da200894) for method Struct:set___flatsharp__Int_15(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex0Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V06 tmp2         [V06    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V11 tmp7         [V11,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V12 tmp8         [V12,T03] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V13 tmp9         [V13    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V14 tmp10        [V14,T04] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V15 tmp11        [V15    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V16 tmp12        [V16,T10] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V17 tmp13        [V17    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V18 tmp14        [V18    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V21 tmp17        [V21,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V22 tmp18        [V22    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V24 tmp20        [V24    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V25 tmp21        [V25    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V26 tmp22        [V26    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V27 tmp23        [V27    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V29 tmp25        [V29,T20] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V30 tmp26        [V30    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V31 tmp27        [V31    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V32 tmp28        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp29        [V33    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V34 tmp30        [V34,T05] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V35 tmp31        [V35    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V36 tmp32        [V36,T11] (  2,  2   )   byref  ->   r9         V07._pointer(offs=0x00) P-INDEP "field V07._pointer (fldOffset=0x0)"
;  V37 tmp33        [V37,T07] (  3,  3   )     int  ->  r10         V07._length(offs=0x08) P-INDEP "field V07._length (fldOffset=0x8)"
;* V38 tmp34        [V38    ] (  0,  0   )   byref  ->  zero-ref    V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;* V39 tmp35        [V39    ] (  0,  0   )     int  ->  zero-ref    V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;  V40 tmp36        [V40,T12] (  2,  2   )   byref  ->  rax         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V41 tmp37        [V41    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V42 tmp38        [V42,T13] (  2,  2   )     ref  ->  rax         V10._array(offs=0x00) P-INDEP "field V10._array (fldOffset=0x0)"
;  V43 tmp39        [V43,T21] (  2,  2   )     int  ->   r8         V10._offset(offs=0x08) P-INDEP "field V10._offset (fldOffset=0x8)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->  rcx         V10._count(offs=0x0c) P-INDEP "field V10._count (fldOffset=0xc)"
;  V45 tmp41        [V45,T08] (  3,  2   )   byref  ->   r9         V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;  V46 tmp42        [V46,T09] (  3,  2   )     int  ->  r10         V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V47 tmp43        [V47,T23] (  2,  1   )   byref  ->   r9         V15._value(offs=0x00) P-INDEP "field V15._value (fldOffset=0x0)"
;* V48 tmp44        [V48    ] (  0,  0   )   byref  ->  zero-ref    V17._pointer(offs=0x00) P-INDEP "field V17._pointer (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )     int  ->  zero-ref    V17._length(offs=0x08) P-INDEP "field V17._length (fldOffset=0x8)"
;  V50 tmp46        [V50,T14] (  2,  2   )   byref  ->  rax         V20._value(offs=0x00) P-INDEP "field V20._value (fldOffset=0x0)"
;* V51 tmp47        [V51    ] (  0,  0   )   byref  ->  zero-ref    V22._pointer(offs=0x00) P-INDEP "field V22._pointer (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )     int  ->  zero-ref    V22._length(offs=0x08) P-INDEP "field V22._length (fldOffset=0x8)"
;  V53 tmp49        [V53,T15] (  2,  2   )   byref  ->  rax         V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V54 tmp50        [V54    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V55 tmp51        [V55,T16] (  2,  2   )   byref  ->  rax         V25._value(offs=0x00) P-INDEP "field V25._value (fldOffset=0x0)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V57 tmp53        [V57    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;  V58 tmp54        [V58,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V59 tmp55        [V59    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V60 tmp56        [V60,T19] (  2,  2   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V61 tmp57        [V61    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;* V62 tmp58        [V62    ] (  0,  0   )   byref  ->  zero-ref    V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V63 tmp59        [V63    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;  V64 tmp60        [V64,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M44592_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M44592_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M44592_IG05
						;; bbWeight=1    PerfScore 7.50
G_M44592_IG03:
       or       r8d, ecx
       jne      SHORT G_M44592_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M44592_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M44592_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M44592_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M44592_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M44592_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M44592_IG07:
       cmp      edx, r10d
       ja       SHORT G_M44592_IG11
						;; bbWeight=1    PerfScore 1.25
G_M44592_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M44592_IG12
						;; bbWeight=1    PerfScore 2.00
G_M44592_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M44592_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M44592_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M44592_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 111, prolog size 4, PerfScore 28.41, (MethodHash=a77351cf) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex0Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_0(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M7871_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M7871_IG02:
       mov      dword ptr [rcx+16], edx
						;; bbWeight=1    PerfScore 1.00
G_M7871_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=8e21e140) for method Struct:set___flatsharp__Int_0(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex1Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M12465_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M12465_IG02:
       add      edx, 4
       jo       SHORT G_M12465_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M12465_IG05
						;; bbWeight=1    PerfScore 8.75
G_M12465_IG03:
       or       r8d, ecx
       jne      SHORT G_M12465_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M12465_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M12465_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M12465_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M12465_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M12465_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M12465_IG07:
       cmp      edx, r10d
       ja       SHORT G_M12465_IG12
						;; bbWeight=1    PerfScore 1.25
G_M12465_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M12465_IG13
						;; bbWeight=1    PerfScore 2.00
G_M12465_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M12465_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M12465_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M12465_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M12465_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=55ebcf4e) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex1Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_1(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M57918_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M57918_IG02:
       mov      dword ptr [rcx+20], edx
						;; bbWeight=1    PerfScore 1.00
G_M57918_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=d26c1dc1) for method Struct:set___flatsharp__Int_1(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex2Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M14386_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M14386_IG02:
       add      edx, 8
       jo       SHORT G_M14386_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M14386_IG05
						;; bbWeight=1    PerfScore 8.75
G_M14386_IG03:
       or       r8d, ecx
       jne      SHORT G_M14386_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M14386_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M14386_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M14386_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M14386_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M14386_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M14386_IG07:
       cmp      edx, r10d
       ja       SHORT G_M14386_IG12
						;; bbWeight=1    PerfScore 1.25
G_M14386_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M14386_IG13
						;; bbWeight=1    PerfScore 2.00
G_M14386_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M14386_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M14386_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M14386_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M14386_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=e157c7cd) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex2Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_2(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M26685_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M26685_IG02:
       mov      dword ptr [rcx+24], edx
						;; bbWeight=1    PerfScore 1.00
G_M26685_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=54cb97c2) for method Struct:set___flatsharp__Int_2(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex3Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M47795_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M47795_IG02:
       add      edx, 12
       jo       SHORT G_M47795_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M47795_IG05
						;; bbWeight=1    PerfScore 8.75
G_M47795_IG03:
       or       r8d, ecx
       jne      SHORT G_M47795_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M47795_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M47795_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M47795_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M47795_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M47795_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M47795_IG07:
       cmp      edx, r10d
       ja       SHORT G_M47795_IG12
						;; bbWeight=1    PerfScore 1.25
G_M47795_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M47795_IG13
						;; bbWeight=1    PerfScore 2.00
G_M47795_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M47795_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M47795_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M47795_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M47795_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=8fd0454c) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex3Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_3(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M11196_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M11196_IG02:
       mov      dword ptr [rcx+28], edx
						;; bbWeight=1    PerfScore 1.00
G_M11196_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=9915d443) for method Struct:set___flatsharp__Int_3(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex4Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M8500_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M8500_IG02:
       add      edx, 16
       jo       SHORT G_M8500_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M8500_IG05
						;; bbWeight=1    PerfScore 8.75
G_M8500_IG03:
       or       r8d, ecx
       jne      SHORT G_M8500_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M8500_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M8500_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M8500_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M8500_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M8500_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M8500_IG07:
       cmp      edx, r10d
       ja       SHORT G_M8500_IG12
						;; bbWeight=1    PerfScore 1.25
G_M8500_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M8500_IG13
						;; bbWeight=1    PerfScore 2.00
G_M8500_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M8500_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M8500_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M8500_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M8500_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=da86decb) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex4Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_4(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M53179_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M53179_IG02:
       mov      dword ptr [rcx+32], edx
						;; bbWeight=1    PerfScore 1.00
G_M53179_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=72f03044) for method Struct:set___flatsharp__Int_4(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex5Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M41909_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M41909_IG02:
       add      edx, 20
       jo       SHORT G_M41909_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M41909_IG05
						;; bbWeight=1    PerfScore 8.75
G_M41909_IG03:
       or       r8d, ecx
       jne      SHORT G_M41909_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M41909_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M41909_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M41909_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M41909_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M41909_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M41909_IG07:
       cmp      edx, r10d
       ja       SHORT G_M41909_IG12
						;; bbWeight=1    PerfScore 1.25
G_M41909_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M41909_IG13
						;; bbWeight=1    PerfScore 2.00
G_M41909_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M41909_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M41909_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M41909_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M41909_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=88ff5c4a) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex5Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_5(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M37690_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M37690_IG02:
       mov      dword ptr [rcx+36], edx
						;; bbWeight=1    PerfScore 1.00
G_M37690_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=b73a6cc5) for method Struct:set___flatsharp__Int_5(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex6Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M43830_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M43830_IG02:
       add      edx, 24
       jo       SHORT G_M43830_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M43830_IG05
						;; bbWeight=1    PerfScore 8.75
G_M43830_IG03:
       or       r8d, ecx
       jne      SHORT G_M43830_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M43830_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M43830_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M43830_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M43830_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M43830_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M43830_IG07:
       cmp      edx, r10d
       ja       SHORT G_M43830_IG12
						;; bbWeight=1    PerfScore 1.25
G_M43830_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M43830_IG13
						;; bbWeight=1    PerfScore 2.00
G_M43830_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M43830_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M43830_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M43830_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M43830_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=146b54c9) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex6Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_6(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M6457_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M6457_IG02:
       mov      dword ptr [rcx+40], edx
						;; bbWeight=1    PerfScore 1.00
G_M6457_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=3999e6c6) for method Struct:set___flatsharp__Int_6(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex7Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M11703_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M11703_IG02:
       add      edx, 28
       jo       SHORT G_M11703_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M11703_IG05
						;; bbWeight=1    PerfScore 8.75
G_M11703_IG03:
       or       r8d, ecx
       jne      SHORT G_M11703_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M11703_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M11703_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M11703_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M11703_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M11703_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M11703_IG07:
       cmp      edx, r10d
       ja       SHORT G_M11703_IG12
						;; bbWeight=1    PerfScore 1.25
G_M11703_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M11703_IG13
						;; bbWeight=1    PerfScore 2.00
G_M11703_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M11703_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M11703_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M11703_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M11703_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=c2e3d248) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex7Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_7(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M56504_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M56504_IG02:
       mov      dword ptr [rcx+44], edx
						;; bbWeight=1    PerfScore 1.00
G_M56504_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=7de42347) for method Struct:set___flatsharp__Int_7(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex8Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M2104_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M2104_IG02:
       add      edx, 32
       jo       SHORT G_M2104_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M2104_IG05
						;; bbWeight=1    PerfScore 8.75
G_M2104_IG03:
       or       r8d, ecx
       jne      SHORT G_M2104_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M2104_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M2104_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M2104_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M2104_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M2104_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M2104_IG07:
       cmp      edx, r10d
       ja       SHORT G_M2104_IG12
						;; bbWeight=1    PerfScore 1.25
G_M2104_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M2104_IG13
						;; bbWeight=1    PerfScore 2.00
G_M2104_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M2104_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M2104_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M2104_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M2104_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=f0edf7c7) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex8Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_8(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M48311_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M48311_IG02:
       mov      dword ptr [rcx+48], edx
						;; bbWeight=1    PerfScore 1.00
G_M48311_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=fc0a4348) for method Struct:set___flatsharp__Int_8(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex9Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M35513_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M35513_IG02:
       add      edx, 36
       jo       SHORT G_M35513_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M35513_IG05
						;; bbWeight=1    PerfScore 8.75
G_M35513_IG03:
       or       r8d, ecx
       jne      SHORT G_M35513_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M35513_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M35513_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M35513_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M35513_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M35513_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M35513_IG07:
       cmp      edx, r10d
       ja       SHORT G_M35513_IG12
						;; bbWeight=1    PerfScore 1.25
G_M35513_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M35513_IG13
						;; bbWeight=1    PerfScore 2.00
G_M35513_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M35513_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M35513_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M35513_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M35513_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=9f667546) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex9Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_9(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M32822_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M32822_IG02:
       mov      dword ptr [rcx+52], edx
						;; bbWeight=1    PerfScore 1.00
G_M32822_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=40547fc9) for method Struct:set___flatsharp__Int_9(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex10Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M7329_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M7329_IG02:
       add      edx, 40
       jo       SHORT G_M7329_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M7329_IG05
						;; bbWeight=1    PerfScore 8.75
G_M7329_IG03:
       or       r8d, ecx
       jne      SHORT G_M7329_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M7329_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M7329_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M7329_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M7329_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M7329_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M7329_IG07:
       cmp      edx, r10d
       ja       SHORT G_M7329_IG12
						;; bbWeight=1    PerfScore 1.25
G_M7329_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M7329_IG13
						;; bbWeight=1    PerfScore 2.00
G_M7329_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M7329_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M7329_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M7329_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M7329_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=f7ace35e) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex10Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_10(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M51438_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M51438_IG02:
       mov      dword ptr [rcx+56], edx
						;; bbWeight=1    PerfScore 1.00
G_M51438_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=39a03711) for method Struct:set___flatsharp__Int_10(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex11Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M39456_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M39456_IG02:
       add      edx, 44
       jo       SHORT G_M39456_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M39456_IG05
						;; bbWeight=1    PerfScore 8.75
G_M39456_IG03:
       or       r8d, ecx
       jne      SHORT G_M39456_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M39456_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M39456_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M39456_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M39456_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M39456_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M39456_IG07:
       cmp      edx, r10d
       ja       SHORT G_M39456_IG12
						;; bbWeight=1    PerfScore 1.25
G_M39456_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M39456_IG13
						;; bbWeight=1    PerfScore 2.00
G_M39456_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M39456_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M39456_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M39456_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M39456_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=493465df) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex11Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_11(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M18031_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M18031_IG02:
       mov      dword ptr [rcx+60], edx
						;; bbWeight=1    PerfScore 1.00
G_M18031_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=f551b990) for method Struct:set___flatsharp__Int_11(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex12Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M42659_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M42659_IG02:
       add      edx, 48
       jo       SHORT G_M42659_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M42659_IG05
						;; bbWeight=1    PerfScore 8.75
G_M42659_IG03:
       or       r8d, ecx
       jne      SHORT G_M42659_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M42659_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M42659_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M42659_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M42659_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M42659_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M42659_IG07:
       cmp      edx, r10d
       ja       SHORT G_M42659_IG12
						;; bbWeight=1    PerfScore 1.25
G_M42659_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M42659_IG13
						;; bbWeight=1    PerfScore 2.00
G_M42659_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M42659_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M42659_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M42659_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M42659_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=3191595c) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex12Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_12(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M29036_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M29036_IG02:
       mov      dword ptr [rcx+64], edx
						;; bbWeight=1    PerfScore 1.00
G_M29036_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=bf018e93) for method Struct:set___flatsharp__Int_12(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex13Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M9250_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M9250_IG02:
       add      edx, 52
       jo       SHORT G_M9250_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M9250_IG05
						;; bbWeight=1    PerfScore 8.75
G_M9250_IG03:
       or       r8d, ecx
       jne      SHORT G_M9250_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M9250_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M9250_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M9250_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M9250_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M9250_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M9250_IG07:
       cmp      edx, r10d
       ja       SHORT G_M9250_IG12
						;; bbWeight=1    PerfScore 1.25
G_M9250_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M9250_IG13
						;; bbWeight=1    PerfScore 2.00
G_M9250_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M9250_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M9250_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M9250_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M9250_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=8318dbdd) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex13Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_13(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M61165_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M61165_IG02:
       mov      dword ptr [rcx+68], edx
						;; bbWeight=1    PerfScore 1.00
G_M61165_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=7ab31112) for method Struct:set___flatsharp__Int_13(int):this
; ============================================================

; Assembly listing for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex14Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T03] (  3,  3   )     int  ->  rdx        
;* V02 arg2         [V02    ] (  0,  0   )     int  ->  zero-ref   
;* V03 arg3         [V03    ] (  0,  0   )     int  ->  zero-ref   
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V06 tmp2         [V06,T01] (  4,  8   )     int  ->  rdx         "Inlining Arg"
;* V07 tmp3         [V07    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V08 tmp4         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V09 tmp5         [V09    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V10 tmp6         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp7         [V11    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V12 tmp8         [V12,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V13 tmp9         [V13,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V14 tmp10        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V15 tmp11        [V15,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V16 tmp12        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp13        [V17,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V18 tmp14        [V18    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V19 tmp15        [V19    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V20 tmp16        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp17        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V22 tmp18        [V22,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V23 tmp19        [V23    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V24 tmp20        [V24    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V25 tmp21        [V25    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V26 tmp22        [V26    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V27 tmp23        [V27    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V28 tmp24        [V28    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V29 tmp25        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V30 tmp26        [V30,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V31 tmp27        [V31    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V32 tmp28        [V32    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V33 tmp29        [V33    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V34 tmp30        [V34    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V35 tmp31        [V35,T06] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;* V36 tmp32        [V36    ] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V37 tmp33        [V37,T12] (  2,  2   )   byref  ->   r9         V08._pointer(offs=0x00) P-INDEP "field V08._pointer (fldOffset=0x0)"
;  V38 tmp34        [V38,T08] (  3,  3   )     int  ->  r10         V08._length(offs=0x08) P-INDEP "field V08._length (fldOffset=0x8)"
;* V39 tmp35        [V39    ] (  0,  0   )   byref  ->  zero-ref    V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;* V40 tmp36        [V40    ] (  0,  0   )     int  ->  zero-ref    V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp37        [V41,T13] (  2,  2   )   byref  ->  rax         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V42 tmp38        [V42    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V43 tmp39        [V43,T14] (  2,  2   )     ref  ->  rax         V11._array(offs=0x00) P-INDEP "field V11._array (fldOffset=0x0)"
;  V44 tmp40        [V44,T22] (  2,  2   )     int  ->   r8         V11._offset(offs=0x08) P-INDEP "field V11._offset (fldOffset=0x8)"
;  V45 tmp41        [V45,T23] (  2,  2   )     int  ->  rcx         V11._count(offs=0x0c) P-INDEP "field V11._count (fldOffset=0xc)"
;  V46 tmp42        [V46,T09] (  3,  2   )   byref  ->   r9         V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;  V47 tmp43        [V47,T10] (  3,  2   )     int  ->  r10         V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V48 tmp44        [V48,T24] (  2,  1   )   byref  ->   r9         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V49 tmp45        [V49    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V50 tmp46        [V50    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V51 tmp47        [V51,T15] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;* V52 tmp48        [V52    ] (  0,  0   )   byref  ->  zero-ref    V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V53 tmp49        [V53    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V54 tmp50        [V54,T16] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V55 tmp51        [V55    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V56 tmp52        [V56,T17] (  2,  2   )   byref  ->  rax         V26._value(offs=0x00) P-INDEP "field V26._value (fldOffset=0x0)"
;  V57 tmp53        [V57,T18] (  2,  2   )   byref  ->  rax         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp54        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V59 tmp55        [V59,T19] (  2,  2   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V60 tmp56        [V60    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V61 tmp57        [V61,T20] (  2,  2   )   byref  ->  rax         V31._pointer(offs=0x00) P-INDEP "field V31._pointer (fldOffset=0x0)"
;* V62 tmp58        [V62    ] (  0,  0   )     int  ->  zero-ref    V31._length(offs=0x08) P-INDEP "field V31._length (fldOffset=0x8)"
;* V63 tmp59        [V63    ] (  0,  0   )   byref  ->  zero-ref    V33._pointer(offs=0x00) P-INDEP "field V33._pointer (fldOffset=0x0)"
;* V64 tmp60        [V64    ] (  0,  0   )     int  ->  zero-ref    V33._length(offs=0x08) P-INDEP "field V33._length (fldOffset=0x8)"
;  V65 tmp61        [V65,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M36773_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M36773_IG02:
       add      edx, 56
       jo       SHORT G_M36773_IG11
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M36773_IG05
						;; bbWeight=1    PerfScore 8.75
G_M36773_IG03:
       or       r8d, ecx
       jne      SHORT G_M36773_IG12
						;; bbWeight=0.25 PerfScore 0.31
G_M36773_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M36773_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M36773_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M36773_IG12
						;; bbWeight=0.25 PerfScore 1.00
G_M36773_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M36773_IG07:
       cmp      edx, r10d
       ja       SHORT G_M36773_IG12
						;; bbWeight=1    PerfScore 1.25
G_M36773_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M36773_IG13
						;; bbWeight=1    PerfScore 2.00
G_M36773_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M36773_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M36773_IG11:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M36773_IG12:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M36773_IG13:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 121, prolog size 4, PerfScore 30.66, (MethodHash=2ac0705a) for method structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:ReadIndex14Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method Struct:set___flatsharp__Int_14(int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     int  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M31210_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M31210_IG02:
       mov      dword ptr [rcx+72], edx
						;; bbWeight=1    PerfScore 1.00
G_M31210_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 4, prolog size 0, PerfScore 2.40, (MethodHash=1e6e8615) for method Struct:set___flatsharp__Int_14(int):this
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex1Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  3,  2.50)     int  ->  rdx        
;  V02 arg2         [V02,T02] (  3,  2.50)     int  ->   r8        
;  V03 arg3         [V03,T00] (  3,  3   )     int  ->   r9        
;  V04 loc0         [V04,T20] (  3,  1.50)  ushort  ->   r8        
;  V05 loc1         [V05,T12] (  4,  2   )     int  ->  rdx        
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T04] (  4,  4   )     int  ->   r8         "Inlining Arg"
;* V08 tmp2         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp4         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp5         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp6         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp7         [V13,T06] (  4,  3.50)     ref  ->   r9         class-hnd "impAppendStmt"
;  V14 tmp8         [V14,T08] (  4,  3   )     int  ->  r11         "impAppendStmt"
;* V15 tmp9         [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V16 tmp10        [V16,T09] (  4,  3   )     int  ->  rax         "Inlining Arg"
;* V17 tmp11        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp12        [V18,T13] (  2,  2   )   byref  ->   r9         "Inlining Arg"
;* V19 tmp13        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp14        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp15        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V23 tmp17        [V23,T16] (  2,  2   )     int  ->  rdi         "Inlining Arg"
;* V24 tmp18        [V24    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V26 tmp20        [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp21        [V27    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V28 tmp22        [V28    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V29 tmp23        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V30 tmp24        [V30    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V31 tmp25        [V31,T47] (  2,  1   )  ushort  ->   r8         "Inline stloc first use temp"
;* V32 tmp26        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp27        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V34 tmp28        [V34    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V35 tmp29        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp30        [V36    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V37 tmp31        [V37    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V38 tmp32        [V38    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V39 tmp33        [V39    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V40 tmp34        [V40    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V41 tmp35        [V41    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V42 tmp36        [V42,T07] (  4,  3.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V43 tmp37        [V43,T10] (  4,  3   )     int  ->  r10         "impAppendStmt"
;* V44 tmp38        [V44    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V45 tmp39        [V45,T11] (  4,  3   )     int  ->  rsi         "Inlining Arg"
;* V46 tmp40        [V46    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V47 tmp41        [V47,T14] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V48 tmp42        [V48    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V49 tmp43        [V49    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V50 tmp44        [V50    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V51 tmp45        [V51    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V52 tmp46        [V52,T17] (  2,  2   )     int  ->   r8         "Inlining Arg"
;* V53 tmp47        [V53    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V54 tmp48        [V54    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V55 tmp49        [V55    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V56 tmp50        [V56    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V57 tmp51        [V57    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V58 tmp52        [V58    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V59 tmp53        [V59    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V60 tmp54        [V60,T48] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;* V61 tmp55        [V61    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V62 tmp56        [V62    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V63 tmp57        [V63    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V64 tmp58        [V64    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V65 tmp59        [V65,T05] (  3,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V66 tmp60        [V66,T27] (  2,  1   )   byref  ->  r11         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V67 tmp61        [V67,T21] (  3,  1.50)     int  ->  rdi         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;* V68 tmp62        [V68    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V69 tmp63        [V69    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V70 tmp64        [V70,T28] (  2,  1   )   byref  ->  rax         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;* V71 tmp65        [V71    ] (  0,  0   )     int  ->  zero-ref    V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V72 tmp66        [V72,T29] (  2,  1   )     ref  ->   r9         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V73 tmp67        [V73,T49] (  2,  1   )     int  ->  r11         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V74 tmp68        [V74,T50] (  2,  1   )     int  ->  rax         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V75 tmp69        [V75,T18] (  3,  1.50)   byref  ->  r11         V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;  V76 tmp70        [V76,T22] (  3,  1.50)     int  ->  rdi         V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V77 tmp71        [V77,T30] (  2,  1   )   byref  ->  r11         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V78 tmp72        [V78    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V79 tmp73        [V79    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V80 tmp74        [V80,T31] (  2,  1   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V81 tmp75        [V81    ] (  0,  0   )   byref  ->  zero-ref    V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V82 tmp76        [V82    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V83 tmp77        [V83,T32] (  2,  1   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V84 tmp78        [V84    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V85 tmp79        [V85,T33] (  2,  1   )   byref  ->  rax         V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;  V86 tmp80        [V86,T34] (  2,  1   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V87 tmp81        [V87    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V88 tmp82        [V88,T35] (  2,  1   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V89 tmp83        [V89    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V90 tmp84        [V90,T36] (  2,  1   )   byref  ->  rax         V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V91 tmp85        [V91    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;* V92 tmp86        [V92    ] (  0,  0   )   byref  ->  zero-ref    V34._pointer(offs=0x00) P-INDEP "field V34._pointer (fldOffset=0x0)"
;* V93 tmp87        [V93    ] (  0,  0   )     int  ->  zero-ref    V34._length(offs=0x08) P-INDEP "field V34._length (fldOffset=0x8)"
;* V94 tmp88        [V94    ] (  0,  0   )     ref  ->  zero-ref    V36.buffer(offs=0x00) P-INDEP "field V36.buffer (fldOffset=0x0)"
;  V95 tmp89        [V95,T37] (  2,  1   )   byref  ->  rcx         V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;  V96 tmp90        [V96,T23] (  3,  1.50)     int  ->   r8         V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;* V97 tmp91        [V97    ] (  0,  0   )   byref  ->  zero-ref    V39._pointer(offs=0x00) P-INDEP "field V39._pointer (fldOffset=0x0)"
;* V98 tmp92        [V98    ] (  0,  0   )     int  ->  zero-ref    V39._length(offs=0x08) P-INDEP "field V39._length (fldOffset=0x8)"
;  V99 tmp93        [V99,T38] (  2,  1   )   byref  ->  rax         V40._pointer(offs=0x00) P-INDEP "field V40._pointer (fldOffset=0x0)"
;* V100 tmp94       [V100    ] (  0,  0   )     int  ->  zero-ref    V40._length(offs=0x08) P-INDEP "field V40._length (fldOffset=0x8)"
;  V101 tmp95       [V101,T39] (  2,  1   )     ref  ->  rax         V41._array(offs=0x00) P-INDEP "field V41._array (fldOffset=0x0)"
;  V102 tmp96       [V102,T51] (  2,  1   )     int  ->  r10         V41._offset(offs=0x08) P-INDEP "field V41._offset (fldOffset=0x8)"
;  V103 tmp97       [V103,T52] (  2,  1   )     int  ->  rsi         V41._count(offs=0x0c) P-INDEP "field V41._count (fldOffset=0xc)"
;  V104 tmp98       [V104,T19] (  3,  1.50)   byref  ->  rcx         V44._pointer(offs=0x00) P-INDEP "field V44._pointer (fldOffset=0x0)"
;  V105 tmp99       [V105,T24] (  3,  1.50)     int  ->   r8         V44._length(offs=0x08) P-INDEP "field V44._length (fldOffset=0x8)"
;  V106 tmp100      [V106,T40] (  2,  1   )   byref  ->  rcx         V46._value(offs=0x00) P-INDEP "field V46._value (fldOffset=0x0)"
;* V107 tmp101      [V107    ] (  0,  0   )   byref  ->  zero-ref    V48._pointer(offs=0x00) P-INDEP "field V48._pointer (fldOffset=0x0)"
;* V108 tmp102      [V108    ] (  0,  0   )     int  ->  zero-ref    V48._length(offs=0x08) P-INDEP "field V48._length (fldOffset=0x8)"
;  V109 tmp103      [V109,T41] (  2,  1   )   byref  ->  rax         V51._value(offs=0x00) P-INDEP "field V51._value (fldOffset=0x0)"
;* V110 tmp104      [V110    ] (  0,  0   )   byref  ->  zero-ref    V53._pointer(offs=0x00) P-INDEP "field V53._pointer (fldOffset=0x0)"
;* V111 tmp105      [V111    ] (  0,  0   )     int  ->  zero-ref    V53._length(offs=0x08) P-INDEP "field V53._length (fldOffset=0x8)"
;  V112 tmp106      [V112,T42] (  2,  1   )   byref  ->  rax         V54._pointer(offs=0x00) P-INDEP "field V54._pointer (fldOffset=0x0)"
;* V113 tmp107      [V113    ] (  0,  0   )     int  ->  zero-ref    V54._length(offs=0x08) P-INDEP "field V54._length (fldOffset=0x8)"
;  V114 tmp108      [V114,T43] (  2,  1   )   byref  ->  rax         V56._value(offs=0x00) P-INDEP "field V56._value (fldOffset=0x0)"
;  V115 tmp109      [V115,T44] (  2,  1   )   byref  ->  rax         V58._pointer(offs=0x00) P-INDEP "field V58._pointer (fldOffset=0x0)"
;* V116 tmp110      [V116    ] (  0,  0   )     int  ->  zero-ref    V58._length(offs=0x08) P-INDEP "field V58._length (fldOffset=0x8)"
;  V117 tmp111      [V117,T45] (  2,  1   )   byref  ->  rax         V59._pointer(offs=0x00) P-INDEP "field V59._pointer (fldOffset=0x0)"
;* V118 tmp112      [V118    ] (  0,  0   )     int  ->  zero-ref    V59._length(offs=0x08) P-INDEP "field V59._length (fldOffset=0x8)"
;  V119 tmp113      [V119,T46] (  2,  1   )   byref  ->  rax         V61._pointer(offs=0x00) P-INDEP "field V61._pointer (fldOffset=0x0)"
;* V120 tmp114      [V120    ] (  0,  0   )     int  ->  zero-ref    V61._length(offs=0x08) P-INDEP "field V61._length (fldOffset=0x8)"
;* V121 tmp115      [V121    ] (  0,  0   )   byref  ->  zero-ref    V63._pointer(offs=0x00) P-INDEP "field V63._pointer (fldOffset=0x0)"
;* V122 tmp116      [V122    ] (  0,  0   )     int  ->  zero-ref    V63._length(offs=0x08) P-INDEP "field V63._length (fldOffset=0x8)"
;  V123 tmp117      [V123,T03] (  4,  4   )   byref  ->  rax         "BlockOp address local"
;  V124 tmp118      [V124,T15] (  2,  2   )   byref  ->  rcx         "BlockOp address local"
;  V125 cse0        [V125,T25] (  3,  1.50)     int  ->  r10         "CSE - conservative"
;  V126 cse1        [V126,T26] (  3,  1.50)     int  ->  rsi         "CSE - conservative"
;
; Lcl frame size = 32

G_M12863_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
						;; bbWeight=1    PerfScore 3.25
G_M12863_IG02:
       cmp      r9d, 1
       jge      SHORT G_M12863_IG05
						;; bbWeight=1    PerfScore 1.25
G_M12863_IG03:
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 0.13
G_M12863_IG04:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M12863_IG05:
       add      r8d, 6
       jo       G_M12863_IG23
       lea      rax, bword ptr [rcx+16]
       mov      r9, gword ptr [rax]
       mov      r10d, dword ptr [rax+8]
       mov      r11d, r10d
       mov      esi, dword ptr [rax+12]
       mov      eax, esi
       test     r9, r9
       jne      SHORT G_M12863_IG08
						;; bbWeight=0.50 PerfScore 4.75
G_M12863_IG06:
       or       r11d, eax
       jne      G_M12863_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M12863_IG07:
       xor      r11, r11
       xor      edi, edi
       jmp      SHORT G_M12863_IG10
						;; bbWeight=0.50 PerfScore 1.25
G_M12863_IG08:
       mov      edi, r11d
       mov      ebx, eax
       add      rdi, rbx
       mov      ebx, dword ptr [r9+8]
       cmp      rdi, rbx
       ja       G_M12863_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M12863_IG09:
       add      r9, 16
       movsxd   r11, r11d
       add      r11, r9
       mov      edi, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M12863_IG10:
       cmp      r8d, edi
       ja       G_M12863_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M12863_IG11:
       sub      edi, r8d
       movsxd   rax, r8d
       add      rax, r11
       cmp      edi, 2
       jl       SHORT G_M12863_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M12863_IG12:
       movzx    r8, word  ptr [rax]
       test     r8d, r8d
       jne      SHORT G_M12863_IG14
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 1.75
G_M12863_IG13:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M12863_IG14:
       add      edx, r8d
       jo       SHORT G_M12863_IG23
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       test     rax, rax
       jne      SHORT G_M12863_IG17
						;; bbWeight=0.50 PerfScore 2.38
G_M12863_IG15:
       or       r10d, esi
       jne      SHORT G_M12863_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M12863_IG16:
       xor      rcx, rcx
       xor      r8d, r8d
       jmp      SHORT G_M12863_IG19
						;; bbWeight=0.50 PerfScore 1.25
G_M12863_IG17:
       mov      ecx, r10d
       mov      r8d, esi
       add      rcx, r8
       mov      r8d, dword ptr [rax+8]
       cmp      rcx, r8
       ja       SHORT G_M12863_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M12863_IG18:
       add      rax, 16
       movsxd   rcx, r10d
       add      rcx, rax
       mov      r8d, esi
						;; bbWeight=0.50 PerfScore 0.50
G_M12863_IG19:
       cmp      edx, r8d
       ja       SHORT G_M12863_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M12863_IG20:
       sub      r8d, edx
       movsxd   rax, edx
       add      rax, rcx
       cmp      r8d, 4
       jl       SHORT G_M12863_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M12863_IG21:
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.00
G_M12863_IG22:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M12863_IG23:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M12863_IG24:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M12863_IG25:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 260, prolog size 7, PerfScore 54.00, (MethodHash=a260cdc0) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex1Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex2Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  3,  2.50)     int  ->  rdx        
;  V02 arg2         [V02,T02] (  3,  2.50)     int  ->   r8        
;  V03 arg3         [V03,T00] (  3,  3   )     int  ->   r9        
;  V04 loc0         [V04,T20] (  3,  1.50)  ushort  ->   r8        
;  V05 loc1         [V05,T12] (  4,  2   )     int  ->  rdx        
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T04] (  4,  4   )     int  ->   r8         "Inlining Arg"
;* V08 tmp2         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp4         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp5         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp6         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp7         [V13,T06] (  4,  3.50)     ref  ->   r9         class-hnd "impAppendStmt"
;  V14 tmp8         [V14,T08] (  4,  3   )     int  ->  r11         "impAppendStmt"
;* V15 tmp9         [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V16 tmp10        [V16,T09] (  4,  3   )     int  ->  rax         "Inlining Arg"
;* V17 tmp11        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp12        [V18,T13] (  2,  2   )   byref  ->   r9         "Inlining Arg"
;* V19 tmp13        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp14        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp15        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V23 tmp17        [V23,T16] (  2,  2   )     int  ->  rdi         "Inlining Arg"
;* V24 tmp18        [V24    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V26 tmp20        [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp21        [V27    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V28 tmp22        [V28    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V29 tmp23        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V30 tmp24        [V30    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V31 tmp25        [V31,T47] (  2,  1   )  ushort  ->   r8         "Inline stloc first use temp"
;* V32 tmp26        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp27        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V34 tmp28        [V34    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V35 tmp29        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp30        [V36    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V37 tmp31        [V37    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V38 tmp32        [V38    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V39 tmp33        [V39    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V40 tmp34        [V40    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V41 tmp35        [V41    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V42 tmp36        [V42,T07] (  4,  3.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V43 tmp37        [V43,T10] (  4,  3   )     int  ->  r10         "impAppendStmt"
;* V44 tmp38        [V44    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V45 tmp39        [V45,T11] (  4,  3   )     int  ->  rsi         "Inlining Arg"
;* V46 tmp40        [V46    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V47 tmp41        [V47,T14] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V48 tmp42        [V48    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V49 tmp43        [V49    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V50 tmp44        [V50    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V51 tmp45        [V51    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V52 tmp46        [V52,T17] (  2,  2   )     int  ->   r8         "Inlining Arg"
;* V53 tmp47        [V53    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V54 tmp48        [V54    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V55 tmp49        [V55    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V56 tmp50        [V56    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V57 tmp51        [V57    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V58 tmp52        [V58    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V59 tmp53        [V59    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V60 tmp54        [V60,T48] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;* V61 tmp55        [V61    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V62 tmp56        [V62    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V63 tmp57        [V63    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V64 tmp58        [V64    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V65 tmp59        [V65,T05] (  3,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V66 tmp60        [V66,T27] (  2,  1   )   byref  ->  r11         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V67 tmp61        [V67,T21] (  3,  1.50)     int  ->  rdi         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;* V68 tmp62        [V68    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V69 tmp63        [V69    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V70 tmp64        [V70,T28] (  2,  1   )   byref  ->  rax         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;* V71 tmp65        [V71    ] (  0,  0   )     int  ->  zero-ref    V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V72 tmp66        [V72,T29] (  2,  1   )     ref  ->   r9         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V73 tmp67        [V73,T49] (  2,  1   )     int  ->  r11         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V74 tmp68        [V74,T50] (  2,  1   )     int  ->  rax         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V75 tmp69        [V75,T18] (  3,  1.50)   byref  ->  r11         V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;  V76 tmp70        [V76,T22] (  3,  1.50)     int  ->  rdi         V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V77 tmp71        [V77,T30] (  2,  1   )   byref  ->  r11         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V78 tmp72        [V78    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V79 tmp73        [V79    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V80 tmp74        [V80,T31] (  2,  1   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V81 tmp75        [V81    ] (  0,  0   )   byref  ->  zero-ref    V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V82 tmp76        [V82    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V83 tmp77        [V83,T32] (  2,  1   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V84 tmp78        [V84    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V85 tmp79        [V85,T33] (  2,  1   )   byref  ->  rax         V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;  V86 tmp80        [V86,T34] (  2,  1   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V87 tmp81        [V87    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V88 tmp82        [V88,T35] (  2,  1   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V89 tmp83        [V89    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V90 tmp84        [V90,T36] (  2,  1   )   byref  ->  rax         V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V91 tmp85        [V91    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;* V92 tmp86        [V92    ] (  0,  0   )   byref  ->  zero-ref    V34._pointer(offs=0x00) P-INDEP "field V34._pointer (fldOffset=0x0)"
;* V93 tmp87        [V93    ] (  0,  0   )     int  ->  zero-ref    V34._length(offs=0x08) P-INDEP "field V34._length (fldOffset=0x8)"
;* V94 tmp88        [V94    ] (  0,  0   )     ref  ->  zero-ref    V36.buffer(offs=0x00) P-INDEP "field V36.buffer (fldOffset=0x0)"
;  V95 tmp89        [V95,T37] (  2,  1   )   byref  ->  rcx         V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;  V96 tmp90        [V96,T23] (  3,  1.50)     int  ->   r8         V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;* V97 tmp91        [V97    ] (  0,  0   )   byref  ->  zero-ref    V39._pointer(offs=0x00) P-INDEP "field V39._pointer (fldOffset=0x0)"
;* V98 tmp92        [V98    ] (  0,  0   )     int  ->  zero-ref    V39._length(offs=0x08) P-INDEP "field V39._length (fldOffset=0x8)"
;  V99 tmp93        [V99,T38] (  2,  1   )   byref  ->  rax         V40._pointer(offs=0x00) P-INDEP "field V40._pointer (fldOffset=0x0)"
;* V100 tmp94       [V100    ] (  0,  0   )     int  ->  zero-ref    V40._length(offs=0x08) P-INDEP "field V40._length (fldOffset=0x8)"
;  V101 tmp95       [V101,T39] (  2,  1   )     ref  ->  rax         V41._array(offs=0x00) P-INDEP "field V41._array (fldOffset=0x0)"
;  V102 tmp96       [V102,T51] (  2,  1   )     int  ->  r10         V41._offset(offs=0x08) P-INDEP "field V41._offset (fldOffset=0x8)"
;  V103 tmp97       [V103,T52] (  2,  1   )     int  ->  rsi         V41._count(offs=0x0c) P-INDEP "field V41._count (fldOffset=0xc)"
;  V104 tmp98       [V104,T19] (  3,  1.50)   byref  ->  rcx         V44._pointer(offs=0x00) P-INDEP "field V44._pointer (fldOffset=0x0)"
;  V105 tmp99       [V105,T24] (  3,  1.50)     int  ->   r8         V44._length(offs=0x08) P-INDEP "field V44._length (fldOffset=0x8)"
;  V106 tmp100      [V106,T40] (  2,  1   )   byref  ->  rcx         V46._value(offs=0x00) P-INDEP "field V46._value (fldOffset=0x0)"
;* V107 tmp101      [V107    ] (  0,  0   )   byref  ->  zero-ref    V48._pointer(offs=0x00) P-INDEP "field V48._pointer (fldOffset=0x0)"
;* V108 tmp102      [V108    ] (  0,  0   )     int  ->  zero-ref    V48._length(offs=0x08) P-INDEP "field V48._length (fldOffset=0x8)"
;  V109 tmp103      [V109,T41] (  2,  1   )   byref  ->  rax         V51._value(offs=0x00) P-INDEP "field V51._value (fldOffset=0x0)"
;* V110 tmp104      [V110    ] (  0,  0   )   byref  ->  zero-ref    V53._pointer(offs=0x00) P-INDEP "field V53._pointer (fldOffset=0x0)"
;* V111 tmp105      [V111    ] (  0,  0   )     int  ->  zero-ref    V53._length(offs=0x08) P-INDEP "field V53._length (fldOffset=0x8)"
;  V112 tmp106      [V112,T42] (  2,  1   )   byref  ->  rax         V54._pointer(offs=0x00) P-INDEP "field V54._pointer (fldOffset=0x0)"
;* V113 tmp107      [V113    ] (  0,  0   )     int  ->  zero-ref    V54._length(offs=0x08) P-INDEP "field V54._length (fldOffset=0x8)"
;  V114 tmp108      [V114,T43] (  2,  1   )   byref  ->  rax         V56._value(offs=0x00) P-INDEP "field V56._value (fldOffset=0x0)"
;  V115 tmp109      [V115,T44] (  2,  1   )   byref  ->  rax         V58._pointer(offs=0x00) P-INDEP "field V58._pointer (fldOffset=0x0)"
;* V116 tmp110      [V116    ] (  0,  0   )     int  ->  zero-ref    V58._length(offs=0x08) P-INDEP "field V58._length (fldOffset=0x8)"
;  V117 tmp111      [V117,T45] (  2,  1   )   byref  ->  rax         V59._pointer(offs=0x00) P-INDEP "field V59._pointer (fldOffset=0x0)"
;* V118 tmp112      [V118    ] (  0,  0   )     int  ->  zero-ref    V59._length(offs=0x08) P-INDEP "field V59._length (fldOffset=0x8)"
;  V119 tmp113      [V119,T46] (  2,  1   )   byref  ->  rax         V61._pointer(offs=0x00) P-INDEP "field V61._pointer (fldOffset=0x0)"
;* V120 tmp114      [V120    ] (  0,  0   )     int  ->  zero-ref    V61._length(offs=0x08) P-INDEP "field V61._length (fldOffset=0x8)"
;* V121 tmp115      [V121    ] (  0,  0   )   byref  ->  zero-ref    V63._pointer(offs=0x00) P-INDEP "field V63._pointer (fldOffset=0x0)"
;* V122 tmp116      [V122    ] (  0,  0   )     int  ->  zero-ref    V63._length(offs=0x08) P-INDEP "field V63._length (fldOffset=0x8)"
;  V123 tmp117      [V123,T03] (  4,  4   )   byref  ->  rax         "BlockOp address local"
;  V124 tmp118      [V124,T15] (  2,  2   )   byref  ->  rcx         "BlockOp address local"
;  V125 cse0        [V125,T25] (  3,  1.50)     int  ->  r10         "CSE - conservative"
;  V126 cse1        [V126,T26] (  3,  1.50)     int  ->  rsi         "CSE - conservative"
;
; Lcl frame size = 32

G_M9660_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
						;; bbWeight=1    PerfScore 3.25
G_M9660_IG02:
       cmp      r9d, 2
       jge      SHORT G_M9660_IG05
						;; bbWeight=1    PerfScore 1.25
G_M9660_IG03:
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 0.13
G_M9660_IG04:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M9660_IG05:
       add      r8d, 8
       jo       G_M9660_IG23
       lea      rax, bword ptr [rcx+16]
       mov      r9, gword ptr [rax]
       mov      r10d, dword ptr [rax+8]
       mov      r11d, r10d
       mov      esi, dword ptr [rax+12]
       mov      eax, esi
       test     r9, r9
       jne      SHORT G_M9660_IG08
						;; bbWeight=0.50 PerfScore 4.75
G_M9660_IG06:
       or       r11d, eax
       jne      G_M9660_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M9660_IG07:
       xor      r11, r11
       xor      edi, edi
       jmp      SHORT G_M9660_IG10
						;; bbWeight=0.50 PerfScore 1.25
G_M9660_IG08:
       mov      edi, r11d
       mov      ebx, eax
       add      rdi, rbx
       mov      ebx, dword ptr [r9+8]
       cmp      rdi, rbx
       ja       G_M9660_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M9660_IG09:
       add      r9, 16
       movsxd   r11, r11d
       add      r11, r9
       mov      edi, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M9660_IG10:
       cmp      r8d, edi
       ja       G_M9660_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M9660_IG11:
       sub      edi, r8d
       movsxd   rax, r8d
       add      rax, r11
       cmp      edi, 2
       jl       SHORT G_M9660_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M9660_IG12:
       movzx    r8, word  ptr [rax]
       test     r8d, r8d
       jne      SHORT G_M9660_IG14
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 1.75
G_M9660_IG13:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M9660_IG14:
       add      edx, r8d
       jo       SHORT G_M9660_IG23
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       test     rax, rax
       jne      SHORT G_M9660_IG17
						;; bbWeight=0.50 PerfScore 2.38
G_M9660_IG15:
       or       r10d, esi
       jne      SHORT G_M9660_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M9660_IG16:
       xor      rcx, rcx
       xor      r8d, r8d
       jmp      SHORT G_M9660_IG19
						;; bbWeight=0.50 PerfScore 1.25
G_M9660_IG17:
       mov      ecx, r10d
       mov      r8d, esi
       add      rcx, r8
       mov      r8d, dword ptr [rax+8]
       cmp      rcx, r8
       ja       SHORT G_M9660_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M9660_IG18:
       add      rax, 16
       movsxd   rcx, r10d
       add      rcx, rax
       mov      r8d, esi
						;; bbWeight=0.50 PerfScore 0.50
G_M9660_IG19:
       cmp      edx, r8d
       ja       SHORT G_M9660_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M9660_IG20:
       sub      r8d, edx
       movsxd   rax, edx
       add      rax, rcx
       cmp      r8d, 4
       jl       SHORT G_M9660_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M9660_IG21:
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.00
G_M9660_IG22:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M9660_IG23:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M9660_IG24:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M9660_IG25:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 260, prolog size 7, PerfScore 54.00, (MethodHash=ba03da43) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex2Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex3Value(Wrapper,int,int,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  3,  2.50)     int  ->  rdx        
;  V02 arg2         [V02,T02] (  3,  2.50)     int  ->   r8        
;  V03 arg3         [V03,T00] (  3,  3   )     int  ->   r9        
;  V04 loc0         [V04,T20] (  3,  1.50)  ushort  ->   r8        
;  V05 loc1         [V05,T12] (  4,  2   )     int  ->  rdx        
;  V06 OutArgs      [V06    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V07 tmp1         [V07,T04] (  4,  4   )     int  ->   r8         "Inlining Arg"
;* V08 tmp2         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp3         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp4         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp5         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp6         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp7         [V13,T06] (  4,  3.50)     ref  ->   r9         class-hnd "impAppendStmt"
;  V14 tmp8         [V14,T08] (  4,  3   )     int  ->  r11         "impAppendStmt"
;* V15 tmp9         [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V16 tmp10        [V16,T09] (  4,  3   )     int  ->  rax         "Inlining Arg"
;* V17 tmp11        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp12        [V18,T13] (  2,  2   )   byref  ->   r9         "Inlining Arg"
;* V19 tmp13        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp14        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp15        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp16        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V23 tmp17        [V23,T16] (  2,  2   )     int  ->  rdi         "Inlining Arg"
;* V24 tmp18        [V24    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V25 tmp19        [V25    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V26 tmp20        [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp21        [V27    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V28 tmp22        [V28    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V29 tmp23        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V30 tmp24        [V30    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V31 tmp25        [V31,T47] (  2,  1   )  ushort  ->   r8         "Inline stloc first use temp"
;* V32 tmp26        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp27        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V34 tmp28        [V34    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V35 tmp29        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp30        [V36    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V37 tmp31        [V37    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V38 tmp32        [V38    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V39 tmp33        [V39    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V40 tmp34        [V40    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V41 tmp35        [V41    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V42 tmp36        [V42,T07] (  4,  3.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V43 tmp37        [V43,T10] (  4,  3   )     int  ->  r10         "impAppendStmt"
;* V44 tmp38        [V44    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V45 tmp39        [V45,T11] (  4,  3   )     int  ->  rsi         "Inlining Arg"
;* V46 tmp40        [V46    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V47 tmp41        [V47,T14] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V48 tmp42        [V48    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V49 tmp43        [V49    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V50 tmp44        [V50    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V51 tmp45        [V51    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V52 tmp46        [V52,T17] (  2,  2   )     int  ->   r8         "Inlining Arg"
;* V53 tmp47        [V53    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V54 tmp48        [V54    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V55 tmp49        [V55    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V56 tmp50        [V56    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V57 tmp51        [V57    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V58 tmp52        [V58    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V59 tmp53        [V59    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V60 tmp54        [V60,T48] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;* V61 tmp55        [V61    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V62 tmp56        [V62    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V63 tmp57        [V63    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V64 tmp58        [V64    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V65 tmp59        [V65,T05] (  3,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V66 tmp60        [V66,T27] (  2,  1   )   byref  ->  r11         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V67 tmp61        [V67,T21] (  3,  1.50)     int  ->  rdi         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;* V68 tmp62        [V68    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V69 tmp63        [V69    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V70 tmp64        [V70,T28] (  2,  1   )   byref  ->  rax         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;* V71 tmp65        [V71    ] (  0,  0   )     int  ->  zero-ref    V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V72 tmp66        [V72,T29] (  2,  1   )     ref  ->   r9         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V73 tmp67        [V73,T49] (  2,  1   )     int  ->  r11         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V74 tmp68        [V74,T50] (  2,  1   )     int  ->  rax         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V75 tmp69        [V75,T18] (  3,  1.50)   byref  ->  r11         V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;  V76 tmp70        [V76,T22] (  3,  1.50)     int  ->  rdi         V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V77 tmp71        [V77,T30] (  2,  1   )   byref  ->  r11         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V78 tmp72        [V78    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V79 tmp73        [V79    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V80 tmp74        [V80,T31] (  2,  1   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V81 tmp75        [V81    ] (  0,  0   )   byref  ->  zero-ref    V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V82 tmp76        [V82    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V83 tmp77        [V83,T32] (  2,  1   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V84 tmp78        [V84    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V85 tmp79        [V85,T33] (  2,  1   )   byref  ->  rax         V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;  V86 tmp80        [V86,T34] (  2,  1   )   byref  ->  rax         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V87 tmp81        [V87    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V88 tmp82        [V88,T35] (  2,  1   )   byref  ->  rax         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V89 tmp83        [V89    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V90 tmp84        [V90,T36] (  2,  1   )   byref  ->  rax         V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V91 tmp85        [V91    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;* V92 tmp86        [V92    ] (  0,  0   )   byref  ->  zero-ref    V34._pointer(offs=0x00) P-INDEP "field V34._pointer (fldOffset=0x0)"
;* V93 tmp87        [V93    ] (  0,  0   )     int  ->  zero-ref    V34._length(offs=0x08) P-INDEP "field V34._length (fldOffset=0x8)"
;* V94 tmp88        [V94    ] (  0,  0   )     ref  ->  zero-ref    V36.buffer(offs=0x00) P-INDEP "field V36.buffer (fldOffset=0x0)"
;  V95 tmp89        [V95,T37] (  2,  1   )   byref  ->  rcx         V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;  V96 tmp90        [V96,T23] (  3,  1.50)     int  ->   r8         V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;* V97 tmp91        [V97    ] (  0,  0   )   byref  ->  zero-ref    V39._pointer(offs=0x00) P-INDEP "field V39._pointer (fldOffset=0x0)"
;* V98 tmp92        [V98    ] (  0,  0   )     int  ->  zero-ref    V39._length(offs=0x08) P-INDEP "field V39._length (fldOffset=0x8)"
;  V99 tmp93        [V99,T38] (  2,  1   )   byref  ->  rax         V40._pointer(offs=0x00) P-INDEP "field V40._pointer (fldOffset=0x0)"
;* V100 tmp94       [V100    ] (  0,  0   )     int  ->  zero-ref    V40._length(offs=0x08) P-INDEP "field V40._length (fldOffset=0x8)"
;  V101 tmp95       [V101,T39] (  2,  1   )     ref  ->  rax         V41._array(offs=0x00) P-INDEP "field V41._array (fldOffset=0x0)"
;  V102 tmp96       [V102,T51] (  2,  1   )     int  ->  r10         V41._offset(offs=0x08) P-INDEP "field V41._offset (fldOffset=0x8)"
;  V103 tmp97       [V103,T52] (  2,  1   )     int  ->  rsi         V41._count(offs=0x0c) P-INDEP "field V41._count (fldOffset=0xc)"
;  V104 tmp98       [V104,T19] (  3,  1.50)   byref  ->  rcx         V44._pointer(offs=0x00) P-INDEP "field V44._pointer (fldOffset=0x0)"
;  V105 tmp99       [V105,T24] (  3,  1.50)     int  ->   r8         V44._length(offs=0x08) P-INDEP "field V44._length (fldOffset=0x8)"
;  V106 tmp100      [V106,T40] (  2,  1   )   byref  ->  rcx         V46._value(offs=0x00) P-INDEP "field V46._value (fldOffset=0x0)"
;* V107 tmp101      [V107    ] (  0,  0   )   byref  ->  zero-ref    V48._pointer(offs=0x00) P-INDEP "field V48._pointer (fldOffset=0x0)"
;* V108 tmp102      [V108    ] (  0,  0   )     int  ->  zero-ref    V48._length(offs=0x08) P-INDEP "field V48._length (fldOffset=0x8)"
;  V109 tmp103      [V109,T41] (  2,  1   )   byref  ->  rax         V51._value(offs=0x00) P-INDEP "field V51._value (fldOffset=0x0)"
;* V110 tmp104      [V110    ] (  0,  0   )   byref  ->  zero-ref    V53._pointer(offs=0x00) P-INDEP "field V53._pointer (fldOffset=0x0)"
;* V111 tmp105      [V111    ] (  0,  0   )     int  ->  zero-ref    V53._length(offs=0x08) P-INDEP "field V53._length (fldOffset=0x8)"
;  V112 tmp106      [V112,T42] (  2,  1   )   byref  ->  rax         V54._pointer(offs=0x00) P-INDEP "field V54._pointer (fldOffset=0x0)"
;* V113 tmp107      [V113    ] (  0,  0   )     int  ->  zero-ref    V54._length(offs=0x08) P-INDEP "field V54._length (fldOffset=0x8)"
;  V114 tmp108      [V114,T43] (  2,  1   )   byref  ->  rax         V56._value(offs=0x00) P-INDEP "field V56._value (fldOffset=0x0)"
;  V115 tmp109      [V115,T44] (  2,  1   )   byref  ->  rax         V58._pointer(offs=0x00) P-INDEP "field V58._pointer (fldOffset=0x0)"
;* V116 tmp110      [V116    ] (  0,  0   )     int  ->  zero-ref    V58._length(offs=0x08) P-INDEP "field V58._length (fldOffset=0x8)"
;  V117 tmp111      [V117,T45] (  2,  1   )   byref  ->  rax         V59._pointer(offs=0x00) P-INDEP "field V59._pointer (fldOffset=0x0)"
;* V118 tmp112      [V118    ] (  0,  0   )     int  ->  zero-ref    V59._length(offs=0x08) P-INDEP "field V59._length (fldOffset=0x8)"
;  V119 tmp113      [V119,T46] (  2,  1   )   byref  ->  rax         V61._pointer(offs=0x00) P-INDEP "field V61._pointer (fldOffset=0x0)"
;* V120 tmp114      [V120    ] (  0,  0   )     int  ->  zero-ref    V61._length(offs=0x08) P-INDEP "field V61._length (fldOffset=0x8)"
;* V121 tmp115      [V121    ] (  0,  0   )   byref  ->  zero-ref    V63._pointer(offs=0x00) P-INDEP "field V63._pointer (fldOffset=0x0)"
;* V122 tmp116      [V122    ] (  0,  0   )     int  ->  zero-ref    V63._length(offs=0x08) P-INDEP "field V63._length (fldOffset=0x8)"
;  V123 tmp117      [V123,T03] (  4,  4   )   byref  ->  rax         "BlockOp address local"
;  V124 tmp118      [V124,T15] (  2,  2   )   byref  ->  rcx         "BlockOp address local"
;  V125 cse0        [V125,T25] (  3,  1.50)     int  ->  r10         "CSE - conservative"
;  V126 cse1        [V126,T26] (  3,  1.50)     int  ->  rsi         "CSE - conservative"
;
; Lcl frame size = 32

G_M43069_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
						;; bbWeight=1    PerfScore 3.25
G_M43069_IG02:
       cmp      r9d, 3
       jge      SHORT G_M43069_IG05
						;; bbWeight=1    PerfScore 1.25
G_M43069_IG03:
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 0.13
G_M43069_IG04:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M43069_IG05:
       add      r8d, 10
       jo       G_M43069_IG23
       lea      rax, bword ptr [rcx+16]
       mov      r9, gword ptr [rax]
       mov      r10d, dword ptr [rax+8]
       mov      r11d, r10d
       mov      esi, dword ptr [rax+12]
       mov      eax, esi
       test     r9, r9
       jne      SHORT G_M43069_IG08
						;; bbWeight=0.50 PerfScore 4.75
G_M43069_IG06:
       or       r11d, eax
       jne      G_M43069_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M43069_IG07:
       xor      r11, r11
       xor      edi, edi
       jmp      SHORT G_M43069_IG10
						;; bbWeight=0.50 PerfScore 1.25
G_M43069_IG08:
       mov      edi, r11d
       mov      ebx, eax
       add      rdi, rbx
       mov      ebx, dword ptr [r9+8]
       cmp      rdi, rbx
       ja       G_M43069_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M43069_IG09:
       add      r9, 16
       movsxd   r11, r11d
       add      r11, r9
       mov      edi, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M43069_IG10:
       cmp      r8d, edi
       ja       G_M43069_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M43069_IG11:
       sub      edi, r8d
       movsxd   rax, r8d
       add      rax, r11
       cmp      edi, 2
       jl       SHORT G_M43069_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M43069_IG12:
       movzx    r8, word  ptr [rax]
       test     r8d, r8d
       jne      SHORT G_M43069_IG14
       xor      eax, eax
						;; bbWeight=0.50 PerfScore 1.75
G_M43069_IG13:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M43069_IG14:
       add      edx, r8d
       jo       SHORT G_M43069_IG23
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       test     rax, rax
       jne      SHORT G_M43069_IG17
						;; bbWeight=0.50 PerfScore 2.38
G_M43069_IG15:
       or       r10d, esi
       jne      SHORT G_M43069_IG24
						;; bbWeight=0.25 PerfScore 0.31
G_M43069_IG16:
       xor      rcx, rcx
       xor      r8d, r8d
       jmp      SHORT G_M43069_IG19
						;; bbWeight=0.50 PerfScore 1.25
G_M43069_IG17:
       mov      ecx, r10d
       mov      r8d, esi
       add      rcx, r8
       mov      r8d, dword ptr [rax+8]
       cmp      rcx, r8
       ja       SHORT G_M43069_IG24
						;; bbWeight=0.25 PerfScore 1.00
G_M43069_IG18:
       add      rax, 16
       movsxd   rcx, r10d
       add      rcx, rax
       mov      r8d, esi
						;; bbWeight=0.50 PerfScore 0.50
G_M43069_IG19:
       cmp      edx, r8d
       ja       SHORT G_M43069_IG24
						;; bbWeight=0.50 PerfScore 0.63
G_M43069_IG20:
       sub      r8d, edx
       movsxd   rax, edx
       add      rax, rcx
       cmp      r8d, 4
       jl       SHORT G_M43069_IG25
						;; bbWeight=0.50 PerfScore 1.00
G_M43069_IG21:
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.00
G_M43069_IG22:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=0.50 PerfScore 1.38
G_M43069_IG23:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M43069_IG24:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M43069_IG25:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 260, prolog size 7, PerfScore 54.00, (MethodHash=687c57c2) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:ReadIndex3Value(Wrapper,int,int,int):int
; ============================================================

; Assembly listing for method StructVectorClone:Parse():this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )     ref  ->  rsi         this class-hnd
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V02 tmp1         [V02,T01] (  3,  6   )     ref  ->  rdi         class-hnd exact "NewObj constructor temp"
;  V03 tmp2         [V03,T04] (  2,  4   )     ref  ->  rbx         class-hnd exact "impAppendStmt"
;  V04 tmp3         [V04,T02] (  3,  6   )     ref  ->  rdx         class-hnd "Inlining Arg"
;* V05 tmp4         [V05    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V06 tmp5         [V06    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V07 tmp6         [V07,T05] (  3,  3   )     ref  ->  rdx         V05._array(offs=0x00) P-INDEP "field V05._array (fldOffset=0x0)"
;* V08 tmp7         [V08,T07] (  0,  0   )     int  ->  zero-ref    V05._offset(offs=0x08) P-INDEP "field V05._offset (fldOffset=0x8)"
;  V09 tmp8         [V09,T08] (  2,  2   )     int  ->  rsi         V05._count(offs=0x0c) P-INDEP "field V05._count (fldOffset=0xc)"
;  V10 tmp9         [V10,T06] (  2,  2   )     ref  ->  rdx         V06._array(offs=0x00) P-INDEP "field V06._array (fldOffset=0x0)"
;* V11 tmp10        [V11,T10] (  0,  0   )     int  ->  zero-ref    V06._offset(offs=0x08) P-INDEP "field V06._offset (fldOffset=0x8)"
;  V12 tmp11        [V12,T09] (  2,  2   )     int  ->  rsi         V06._count(offs=0x0c) P-INDEP "field V06._count (fldOffset=0xc)"
;  V13 tmp12        [V13,T00] (  4,  8   )   byref  ->  rbp         "BlockOp address local"
;
; Lcl frame size = 40

G_M55981_IG01:
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 40
       mov      rsi, rcx
						;; bbWeight=1    PerfScore 4.50
G_M55981_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rdi, rax
       mov      rdx, 0xD1FFAB1E
       mov      rbx, gword ptr [rdx]
       mov      rdx, gword ptr [rsi+8]
       test     rdx, rdx
       je       SHORT G_M55981_IG05
						;; bbWeight=1    PerfScore 7.00
G_M55981_IG03:
       mov      esi, dword ptr [rdx+8]
       lea      rbp, bword ptr [rdi+16]
       mov      rcx, rbp
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       xor      ecx, ecx
       mov      dword ptr [rbp+8], ecx
       mov      dword ptr [rbp+12], esi
       mov      rcx, rbx
       mov      rdx, rdi
       mov      r11, 0xD1FFAB1E
       call     [ISerializer`1:Parse(IInputBuffer):__Canon:this]
       nop      
						;; bbWeight=1    PerfScore 10.00
G_M55981_IG04:
       add      rsp, 40
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 3.25
G_M55981_IG05:
       mov      ecx, 2
       call     ThrowHelper:ThrowArgumentNullException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 117, prolog size 8, PerfScore 36.45, (MethodHash=d4b22552) for method StructVectorClone:Parse():this
; ============================================================

; Assembly listing for method ArrayInputBuffer:.ctor(ref):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T02] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  4,  4   )     ref  ->  rdx         class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V04 tmp2         [V04    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V05 tmp3         [V05,T03] (  3,  3   )     ref  ->  rdx         V03._array(offs=0x00) P-INDEP "field V03._array (fldOffset=0x0)"
;* V06 tmp4         [V06,T05] (  0,  0   )     int  ->  zero-ref    V03._offset(offs=0x08) P-INDEP "field V03._offset (fldOffset=0x8)"
;  V07 tmp5         [V07,T06] (  2,  2   )     int  ->  rsi         V03._count(offs=0x0c) P-INDEP "field V03._count (fldOffset=0xc)"
;  V08 tmp6         [V08,T04] (  2,  2   )     ref  ->  rdx         V04._array(offs=0x00) P-INDEP "field V04._array (fldOffset=0x0)"
;* V09 tmp7         [V09,T08] (  0,  0   )     int  ->  zero-ref    V04._offset(offs=0x08) P-INDEP "field V04._offset (fldOffset=0x8)"
;  V10 tmp8         [V10,T07] (  2,  2   )     int  ->  rsi         V04._count(offs=0x0c) P-INDEP "field V04._count (fldOffset=0xc)"
;  V11 tmp9         [V11,T00] (  4,  8   )   byref  ->  rdi         "BlockOp address local"
;
; Lcl frame size = 40

G_M11623_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
						;; bbWeight=1    PerfScore 2.25
G_M11623_IG02:
       test     rdx, rdx
       je       SHORT G_M11623_IG05
						;; bbWeight=1    PerfScore 1.25
G_M11623_IG03:
       mov      esi, dword ptr [rdx+8]
       lea      rdi, bword ptr [rcx+16]
       mov      rcx, rdi
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       xor      ecx, ecx
       mov      dword ptr [rdi+8], ecx
       mov      dword ptr [rdi+12], esi
						;; bbWeight=1    PerfScore 6.00
G_M11623_IG04:
       add      rsp, 40
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.25
G_M11623_IG05:
       mov      ecx, 2
       call     ThrowHelper:ThrowArgumentNullException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 52, prolog size 6, PerfScore 16.95, (MethodHash=1a06d298) for method ArrayInputBuffer:.ctor(ref):this
; ============================================================

; Assembly listing for method ArraySegment`1:.ctor(ref):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  5,  5   )   byref  ->  rsi         this
;  V01 arg1         [V01,T01] (  5,  5   )     ref  ->  rdi         class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 40

G_M13571_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
       mov      rsi, rcx
       mov      rdi, rdx
						;; bbWeight=1    PerfScore 2.75
G_M13571_IG02:
       test     rdi, rdi
       je       SHORT G_M13571_IG05
						;; bbWeight=1    PerfScore 1.25
G_M13571_IG03:
       mov      rcx, rsi
       mov      rdx, rdi
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       xor      ecx, ecx
       mov      dword ptr [rsi+8], ecx
       mov      ecx, dword ptr [rdi+8]
       mov      dword ptr [rsi+12], ecx
						;; bbWeight=1    PerfScore 5.75
G_M13571_IG04:
       add      rsp, 40
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.25
G_M13571_IG05:
       mov      ecx, 2
       call     ThrowHelper:ThrowArgumentNullException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 57, prolog size 6, PerfScore 17.70, (MethodHash=7482cafc) for method ArraySegment`1:.ctor(ref):this
; ============================================================

; Assembly listing for method ArrayInputBuffer:.ctor(ArraySegment`1):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T01] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T00] (  3,  6   )   byref  ->  rdx        
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )     ref  ->  zero-ref    V06._array(offs=0x00) P-INDEP "field V01._array (fldOffset=0x0)"
;* V04 tmp2         [V04    ] (  0,  0   )     int  ->  zero-ref    V06._offset(offs=0x08) P-INDEP "field V01._offset (fldOffset=0x8)"
;* V05 tmp3         [V05    ] (  0,  0   )     int  ->  zero-ref    V06._count(offs=0x0c) P-INDEP "field V01._count (fldOffset=0xc)"
;* V06 tmp4         [V06    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 0

G_M18685_IG01:
       push     rdi
       push     rsi
						;; bbWeight=1    PerfScore 2.00
G_M18685_IG02:
       lea      rdi, bword ptr [rcx+16]
       mov      rsi, rdx
       call     CORINFO_HELP_ASSIGN_BYREF
       movsq    
						;; bbWeight=1    PerfScore 2.75
G_M18685_IG03:
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.00

; Total bytes of code 19, prolog size 2, PerfScore 8.65, (MethodHash=6a28b702) for method ArrayInputBuffer:.ctor(ArraySegment`1):this
; ============================================================

; Assembly listing for method GeneratedSerializerWrapper`1:Parse(IInputBuffer):__Canon:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T01] (  5,  5   )     ref  ->  rdi         this class-hnd
;  V01 arg1         [V01,T00] (  7,  7   )     ref  ->  rsi         class-hnd
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T03] (  2,  4   )     ref  ->  rcx         class-hnd "dup spill"
;* V04 tmp2         [V04,T13] (  0,  0   )     ref  ->  zero-ref   
;  V05 tmp3         [V05,T08] (  3,  2.50)     ref  ->  rcx        
;  V06 tmp4         [V06,T10] (  2,  2   )     ref  ->  rax         class-hnd "dup spill"
;* V07 tmp5         [V07,T14] (  0,  0   )     ref  ->  zero-ref   
;  V08 tmp6         [V08,T11] (  3,  1.50)     ref  ->  rax        
;* V09 tmp7         [V09,T12] (  0,  0   )     ref  ->  zero-ref   
;  V10 tmp8         [V10,T07] (  4,  2.50)     ref  ->  rdx        
;  V11 tmp9         [V11,T02] (  3,  4.50)    long  ->  rcx         "impRuntimeLookup slot"
;  V12 tmp10        [V12,T06] (  3,  3   )    long  ->   r8         "spilling Runtime Lookup tree"
;  V13 tmp11        [V13,T04] (  2,  4   )    long  ->  rax         "VirtualCall through function pointer"
;  V14 tmp12        [V14,T15] (  3,  0   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V15 tmp13        [V15,T16] (  3,  0   )     ref  ->  rsi         class-hnd exact "NewObj constructor temp"
;  V16 tmp14        [V16,T17] (  2,  0   )     ref  ->  rdx         "argument with side effect"
;  V17 tmp15        [V17,T18] (  2,  0   )     ref  ->  rdx         "argument with side effect"
;  V18 cse0         [V18,T09] (  3,  2.25)    long  ->   r8         "CSE - aggressive"
;  V19 rat0         [V19,T05] (  3,  3   )     ref  ->  rax         "delegate invoke call"
;
; Lcl frame size = 40

G_M43145_IG01:
       push     rdi
       push     rsi
       sub      rsp, 40
       mov      qword ptr [rsp+20H], rcx
       mov      rdi, rcx
       mov      rsi, rdx
						;; bbWeight=1    PerfScore 3.75
G_M43145_IG02:
       mov      rcx, rsi
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:get_Length():int:this]
       cmp      eax, 0xD1FFAB1E
       jge      G_M43145_IG13
						;; bbWeight=1    PerfScore 4.75
G_M43145_IG03:
       mov      rcx, rsi
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:get_Length():int:this]
       cmp      eax, 8
       jle      G_M43145_IG14
						;; bbWeight=1    PerfScore 4.75
G_M43145_IG04:
       mov      rcx, gword ptr [rdi+32]
       test     rcx, rcx
       jne      SHORT G_M43145_IG06
						;; bbWeight=1    PerfScore 3.25
G_M43145_IG05:
       xor      rdx, rdx
       jmp      SHORT G_M43145_IG08
						;; bbWeight=0.50 PerfScore 1.13
G_M43145_IG06:
       mov      rax, gword ptr [rcx+8]
       test     rax, rax
       jne      SHORT G_M43145_IG07
       xor      rdx, rdx
       jmp      SHORT G_M43145_IG08
						;; bbWeight=0.50 PerfScore 2.75
G_M43145_IG07:
       mov      rcx, gword ptr [rax+8]
       call     gword ptr [rax+24]Func`1:Invoke():__Canon:this
       mov      rdx, rax
						;; bbWeight=0.50 PerfScore 2.63
G_M43145_IG08:
       mov      rcx, rsi
       mov      r11, 0xD1FFAB1E
       call     [IInputBuffer:set_SharedStringReader(ISharedStringReader):this]
       mov      rcx, qword ptr [rdi]
       mov      rdx, qword ptr [rcx+48]
       mov      rdx, qword ptr [rdx]
       mov      r8, qword ptr [rdx+24]
       test     r8, r8
       je       SHORT G_M43145_IG10
						;; bbWeight=1    PerfScore 12.75
G_M43145_IG09:
       jmp      SHORT G_M43145_IG11
						;; bbWeight=0.25 PerfScore 0.50
G_M43145_IG10:
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_CLASS
       mov      r8, rax
						;; bbWeight=0.25 PerfScore 0.38
G_M43145_IG11:
       mov      rcx, rsi
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      rdx, gword ptr [rdi+8]
       mov      rcx, rsi
       xor      r8d, r8d
						;; bbWeight=1    PerfScore 4.00
G_M43145_IG12:
       add      rsp, 40
       pop      rsi
       pop      rdi
       rex.jmp  rax
						;; bbWeight=1    PerfScore 3.25
G_M43145_IG13:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rsi, rax
       mov      ecx, 829
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      rdx, rax
       mov      rcx, rsi
       call     ArgumentOutOfRangeException:.ctor(String):this
       mov      rcx, rsi
       call     CORINFO_HELP_THROW
						;; bbWeight=0    PerfScore 0.00
G_M43145_IG14:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rsi, rax
       mov      ecx, 891
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_STRCNS
       mov      rdx, rax
       mov      rcx, rsi
       call     ArgumentException:.ctor(String):this
       mov      rcx, rsi
       call     CORINFO_HELP_THROW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 321, prolog size 11, PerfScore 75.98, (MethodHash=4f2b5776) for method GeneratedSerializerWrapper`1:Parse(IInputBuffer):__Canon:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:set_SharedStringReader(ISharedStringReader):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  3,  3   )     ref  ->  rdx         class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M20806_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M20806_IG02:
       lea      rcx, bword ptr [rcx+8]
       call     CORINFO_HELP_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 1.75
G_M20806_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 11, prolog size 0, PerfScore 3.85, (MethodHash=dbdfaeb9) for method ArrayInputBuffer:set_SharedStringReader(ISharedStringReader):this
; ============================================================

; Assembly listing for method ArrayInputBuffer:InvokeParse(IGeneratedSerializer`1,int):__Canon:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; fully interruptible
; Final local variable assignments
;
;  V00 this         [V00,T01] (  3,  3   )     ref  ->  rdi         this class-hnd
;  V01 TypeCtx      [V01,T00] (  6,  4.50)    long  ->  rsi        
;  V02 arg1         [V02,T02] (  4,  4   )     ref  ->  rbx         class-hnd
;  V03 arg2         [V03,T03] (  3,  3   )     int  ->  rbp        
;  V04 OutArgs      [V04    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V05 tmp1         [V05    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V06 tmp2         [V06,T05] (  3,  3   )    long  ->  r15         "spilling Runtime Lookup tree"
;  V07 tmp3         [V07,T06] (  3,  3   )    long  ->   r8         "spilling Runtime Lookup tree"
;  V08 tmp4         [V08,T04] (  2,  4   )    long  ->  rax         "VirtualCall through function pointer"
;* V09 tmp5         [V09,T10] (  0,  0   )     ref  ->  zero-ref    V05.buffer(offs=0x00) P-INDEP "field V05.buffer (fldOffset=0x0)"
;  V10 cse0         [V10,T08] (  3,  2.25)    long  ->  r15         "CSE - aggressive"
;  V11 cse1         [V11,T09] (  3,  2.25)    long  ->   r8         "CSE - aggressive"
;  V12 cse2         [V12,T07] (  3,  3   )    long  ->  r14         "CSE - aggressive"
;
; Lcl frame size = 40

G_M53612_IG01:
       push     r15
       push     r14
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 40
       mov      qword ptr [rsp+20H], rdx
       mov      rdi, rcx
       mov      rsi, rdx
       mov      rbx, r8
       mov      ebp, r9d
						;; bbWeight=1    PerfScore 8.25
G_M53612_IG02:
       mov      r14, qword ptr [rsi+16]
       mov      r15, qword ptr [r14+16]
       test     r15, r15
       je       SHORT G_M53612_IG04
						;; bbWeight=1    PerfScore 5.25
G_M53612_IG03:
       jmp      SHORT G_M53612_IG05
						;; bbWeight=0.25 PerfScore 0.50
G_M53612_IG04:
       mov      rcx, rsi
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      r15, rax
						;; bbWeight=0.25 PerfScore 0.44
G_M53612_IG05:
       mov      r8, qword ptr [r14+24]
       test     r8, r8
       je       SHORT G_M53612_IG07
						;; bbWeight=1    PerfScore 3.25
G_M53612_IG06:
       jmp      SHORT G_M53612_IG08
						;; bbWeight=0.25 PerfScore 0.50
G_M53612_IG07:
       mov      rcx, rsi
       mov      rdx, 0xD1FFAB1E
       call     CORINFO_HELP_RUNTIMEHANDLE_METHOD
       mov      r8, rax
						;; bbWeight=0.25 PerfScore 0.44
G_M53612_IG08:
       mov      rcx, rbx
       mov      rdx, r15
       call     CORINFO_HELP_VIRTUAL_FUNC_PTR
       mov      rcx, rbx
       mov      rdx, rdi
       mov      r8d, ebp
						;; bbWeight=1    PerfScore 2.25
G_M53612_IG09:
       add      rsp, 40
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r14
       pop      r15
       rex.jmp  rax
						;; bbWeight=1    PerfScore 5.25

; Total bytes of code 132, prolog size 29, PerfScore 39.33, (MethodHash=51f02e93) for method ArrayInputBuffer:InvokeParse(IGeneratedSerializer`1,int):__Canon:this
; ============================================================

; Assembly listing for method Wrapper:.ctor(ArrayInputBuffer):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T00] (  3,  3   )   byref  ->  rcx         this
;  V01 arg1         [V01,T01] (  3,  3   )     ref  ->  rdx         class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M48101_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M48101_IG02:
       call     CORINFO_HELP_CHECKED_ASSIGN_REF
       nop      
						;; bbWeight=1    PerfScore 1.25
G_M48101_IG03:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 7, prolog size 0, PerfScore 2.95, (MethodHash=a7f4441a) for method Wrapper:.ctor(ArrayInputBuffer):this
; ============================================================

; Assembly listing for method GeneratedSerializer:Parse(Wrapper,int):ScalarTable:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;* V01 arg1         [V01    ] (  0,  0   )  struct ( 8) zero-ref   
;  V02 arg2         [V02,T00] (  4,  4   )     int  ->  rsi        
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )  struct ( 8) zero-ref    "Inlining Arg"
;  V05 tmp2         [V05,T01] (  3,  6   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V06 tmp3         [V06,T02] (  2,  2   )     ref  ->  rdx         V01.buffer(offs=0x00) P-INDEP "field V01.buffer (fldOffset=0x0)"
;  V07 tmp4         [V07,T04] (  3,  3   )     ref  ->  rdi         V04.buffer(offs=0x00) P-INDEP "field V04.buffer (fldOffset=0x0)"
;  V08 tmp5         [V08,T03] (  2,  4   )     int  ->   r8         "argument with side effect"
;
; Lcl frame size = 32

G_M63173_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
       mov      esi, r8d
						;; bbWeight=1    PerfScore 3.50
G_M63173_IG02:
       mov      rdi, rdx
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rbx, rax
       mov      rcx, rdi
       mov      edx, esi
       call     InputBufferExtensions:ReadUOffset(Wrapper,int):int
       mov      r8d, eax
       add      r8d, esi
       jo       SHORT G_M63173_IG04
       mov      rdx, rdi
       mov      rcx, rbx
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
       mov      rax, rbx
						;; bbWeight=1    PerfScore 6.50
G_M63173_IG03:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.75
G_M63173_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 77, prolog size 7, PerfScore 20.45, (MethodHash=6429093a) for method GeneratedSerializer:Parse(Wrapper,int):ScalarTable:this
; ============================================================

; Assembly listing for method GeneratedSerializer:Read_55bc853cd3904128b3329b38587280d1(Wrapper,int):ScalarTable
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref   
;  V01 arg1         [V01,T00] (  4,  4   )     int  ->  rsi        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T01] (  3,  6   )     ref  ->  rbx         class-hnd exact "NewObj constructor temp"
;  V04 tmp2         [V04,T02] (  3,  3   )     ref  ->  rdi         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V05 tmp3         [V05,T03] (  2,  4   )     int  ->   r8         "argument with side effect"
;
; Lcl frame size = 32

G_M43993_IG01:
       push     rdi
       push     rsi
       push     rbx
       sub      rsp, 32
       mov      rdi, rcx
       mov      esi, edx
						;; bbWeight=1    PerfScore 3.75
G_M43993_IG02:
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      rbx, rax
       mov      rcx, rdi
       mov      edx, esi
       call     InputBufferExtensions:ReadUOffset(Wrapper,int):int
       mov      r8d, eax
       add      r8d, esi
       jo       SHORT G_M43993_IG04
       mov      rdx, rdi
       mov      rcx, rbx
       call     tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
       mov      rax, rbx
						;; bbWeight=1    PerfScore 6.25
G_M43993_IG03:
       add      rsp, 32
       pop      rbx
       pop      rsi
       pop      rdi
       ret      
						;; bbWeight=1    PerfScore 2.75
G_M43993_IG04:
       call     CORINFO_HELP_OVERFLOW
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 76, prolog size 7, PerfScore 20.35, (MethodHash=ef675426) for method GeneratedSerializer:Read_55bc853cd3904128b3329b38587280d1(Wrapper,int):ScalarTable
; ============================================================

; Assembly listing for method InputBufferExtensions:ReadUOffset(Wrapper,int):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 arg0         [V00    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;  V02 loc0         [V02,T07] (  4,  3.50)     int  ->  rsi        
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V05 tmp2         [V05    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V06 tmp3         [V06    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V07 tmp4         [V07    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V08 tmp5         [V08    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V09 tmp6         [V09,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V10 tmp7         [V10,T03] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V11 tmp8         [V11    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V12 tmp9         [V12,T04] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V13 tmp10        [V13    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V14 tmp11        [V14,T11] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V15 tmp12        [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V16 tmp13        [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp14        [V17    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V18 tmp15        [V18    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V19 tmp16        [V19,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V20 tmp17        [V20    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V21 tmp18        [V21    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V22 tmp19        [V22    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V23 tmp20        [V23    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V24 tmp21        [V24    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V25 tmp22        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V26 tmp23        [V26    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V27 tmp24        [V27,T21] (  2,  2   )     int  ->  rsi         "Inline stloc first use temp"
;* V28 tmp25        [V28    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V29 tmp26        [V29    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V30 tmp27        [V30    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V31 tmp28        [V31    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V32 tmp29        [V32,T05] (  2,  2   )     ref  ->  rcx         V00.buffer(offs=0x00) P-INDEP "field V00.buffer (fldOffset=0x0)"
;  V33 tmp30        [V33,T12] (  2,  2   )   byref  ->   r9         V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;  V34 tmp31        [V34,T08] (  3,  3   )     int  ->  r10         V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;* V35 tmp32        [V35    ] (  0,  0   )   byref  ->  zero-ref    V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V36 tmp33        [V36    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;  V37 tmp34        [V37,T13] (  2,  2   )   byref  ->  rcx         V07._pointer(offs=0x00) P-INDEP "field V07._pointer (fldOffset=0x0)"
;* V38 tmp35        [V38    ] (  0,  0   )     int  ->  zero-ref    V07._length(offs=0x08) P-INDEP "field V07._length (fldOffset=0x8)"
;  V39 tmp36        [V39,T14] (  2,  2   )     ref  ->  rax         V08._array(offs=0x00) P-INDEP "field V08._array (fldOffset=0x0)"
;  V40 tmp37        [V40,T22] (  2,  2   )     int  ->   r8         V08._offset(offs=0x08) P-INDEP "field V08._offset (fldOffset=0x8)"
;  V41 tmp38        [V41,T23] (  2,  2   )     int  ->  rcx         V08._count(offs=0x0c) P-INDEP "field V08._count (fldOffset=0xc)"
;  V42 tmp39        [V42,T09] (  3,  2   )   byref  ->   r9         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;  V43 tmp40        [V43,T10] (  3,  2   )     int  ->  r10         V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V44 tmp41        [V44,T24] (  2,  1   )   byref  ->   r9         V13._value(offs=0x00) P-INDEP "field V13._value (fldOffset=0x0)"
;* V45 tmp42        [V45    ] (  0,  0   )   byref  ->  zero-ref    V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;* V46 tmp43        [V46    ] (  0,  0   )     int  ->  zero-ref    V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V47 tmp44        [V47,T15] (  2,  2   )   byref  ->  rcx         V18._value(offs=0x00) P-INDEP "field V18._value (fldOffset=0x0)"
;* V48 tmp45        [V48    ] (  0,  0   )   byref  ->  zero-ref    V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V49 tmp46        [V49    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V50 tmp47        [V50,T16] (  2,  2   )   byref  ->  rcx         V21._pointer(offs=0x00) P-INDEP "field V21._pointer (fldOffset=0x0)"
;* V51 tmp48        [V51    ] (  0,  0   )     int  ->  zero-ref    V21._length(offs=0x08) P-INDEP "field V21._length (fldOffset=0x8)"
;  V52 tmp49        [V52,T17] (  2,  2   )   byref  ->  rcx         V23._value(offs=0x00) P-INDEP "field V23._value (fldOffset=0x0)"
;  V53 tmp50        [V53,T18] (  2,  2   )   byref  ->  rcx         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V54 tmp51        [V54    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V55 tmp52        [V55,T19] (  2,  2   )   byref  ->  rcx         V26._pointer(offs=0x00) P-INDEP "field V26._pointer (fldOffset=0x0)"
;* V56 tmp53        [V56    ] (  0,  0   )     int  ->  zero-ref    V26._length(offs=0x08) P-INDEP "field V26._length (fldOffset=0x8)"
;  V57 tmp54        [V57,T20] (  2,  2   )   byref  ->  rcx         V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V58 tmp55        [V58    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;* V59 tmp56        [V59    ] (  0,  0   )   byref  ->  zero-ref    V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V60 tmp57        [V60    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V61 tmp58        [V61,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 32

G_M62354_IG01:
       push     rsi
       sub      rsp, 32
						;; bbWeight=1    PerfScore 1.25
G_M62354_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M62354_IG05
						;; bbWeight=1    PerfScore 7.50
G_M62354_IG03:
       or       r8d, ecx
       jne      SHORT G_M62354_IG14
						;; bbWeight=0.25 PerfScore 0.31
G_M62354_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M62354_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M62354_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M62354_IG14
						;; bbWeight=0.25 PerfScore 1.00
G_M62354_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M62354_IG07:
       cmp      edx, r10d
       ja       SHORT G_M62354_IG14
						;; bbWeight=1    PerfScore 1.25
G_M62354_IG08:
       sub      r10d, edx
       movsxd   rcx, edx
       add      rcx, r9
       cmp      r10d, 4
       jl       SHORT G_M62354_IG15
						;; bbWeight=1    PerfScore 2.00
G_M62354_IG09:
       mov      esi, dword ptr [rcx]
       cmp      esi, 4
       jae      SHORT G_M62354_IG11
						;; bbWeight=1    PerfScore 3.25
G_M62354_IG10:
       mov      ecx, esi
       call     InputBufferExtensions:ThrowUOffsetLessThanMinimumException(int)
						;; bbWeight=0.50 PerfScore 0.63
G_M62354_IG11:
       test     esi, esi
       jl       SHORT G_M62354_IG13
       mov      eax, esi
						;; bbWeight=1    PerfScore 1.50
G_M62354_IG12:
       add      rsp, 32
       pop      rsi
       ret      
						;; bbWeight=1    PerfScore 1.75
G_M62354_IG13:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M62354_IG14:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M62354_IG15:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 136, prolog size 5, PerfScore 35.79, (MethodHash=e0d90c6d) for method InputBufferExtensions:ReadUOffset(Wrapper,int):int
; ============================================================

; Assembly listing for method Wrapper:ReadUInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )   byref  ->  rcx         this
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;  V03 tmp1         [V03,T06] (  2,  4   )     ref  ->  rax         class-hnd "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp4         [V06    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V07 tmp5         [V07    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V08 tmp6         [V08,T02] (  4,  5.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V09 tmp7         [V09,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V10 tmp8         [V10    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V11 tmp9         [V11,T05] (  4,  4   )     int  ->  rax         "Inlining Arg"
;* V12 tmp10        [V12    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V13 tmp11        [V13,T11] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;* V14 tmp12        [V14    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V15 tmp13        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp14        [V16    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V17 tmp15        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp16        [V18,T07] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V19 tmp17        [V19    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V20 tmp18        [V20    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V21 tmp19        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp20        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V23 tmp21        [V23    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V24 tmp22        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V25 tmp23        [V25    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V26 tmp24        [V26,T21] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V27 tmp25        [V27    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V28 tmp26        [V28    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V29 tmp27        [V29    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V30 tmp28        [V30    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V31 tmp29        [V31,T12] (  2,  2   )   byref  ->   r9         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;  V32 tmp30        [V32,T08] (  3,  3   )     int  ->  r10         V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V33 tmp31        [V33    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V34 tmp32        [V34    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V35 tmp33        [V35,T13] (  2,  2   )   byref  ->  rax         V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V36 tmp34        [V36    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;  V37 tmp35        [V37,T14] (  2,  2   )     ref  ->  rcx         V07._array(offs=0x00) P-INDEP "field V07._array (fldOffset=0x0)"
;  V38 tmp36        [V38,T22] (  2,  2   )     int  ->   r8         V07._offset(offs=0x08) P-INDEP "field V07._offset (fldOffset=0x8)"
;  V39 tmp37        [V39,T23] (  2,  2   )     int  ->  rax         V07._count(offs=0x0c) P-INDEP "field V07._count (fldOffset=0xc)"
;  V40 tmp38        [V40,T09] (  3,  2   )   byref  ->   r9         V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;  V41 tmp39        [V41,T10] (  3,  2   )     int  ->  r10         V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V42 tmp40        [V42,T24] (  2,  1   )   byref  ->   r9         V12._value(offs=0x00) P-INDEP "field V12._value (fldOffset=0x0)"
;* V43 tmp41        [V43    ] (  0,  0   )   byref  ->  zero-ref    V14._pointer(offs=0x00) P-INDEP "field V14._pointer (fldOffset=0x0)"
;* V44 tmp42        [V44    ] (  0,  0   )     int  ->  zero-ref    V14._length(offs=0x08) P-INDEP "field V14._length (fldOffset=0x8)"
;  V45 tmp43        [V45,T15] (  2,  2   )   byref  ->  rax         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V46 tmp44        [V46    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V47 tmp45        [V47    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V48 tmp46        [V48,T16] (  2,  2   )   byref  ->  rax         V20._pointer(offs=0x00) P-INDEP "field V20._pointer (fldOffset=0x0)"
;* V49 tmp47        [V49    ] (  0,  0   )     int  ->  zero-ref    V20._length(offs=0x08) P-INDEP "field V20._length (fldOffset=0x8)"
;  V50 tmp48        [V50,T17] (  2,  2   )   byref  ->  rax         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;  V51 tmp49        [V51,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V52 tmp50        [V52    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V53 tmp51        [V53,T19] (  2,  2   )   byref  ->  rax         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V54 tmp52        [V54    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V55 tmp53        [V55,T20] (  2,  2   )   byref  ->  rax         V27._pointer(offs=0x00) P-INDEP "field V27._pointer (fldOffset=0x0)"
;* V56 tmp54        [V56    ] (  0,  0   )     int  ->  zero-ref    V27._length(offs=0x08) P-INDEP "field V27._length (fldOffset=0x8)"
;* V57 tmp55        [V57    ] (  0,  0   )   byref  ->  zero-ref    V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V58 tmp56        [V58    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V59 tmp57        [V59,T00] (  4,  8   )   byref  ->  rax         "BlockOp address local"
;
; Lcl frame size = 40

G_M64320_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M64320_IG02:
       mov      rax, gword ptr [rcx]
       add      rax, 16
       mov      rcx, gword ptr [rax]
       mov      r8d, dword ptr [rax+8]
       mov      eax, dword ptr [rax+12]
       test     rcx, rcx
       jne      SHORT G_M64320_IG05
						;; bbWeight=1    PerfScore 9.50
G_M64320_IG03:
       or       r8d, eax
       jne      SHORT G_M64320_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M64320_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M64320_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M64320_IG05:
       mov      r9d, r8d
       mov      r10d, eax
       add      r9, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      r9, r10
       ja       SHORT G_M64320_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M64320_IG06:
       add      rcx, 16
       movsxd   r9, r8d
       add      r9, rcx
       mov      r10d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M64320_IG07:
       cmp      edx, r10d
       ja       SHORT G_M64320_IG11
						;; bbWeight=1    PerfScore 1.25
G_M64320_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M64320_IG12
						;; bbWeight=1    PerfScore 2.00
G_M64320_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M64320_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M64320_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M64320_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 114, prolog size 4, PerfScore 30.71, (MethodHash=508304bf) for method Wrapper:ReadUInt(int):int:this
; ============================================================

; Assembly listing for method ArrayInputBuffer:ReadUInt(int):int:this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  3,  3   )     ref  ->  rcx         this class-hnd
;  V01 arg1         [V01,T01] (  5,  5   )     int  ->  rdx        
;* V02 loc0         [V02    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op
;  V03 OutArgs      [V03    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V04 tmp1         [V04    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V05 tmp2         [V05    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V06 tmp3         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V07 tmp4         [V07,T02] (  4,  5.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V08 tmp5         [V08,T04] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V09 tmp6         [V09    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V10 tmp7         [V10,T05] (  4,  4   )     int  ->  rcx         "Inlining Arg"
;* V11 tmp8         [V11    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V12 tmp9         [V12,T10] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V13 tmp10        [V13    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V14 tmp11        [V14    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V15 tmp12        [V15    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V16 tmp13        [V16    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V17 tmp14        [V17,T06] (  2,  4   )     int  ->  r10         "Inlining Arg"
;* V18 tmp15        [V18    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V19 tmp16        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp17        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp18        [V21    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V22 tmp19        [V22    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V23 tmp20        [V23    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V24 tmp21        [V24    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V25 tmp22        [V25,T20] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V26 tmp23        [V26    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V27 tmp24        [V27    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V28 tmp25        [V28    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V29 tmp26        [V29    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V30 tmp27        [V30,T11] (  2,  2   )   byref  ->   r9         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V31 tmp28        [V31,T07] (  3,  3   )     int  ->  r10         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;* V32 tmp29        [V32    ] (  0,  0   )   byref  ->  zero-ref    V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V33 tmp30        [V33    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;  V34 tmp31        [V34,T12] (  2,  2   )   byref  ->  rax         V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V35 tmp32        [V35    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;  V36 tmp33        [V36,T13] (  2,  2   )     ref  ->  rax         V06._array(offs=0x00) P-INDEP "field V06._array (fldOffset=0x0)"
;  V37 tmp34        [V37,T21] (  2,  2   )     int  ->   r8         V06._offset(offs=0x08) P-INDEP "field V06._offset (fldOffset=0x8)"
;  V38 tmp35        [V38,T22] (  2,  2   )     int  ->  rcx         V06._count(offs=0x0c) P-INDEP "field V06._count (fldOffset=0xc)"
;  V39 tmp36        [V39,T08] (  3,  2   )   byref  ->   r9         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V40 tmp37        [V40,T09] (  3,  2   )     int  ->  r10         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;  V41 tmp38        [V41,T23] (  2,  1   )   byref  ->   r9         V11._value(offs=0x00) P-INDEP "field V11._value (fldOffset=0x0)"
;* V42 tmp39        [V42    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V13._pointer (fldOffset=0x0)"
;* V43 tmp40        [V43    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V13._length (fldOffset=0x8)"
;  V44 tmp41        [V44,T14] (  2,  2   )   byref  ->  rax         V16._value(offs=0x00) P-INDEP "field V16._value (fldOffset=0x0)"
;* V45 tmp42        [V45    ] (  0,  0   )   byref  ->  zero-ref    V18._pointer(offs=0x00) P-INDEP "field V18._pointer (fldOffset=0x0)"
;* V46 tmp43        [V46    ] (  0,  0   )     int  ->  zero-ref    V18._length(offs=0x08) P-INDEP "field V18._length (fldOffset=0x8)"
;  V47 tmp44        [V47,T15] (  2,  2   )   byref  ->  rax         V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V48 tmp45        [V48    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V49 tmp46        [V49,T16] (  2,  2   )   byref  ->  rax         V21._value(offs=0x00) P-INDEP "field V21._value (fldOffset=0x0)"
;  V50 tmp47        [V50,T17] (  2,  2   )   byref  ->  rax         V23._pointer(offs=0x00) P-INDEP "field V23._pointer (fldOffset=0x0)"
;* V51 tmp48        [V51    ] (  0,  0   )     int  ->  zero-ref    V23._length(offs=0x08) P-INDEP "field V23._length (fldOffset=0x8)"
;  V52 tmp49        [V52,T18] (  2,  2   )   byref  ->  rax         V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V53 tmp50        [V53    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V54 tmp51        [V54,T19] (  2,  2   )   byref  ->  rax         V26._pointer(offs=0x00) P-INDEP "field V26._pointer (fldOffset=0x0)"
;* V55 tmp52        [V55    ] (  0,  0   )     int  ->  zero-ref    V26._length(offs=0x08) P-INDEP "field V26._length (fldOffset=0x8)"
;* V56 tmp53        [V56    ] (  0,  0   )   byref  ->  zero-ref    V28._pointer(offs=0x00) P-INDEP "field V28._pointer (fldOffset=0x0)"
;* V57 tmp54        [V57    ] (  0,  0   )     int  ->  zero-ref    V28._length(offs=0x08) P-INDEP "field V28._length (fldOffset=0x8)"
;  V58 tmp55        [V58,T00] (  4,  8   )   byref  ->  rcx         "BlockOp address local"
;
; Lcl frame size = 40

G_M18428_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M18428_IG02:
       add      rcx, 16
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M18428_IG05
						;; bbWeight=1    PerfScore 7.50
G_M18428_IG03:
       or       r8d, ecx
       jne      SHORT G_M18428_IG11
						;; bbWeight=0.25 PerfScore 0.31
G_M18428_IG04:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M18428_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M18428_IG05:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       SHORT G_M18428_IG11
						;; bbWeight=0.25 PerfScore 1.00
G_M18428_IG06:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M18428_IG07:
       cmp      edx, r10d
       ja       SHORT G_M18428_IG11
						;; bbWeight=1    PerfScore 1.25
G_M18428_IG08:
       sub      r10d, edx
       movsxd   rax, edx
       add      rax, r9
       cmp      r10d, 4
       jl       SHORT G_M18428_IG12
						;; bbWeight=1    PerfScore 2.00
G_M18428_IG09:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M18428_IG10:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M18428_IG11:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M18428_IG12:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 111, prolog size 4, PerfScore 28.41, (MethodHash=954cb803) for method ArrayInputBuffer:ReadUInt(int):int:this
; ============================================================

; Assembly listing for method ScalarSpanReader:ReadUInt(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V03 tmp2         [V03,T03] (  2,  2   )     int  ->  rax         "Inline stloc first use temp"
;* V04 tmp3         [V04    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V05 tmp4         [V05    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V06 tmp5         [V06    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V07 tmp6         [V07    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V08 tmp7         [V08    ] (  0,  0   )   byref  ->  zero-ref    V16._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V09 tmp8         [V09    ] (  0,  0   )     int  ->  zero-ref    V16._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V10 tmp9         [V10,T01] (  2,  2   )   byref  ->  rax         V02._pointer(offs=0x00) P-INDEP "field V02._pointer (fldOffset=0x0)"
;  V11 tmp10        [V11,T04] (  2,  2   )     int  ->  rcx         V02._length(offs=0x08) P-INDEP "field V02._length (fldOffset=0x8)"
;  V12 tmp11        [V12,T02] (  2,  2   )   byref  ->  rax         V04._pointer(offs=0x00) P-INDEP "field V04._pointer (fldOffset=0x0)"
;* V13 tmp12        [V13    ] (  0,  0   )     int  ->  zero-ref    V04._length(offs=0x08) P-INDEP "field V04._length (fldOffset=0x8)"
;* V14 tmp13        [V14    ] (  0,  0   )   byref  ->  zero-ref    V06._pointer(offs=0x00) P-INDEP "field V06._pointer (fldOffset=0x0)"
;* V15 tmp14        [V15    ] (  0,  0   )     int  ->  zero-ref    V06._length(offs=0x08) P-INDEP "field V06._length (fldOffset=0x8)"
;* V16 tmp15        [V16    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M30048_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M30048_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 4
       jl       SHORT G_M30048_IG05
						;; bbWeight=1    PerfScore 5.25
G_M30048_IG03:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M30048_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M30048_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 33, prolog size 4, PerfScore 12.05, (MethodHash=bf4b8a9f) for method ScalarSpanReader:ReadUInt(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method BinaryPrimitives:ReadUInt32LittleEndian(ReadOnlySpan`1):int
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 arg0         [V00,T00] (  4,  8   )   byref  ->  rcx        
;  V01 loc0         [V01,T02] (  2,  2   )     int  ->  rax        
;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V04 tmp2         [V04    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V05 tmp3         [V05    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V06 tmp4         [V06    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V07 tmp5         [V07    ] (  0,  0   )   byref  ->  zero-ref    V13._pointer(offs=0x00) P-INDEP "field V00._pointer (fldOffset=0x0)"
;* V08 tmp6         [V08    ] (  0,  0   )     int  ->  zero-ref    V13._length(offs=0x08) P-INDEP "field V00._length (fldOffset=0x8)"
;  V09 tmp7         [V09,T01] (  2,  2   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP "field V03._pointer (fldOffset=0x0)"
;  V10 tmp8         [V10,T03] (  2,  2   )     int  ->  rcx         V03._length(offs=0x08) P-INDEP "field V03._length (fldOffset=0x8)"
;* V11 tmp9         [V11    ] (  0,  0   )   byref  ->  zero-ref    V05._pointer(offs=0x00) P-INDEP "field V05._pointer (fldOffset=0x0)"
;* V12 tmp10        [V12    ] (  0,  0   )     int  ->  zero-ref    V05._length(offs=0x08) P-INDEP "field V05._length (fldOffset=0x8)"
;* V13 tmp11        [V13    ] (  0,  0   )  struct (16) zero-ref    "Promoted implicit byref"
;
; Lcl frame size = 40

G_M48926_IG01:
       sub      rsp, 40
						;; bbWeight=1    PerfScore 0.25
G_M48926_IG02:
       mov      rax, bword ptr [rcx]
       mov      ecx, dword ptr [rcx+8]
       cmp      ecx, 4
       jl       SHORT G_M48926_IG05
						;; bbWeight=1    PerfScore 5.25
G_M48926_IG03:
       mov      eax, dword ptr [rax]
						;; bbWeight=1    PerfScore 2.00
G_M48926_IG04:
       add      rsp, 40
       ret      
						;; bbWeight=1    PerfScore 1.25
G_M48926_IG05:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 33, prolog size 4, PerfScore 12.05, (MethodHash=9f5e40e1) for method BinaryPrimitives:ReadUInt32LittleEndian(ReadOnlySpan`1):int
; ============================================================

; Assembly listing for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;  V00 this         [V00,T03] (  6,  6   )     ref  ->  rbx         this class-hnd
;* V01 arg1         [V01    ] (  0,  0   )  struct ( 8) zero-ref   
;  V02 arg2         [V02,T00] ( 10,  8   )     int  ->  rsi        
;  V03 loc0         [V03,T01] (  8,  5.75)     int  ->  r14         ld-addr-op
;  V04 loc1         [V04,T08] (  5,  5   )     int  ->  r15         ld-addr-op
;  V05 OutArgs      [V05    ] (  1,  1   )  lclBlk (32) [rsp+0x00]   "OutgoingArgSpace"
;* V06 tmp1         [V06    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V07 tmp2         [V07,T11] (  4,  4   )  ushort  ->  r15         "Inline stloc first use temp"
;* V08 tmp3         [V08    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V09 tmp4         [V09    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V10 tmp5         [V10    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V11 tmp6         [V11    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V12 tmp7         [V12    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V13 tmp8         [V13,T05] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V14 tmp9         [V14,T12] (  4,  4   )     int  ->   r8         "impAppendStmt"
;* V15 tmp10        [V15    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V16 tmp11        [V16,T13] (  4,  4   )     int  ->   r9         "Inlining Arg"
;* V17 tmp12        [V17    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V18 tmp13        [V18,T58] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;* V19 tmp14        [V19    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V20 tmp15        [V20    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V21 tmp16        [V21    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V22 tmp17        [V22    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V23 tmp18        [V23,T20] (  2,  4   )     int  ->  r11         "Inlining Arg"
;* V24 tmp19        [V24    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V25 tmp20        [V25    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V26 tmp21        [V26    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V27 tmp22        [V27    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V28 tmp23        [V28    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V29 tmp24        [V29    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V30 tmp25        [V30    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V31 tmp26        [V31,T86] (  2,  2   )     int  ->  rdx         "Inline stloc first use temp"
;* V32 tmp27        [V32    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V33 tmp28        [V33    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V34 tmp29        [V34    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V35 tmp30        [V35    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V36 tmp31        [V36,T101] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V37 tmp32        [V37    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V38 tmp33        [V38    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V39 tmp34        [V39    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V40 tmp35        [V40    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V41 tmp36        [V41    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V42 tmp37        [V42,T06] (  4,  5.50)     ref  ->  rdx         class-hnd "impAppendStmt"
;  V43 tmp38        [V43,T14] (  4,  4   )     int  ->  rcx         "impAppendStmt"
;* V44 tmp39        [V44    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V45 tmp40        [V45,T15] (  4,  4   )     int  ->  rax         "Inlining Arg"
;* V46 tmp41        [V46    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V47 tmp42        [V47,T59] (  2,  2   )   byref  ->  rdx         "Inlining Arg"
;* V48 tmp43        [V48    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V49 tmp44        [V49    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V50 tmp45        [V50    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V51 tmp46        [V51    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V52 tmp47        [V52,T21] (  2,  4   )     int  ->   r9         "Inlining Arg"
;* V53 tmp48        [V53    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V54 tmp49        [V54    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V55 tmp50        [V55    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V56 tmp51        [V56    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V57 tmp52        [V57    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V58 tmp53        [V58    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V59 tmp54        [V59    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V60 tmp55        [V60,T87] (  2,  2   )  ushort  ->  r15         "Inline stloc first use temp"
;* V61 tmp56        [V61    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V62 tmp57        [V62    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V63 tmp58        [V63    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V64 tmp59        [V64    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V65 tmp60        [V65,T37] (  4,  2.50)     ref  ->  rdx         class-hnd "Inline return value spill temp"
;* V66 tmp61        [V66    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V67 tmp62        [V67    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V68 tmp63        [V68,T102] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;  V69 tmp64        [V69,T130] (  3,  1   )  ushort  ->  r12         "Inline stloc first use temp"
;  V70 tmp65        [V70,T166] (  2,  1   )     int  ->  r12         "Inline stloc first use temp"
;  V71 tmp66        [V71,T46] (  4,  2   )     int  ->  rdx         "Inlining Arg"
;* V72 tmp67        [V72    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V73 tmp68        [V73    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V74 tmp69        [V74    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V75 tmp70        [V75    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V76 tmp71        [V76    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V77 tmp72        [V77,T105] (  4,  1.74)     ref  ->  rax         class-hnd "impAppendStmt"
;  V78 tmp73        [V78,T120] (  4,  1.48)     int  ->   r8         "impAppendStmt"
;* V79 tmp74        [V79    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V80 tmp75        [V80,T121] (  4,  1.48)     int  ->  rcx         "Inlining Arg"
;* V81 tmp76        [V81    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V82 tmp77        [V82,T138] (  2,  1   )   byref  ->  rax         "Inlining Arg"
;* V83 tmp78        [V83    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V84 tmp79        [V84    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V85 tmp80        [V85    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V86 tmp81        [V86    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V87 tmp82        [V87,T167] (  2,  1   )     int  ->  r10         "Inlining Arg"
;* V88 tmp83        [V88    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V89 tmp84        [V89    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V90 tmp85        [V90    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V91 tmp86        [V91    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V92 tmp87        [V92    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V93 tmp88        [V93    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V94 tmp89        [V94    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V95 tmp90        [V95,T236] (  2,  0.50)  ushort  ->  r12         "Inline stloc first use temp"
;* V96 tmp91        [V96    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V97 tmp92        [V97    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V98 tmp93        [V98    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V99 tmp94        [V99    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V100 tmp95       [V100    ] (  0,  0   )  struct ( 8) zero-ref    "Inlining Arg"
;  V101 tmp96       [V101,T30] (  3,  3   )     ref  ->  r13         class-hnd exact "NewObj constructor temp"
;  V102 tmp97       [V102,T38] (  4,  2.50)     int  ->  rax         "Inline return value spill temp"
;* V103 tmp98       [V103    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V104 tmp99       [V104    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V105 tmp100      [V105,T103] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;  V106 tmp101      [V106,T131] (  3,  1   )  ushort  ->   r8         "Inline stloc first use temp"
;  V107 tmp102      [V107,T47] (  4,  2   )     int  ->   r8         "Inline stloc first use temp"
;  V108 tmp103      [V108,T48] (  4,  2   )     int  ->  rax         "Inlining Arg"
;* V109 tmp104      [V109    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V110 tmp105      [V110    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V111 tmp106      [V111    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V112 tmp107      [V112    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V113 tmp108      [V113    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V114 tmp109      [V114,T106] (  4,  1.74)     ref  ->   r8         class-hnd "impAppendStmt"
;  V115 tmp110      [V115,T122] (  4,  1.48)     int  ->  r10         "impAppendStmt"
;* V116 tmp111      [V116    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V117 tmp112      [V117,T123] (  4,  1.48)     int  ->  r11         "Inlining Arg"
;* V118 tmp113      [V118    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V119 tmp114      [V119,T139] (  2,  1   )   byref  ->   r8         "Inlining Arg"
;* V120 tmp115      [V120    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V121 tmp116      [V121    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V122 tmp117      [V122    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V123 tmp118      [V123    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V124 tmp119      [V124,T168] (  2,  1   )     int  ->  r12         "Inlining Arg"
;* V125 tmp120      [V125    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V126 tmp121      [V126    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V127 tmp122      [V127    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V128 tmp123      [V128    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V129 tmp124      [V129    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V130 tmp125      [V130    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V131 tmp126      [V131    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V132 tmp127      [V132,T237] (  2,  0.50)  ushort  ->   r8         "Inline stloc first use temp"
;* V133 tmp128      [V133    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V134 tmp129      [V134    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V135 tmp130      [V135    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V136 tmp131      [V136    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V137 tmp132      [V137    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V138 tmp133      [V138    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V139 tmp134      [V139    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V140 tmp135      [V140    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V141 tmp136      [V141    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V142 tmp137      [V142    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V143 tmp138      [V143,T22] (  4,  3.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V144 tmp139      [V144,T24] (  4,  3   )     int  ->   r9         "impAppendStmt"
;* V145 tmp140      [V145    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V146 tmp141      [V146,T25] (  4,  3   )     int  ->  rdx         "Inlining Arg"
;* V147 tmp142      [V147    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V148 tmp143      [V148,T60] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;* V149 tmp144      [V149    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V150 tmp145      [V150    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V151 tmp146      [V151    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V152 tmp147      [V152    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V153 tmp148      [V153,T88] (  2,  2   )     int  ->  r10         "Inlining Arg"
;* V154 tmp149      [V154    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V155 tmp150      [V155    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V156 tmp151      [V156    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V157 tmp152      [V157    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V158 tmp153      [V158    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V159 tmp154      [V159    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V160 tmp155      [V160    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V161 tmp156      [V161,T169] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;* V162 tmp157      [V162    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V163 tmp158      [V163    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V164 tmp159      [V164    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V165 tmp160      [V165    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V166 tmp161      [V166,T39] (  4,  2.50)     int  ->  rax         "Inline return value spill temp"
;* V167 tmp162      [V167    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V168 tmp163      [V168    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V169 tmp164      [V169,T104] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;  V170 tmp165      [V170,T132] (  3,  1   )  ushort  ->   r8         "Inline stloc first use temp"
;  V171 tmp166      [V171,T49] (  4,  2   )     int  ->   r8         "Inline stloc first use temp"
;  V172 tmp167      [V172,T50] (  4,  2   )     int  ->  rax         "Inlining Arg"
;* V173 tmp168      [V173    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V174 tmp169      [V174    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V175 tmp170      [V175    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V176 tmp171      [V176    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V177 tmp172      [V177    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V178 tmp173      [V178,T107] (  4,  1.74)     ref  ->   r8         class-hnd "impAppendStmt"
;  V179 tmp174      [V179,T124] (  4,  1.48)     int  ->  r10         "impAppendStmt"
;* V180 tmp175      [V180    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V181 tmp176      [V181,T125] (  4,  1.48)     int  ->  r11         "Inlining Arg"
;* V182 tmp177      [V182    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V183 tmp178      [V183,T140] (  2,  1   )   byref  ->   r8         "Inlining Arg"
;* V184 tmp179      [V184    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V185 tmp180      [V185    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V186 tmp181      [V186    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V187 tmp182      [V187    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V188 tmp183      [V188,T170] (  2,  1   )     int  ->  r12         "Inlining Arg"
;* V189 tmp184      [V189    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V190 tmp185      [V190    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V191 tmp186      [V191    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V192 tmp187      [V192    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V193 tmp188      [V193    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V194 tmp189      [V194    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V195 tmp190      [V195    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V196 tmp191      [V196,T238] (  2,  0.50)  ushort  ->   r8         "Inline stloc first use temp"
;* V197 tmp192      [V197    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V198 tmp193      [V198    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V199 tmp194      [V199    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V200 tmp195      [V200    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V201 tmp196      [V201    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;* V202 tmp197      [V202    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V203 tmp198      [V203    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V204 tmp199      [V204    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V205 tmp200      [V205    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V206 tmp201      [V206    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V207 tmp202      [V207,T23] (  4,  3.50)     ref  ->  rcx         class-hnd "impAppendStmt"
;  V208 tmp203      [V208,T26] (  4,  3   )     int  ->   r9         "impAppendStmt"
;* V209 tmp204      [V209    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V210 tmp205      [V210,T27] (  4,  3   )     int  ->  rdx         "Inlining Arg"
;* V211 tmp206      [V211    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V212 tmp207      [V212,T61] (  2,  2   )   byref  ->  rcx         "Inlining Arg"
;* V213 tmp208      [V213    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V214 tmp209      [V214    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V215 tmp210      [V215    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V216 tmp211      [V216    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V217 tmp212      [V217,T89] (  2,  2   )     int  ->  r10         "Inlining Arg"
;* V218 tmp213      [V218    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V219 tmp214      [V219    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V220 tmp215      [V220    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V221 tmp216      [V221    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;* V222 tmp217      [V222    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V223 tmp218      [V223    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;* V224 tmp219      [V224    ] (  0,  0   )  struct (16) zero-ref    "Inlining Arg"
;  V225 tmp220      [V225,T171] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;* V226 tmp221      [V226    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V227 tmp222      [V227    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;* V228 tmp223      [V228    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;* V229 tmp224      [V229    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V230 tmp225      [V230,T40] (  4,  2.50)     int  ->  rax         "Inline return value spill temp"
;* V231 tmp226      [V231    ] (  0,  0   )     int  ->  zero-ref    "Inlining Arg"
;* V232 tmp227      [V232    ] (  0,  0   )  struct ( 8) zero-ref    ld-addr-op "Inlining Arg"
;  V233 tmp228      [V233,T41] (  2,  2.50)     int  ->  r14         "Inlining Arg"
;  V234 tmp229      [V234,T133] (  3,  1   )  ushort  ->  rdx         "Inline stloc first use temp"
;  V235 tmp230      [V235,T51] (  4,  2   )     int  ->  rdx         "Inline stloc first use temp"
;  V236 tmp231      [V236,T52] (  4,  2   )     int  ->  r14         "Inlining Arg"
;* V237 tmp232      [V237    ] (  0,  0   )     ref  ->  zero-ref    class-hnd "Inlining Arg"
;* V238 tmp233      [V238    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inline stloc first use temp"
;* V239 tmp234      [V239    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V240 tmp235      [V240    ] (  0,  0   )  struct (16) zero-ref    "struct address for call/obj"
;* V241 tmp236      [V241    ] (  0,  0   )  struct (16) zero-ref    ld-addr-op "Inlining Arg"
;  V242 tmp237      [V242,T108] (  4,  1.74)     ref  ->  rax         class-hnd "impAppendStmt"
;  V243 tmp238      [V243,T126] (  4,  1.48)     int  ->  rdx         "impAppendStmt"
;* V244 tmp239      [V244    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;  V245 tmp240      [V245,T127] (  4,  1.48)     int  ->  rcx         "Inlining Arg"
;* V246 tmp241      [V246    ] (  0,  0   )  struct ( 8) zero-ref    "NewObj constructor temp"
;  V247 tmp242      [V247,T141] (  2,  1   )   byref  ->  rax         "Inlining Arg"
;* V248 tmp243      [V248    ] (  0,  0   )  struct (16) zero-ref    "NewObj constructor temp"
;* V249 tmp244      [V249    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;* V250 tmp245      [V250    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V251 tmp246      [V251,T172] (  2,  1   )  struct ( 8) [rsp+0x130]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V252 tmp247      [V252,T173] (  2,  1   )     int  ->   r9         "Inlining Arg"
;  V253 tmp248      [V253    ] (  3,  1.50)  struct (16) [rsp+0x120]   do-not-enreg[XSFB] must-init addr-exposed ld-addr-op "Inlining Arg"
;  V254 tmp249      [V254    ] (  4,  2   )  struct (16) [rsp+0x110]   do-not-enreg[XSFB] must-init addr-exposed "NewObj constructor temp"
;  V255 tmp250      [V255,T142] (  2,  1   )   byref  ->  rax         "Inlining Arg"
;  V256 tmp251      [V256,T174] (  2,  1   )  struct ( 8) [rsp+0x108]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V257 tmp252      [V257,T175] (  2,  1   )     int  ->  rdx         "Inlining Arg"
;  V258 tmp253      [V258    ] (  2,  1   )  struct (16) [rsp+0xF8]   do-not-enreg[XSB] must-init addr-exposed "Inlining Arg"
;  V259 tmp254      [V259,T176] (  2,  1   )  struct (16) [rsp+0xE8]   do-not-enreg[SB] must-init "Inlining Arg"
;  V260 tmp255      [V260,T239] (  2,  0.50)  ushort  ->  rdx         "Inline stloc first use temp"
;  V261 tmp256      [V261,T114] (  3,  1.50)  struct (16) [rsp+0xD8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V262 tmp257      [V262    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V263 tmp258      [V263,T177] (  2,  1   )  struct (16) [rsp+0xC8]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V264 tmp259      [V264,T143] (  2,  1   )   byref  ->  rax         "Inlining Arg"
;  V265 tmp260      [V265,T90] (  2,  2   )  struct ( 8) [rsp+0xC0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V266 tmp261      [V266,T62] (  2,  2   )     ref  ->  rax         class-hnd "Inlining Arg"
;  V267 tmp262      [V267,T53] (  4,  2   )  struct (16) [rsp+0xB0]   do-not-enreg[SFB] must-init ld-addr-op "Inline stloc first use temp"
;* V268 tmp263      [V268    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;* V269 tmp264      [V269    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "struct address for call/obj"
;  V270 tmp265      [V270,T16] (  4,  4   )  struct (16) [rsp+0xA0]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V271 tmp266      [V271,T10] (  5,  4.50)     ref  ->  rax         class-hnd "impAppendStmt"
;  V272 tmp267      [V272,T28] (  4,  3   )     int  ->  rcx         "impAppendStmt"
;  V273 tmp268      [V273,T09] (  5,  5   )  struct (16) [rsp+0x90]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V274 tmp269      [V274,T29] (  4,  3   )     int  ->   r8         "Inlining Arg"
;  V275 tmp270      [V275,T91] (  2,  2   )  struct ( 8) [rsp+0x88]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V276 tmp271      [V276,T63] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;  V277 tmp272      [V277,T17] (  4,  4   )  struct (16) [rsp+0x78]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V278 tmp273      [V278,T64] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;* V279 tmp274      [V279    ] (  0,  0   )   byref  ->  zero-ref    "Inlining Arg"
;  V280 tmp275      [V280,T92] (  2,  2   )  struct ( 8) [rsp+0x70]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V281 tmp276      [V281,T93] (  2,  2   )     int  ->  rcx         "Inlining Arg"
;  V282 tmp277      [V282,T31] (  3,  3   )  struct (16) [rsp+0x60]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V283 tmp278      [V283,T18] (  4,  4   )  struct (16) [rsp+0x50]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V284 tmp279      [V284,T65] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;  V285 tmp280      [V285,T94] (  2,  2   )  struct ( 8) [rsp+0x48]   do-not-enreg[SFB] must-init "NewObj constructor temp"
;  V286 tmp281      [V286,T95] (  2,  2   )     int  ->  rdx         "Inlining Arg"
;* V287 tmp282      [V287    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;* V288 tmp283      [V288    ] (  0,  0   )  struct (16) zero-ref    do-not-enreg[SB] "Inlining Arg"
;  V289 tmp284      [V289,T178] (  2,  1   )     int  ->  rax         "Inline stloc first use temp"
;  V290 tmp285      [V290,T32] (  3,  3   )  struct (16) [rsp+0x38]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;* V291 tmp286      [V291    ] (  0,  0   )     int  ->  zero-ref    "impAppendStmt"
;  V292 tmp287      [V292,T96] (  2,  2   )  struct (16) [rsp+0x28]   do-not-enreg[SFB] must-init ld-addr-op "Inlining Arg"
;  V293 tmp288      [V293,T66] (  2,  2   )   byref  ->  rax         "Inlining Arg"
;  V294 tmp289      [V294,T02] (  4,  3.50)     ref  ->  rdi         V01.buffer(offs=0x00) P-INDEP "field V01.buffer (fldOffset=0x0)"
;  V295 tmp290      [V295,T67] (  2,  2   )     ref  ->  rbp         V06.buffer(offs=0x00) P-INDEP "field V06.buffer (fldOffset=0x0)"
;  V296 tmp291      [V296,T68] (  2,  2   )   byref  ->  r10         V09._pointer(offs=0x00) P-INDEP "field V09._pointer (fldOffset=0x0)"
;  V297 tmp292      [V297,T33] (  3,  3   )     int  ->  r11         V09._length(offs=0x08) P-INDEP "field V09._length (fldOffset=0x8)"
;* V298 tmp293      [V298    ] (  0,  0   )   byref  ->  zero-ref    V10._pointer(offs=0x00) P-INDEP "field V10._pointer (fldOffset=0x0)"
;* V299 tmp294      [V299    ] (  0,  0   )     int  ->  zero-ref    V10._length(offs=0x08) P-INDEP "field V10._length (fldOffset=0x8)"
;  V300 tmp295      [V300,T69] (  2,  2   )   byref  ->  rdx         V11._pointer(offs=0x00) P-INDEP "field V11._pointer (fldOffset=0x0)"
;* V301 tmp296      [V301    ] (  0,  0   )     int  ->  zero-ref    V11._length(offs=0x08) P-INDEP "field V11._length (fldOffset=0x8)"
;  V302 tmp297      [V302,T70] (  2,  2   )     ref  ->  rdx         V12._array(offs=0x00) P-INDEP "field V12._array (fldOffset=0x0)"
;  V303 tmp298      [V303,T97] (  2,  2   )     int  ->   r8         V12._offset(offs=0x08) P-INDEP "field V12._offset (fldOffset=0x8)"
;  V304 tmp299      [V304,T98] (  2,  2   )     int  ->   r9         V12._count(offs=0x0c) P-INDEP "field V12._count (fldOffset=0xc)"
;  V305 tmp300      [V305,T54] (  3,  2   )   byref  ->  r10         V15._pointer(offs=0x00) P-INDEP "field V15._pointer (fldOffset=0x0)"
;  V306 tmp301      [V306,T56] (  3,  2   )     int  ->  r11         V15._length(offs=0x08) P-INDEP "field V15._length (fldOffset=0x8)"
;  V307 tmp302      [V307,T144] (  2,  1   )   byref  ->  r10         V17._value(offs=0x00) P-INDEP "field V17._value (fldOffset=0x0)"
;* V308 tmp303      [V308    ] (  0,  0   )   byref  ->  zero-ref    V19._pointer(offs=0x00) P-INDEP "field V19._pointer (fldOffset=0x0)"
;* V309 tmp304      [V309    ] (  0,  0   )     int  ->  zero-ref    V19._length(offs=0x08) P-INDEP "field V19._length (fldOffset=0x8)"
;  V310 tmp305      [V310,T71] (  2,  2   )   byref  ->  rdx         V22._value(offs=0x00) P-INDEP "field V22._value (fldOffset=0x0)"
;* V311 tmp306      [V311    ] (  0,  0   )   byref  ->  zero-ref    V24._pointer(offs=0x00) P-INDEP "field V24._pointer (fldOffset=0x0)"
;* V312 tmp307      [V312    ] (  0,  0   )     int  ->  zero-ref    V24._length(offs=0x08) P-INDEP "field V24._length (fldOffset=0x8)"
;  V313 tmp308      [V313,T72] (  2,  2   )   byref  ->  rdx         V25._pointer(offs=0x00) P-INDEP "field V25._pointer (fldOffset=0x0)"
;* V314 tmp309      [V314    ] (  0,  0   )     int  ->  zero-ref    V25._length(offs=0x08) P-INDEP "field V25._length (fldOffset=0x8)"
;  V315 tmp310      [V315,T73] (  2,  2   )   byref  ->  rdx         V27._value(offs=0x00) P-INDEP "field V27._value (fldOffset=0x0)"
;  V316 tmp311      [V316,T74] (  2,  2   )   byref  ->  rdx         V29._pointer(offs=0x00) P-INDEP "field V29._pointer (fldOffset=0x0)"
;* V317 tmp312      [V317    ] (  0,  0   )     int  ->  zero-ref    V29._length(offs=0x08) P-INDEP "field V29._length (fldOffset=0x8)"
;  V318 tmp313      [V318,T75] (  2,  2   )   byref  ->  rdx         V30._pointer(offs=0x00) P-INDEP "field V30._pointer (fldOffset=0x0)"
;* V319 tmp314      [V319    ] (  0,  0   )     int  ->  zero-ref    V30._length(offs=0x08) P-INDEP "field V30._length (fldOffset=0x8)"
;  V320 tmp315      [V320,T76] (  2,  2   )   byref  ->  rdx         V32._pointer(offs=0x00) P-INDEP "field V32._pointer (fldOffset=0x0)"
;* V321 tmp316      [V321    ] (  0,  0   )     int  ->  zero-ref    V32._length(offs=0x08) P-INDEP "field V32._length (fldOffset=0x8)"
;* V322 tmp317      [V322    ] (  0,  0   )   byref  ->  zero-ref    V34._pointer(offs=0x00) P-INDEP "field V34._pointer (fldOffset=0x0)"
;* V323 tmp318      [V323    ] (  0,  0   )     int  ->  zero-ref    V34._length(offs=0x08) P-INDEP "field V34._length (fldOffset=0x8)"
;  V324 tmp319      [V324,T77] (  2,  2   )   byref  ->   r8         V38._pointer(offs=0x00) P-INDEP "field V38._pointer (fldOffset=0x0)"
;  V325 tmp320      [V325,T34] (  3,  3   )     int  ->   r9         V38._length(offs=0x08) P-INDEP "field V38._length (fldOffset=0x8)"
;* V326 tmp321      [V326    ] (  0,  0   )   byref  ->  zero-ref    V39._pointer(offs=0x00) P-INDEP "field V39._pointer (fldOffset=0x0)"
;* V327 tmp322      [V327    ] (  0,  0   )     int  ->  zero-ref    V39._length(offs=0x08) P-INDEP "field V39._length (fldOffset=0x8)"
;  V328 tmp323      [V328,T78] (  2,  2   )   byref  ->  rax         V40._pointer(offs=0x00) P-INDEP "field V40._pointer (fldOffset=0x0)"
;* V329 tmp324      [V329    ] (  0,  0   )     int  ->  zero-ref    V40._length(offs=0x08) P-INDEP "field V40._length (fldOffset=0x8)"
;  V330 tmp325      [V330,T79] (  2,  2   )     ref  ->  rdx         V41._array(offs=0x00) P-INDEP "field V41._array (fldOffset=0x0)"
;  V331 tmp326      [V331,T99] (  2,  2   )     int  ->  rcx         V41._offset(offs=0x08) P-INDEP "field V41._offset (fldOffset=0x8)"
;  V332 tmp327      [V332,T100] (  2,  2   )     int  ->  rax         V41._count(offs=0x0c) P-INDEP "field V41._count (fldOffset=0xc)"
;  V333 tmp328      [V333,T55] (  3,  2   )   byref  ->   r8         V44._pointer(offs=0x00) P-INDEP "field V44._pointer (fldOffset=0x0)"
;  V334 tmp329      [V334,T57] (  3,  2   )     int  ->   r9         V44._length(offs=0x08) P-INDEP "field V44._length (fldOffset=0x8)"
;  V335 tmp330      [V335,T145] (  2,  1   )   byref  ->   r8         V46._value(offs=0x00) P-INDEP "field V46._value (fldOffset=0x0)"
;* V336 tmp331      [V336    ] (  0,  0   )   byref  ->  zero-ref    V48._pointer(offs=0x00) P-INDEP "field V48._pointer (fldOffset=0x0)"
;* V337 tmp332      [V337    ] (  0,  0   )     int  ->  zero-ref    V48._length(offs=0x08) P-INDEP "field V48._length (fldOffset=0x8)"
;  V338 tmp333      [V338,T80] (  2,  2   )   byref  ->  rax         V51._value(offs=0x00) P-INDEP "field V51._value (fldOffset=0x0)"
;* V339 tmp334      [V339    ] (  0,  0   )   byref  ->  zero-ref    V53._pointer(offs=0x00) P-INDEP "field V53._pointer (fldOffset=0x0)"
;* V340 tmp335      [V340    ] (  0,  0   )     int  ->  zero-ref    V53._length(offs=0x08) P-INDEP "field V53._length (fldOffset=0x8)"
;  V341 tmp336      [V341,T81] (  2,  2   )   byref  ->  rax         V54._pointer(offs=0x00) P-INDEP "field V54._pointer (fldOffset=0x0)"
;* V342 tmp337      [V342    ] (  0,  0   )     int  ->  zero-ref    V54._length(offs=0x08) P-INDEP "field V54._length (fldOffset=0x8)"
;  V343 tmp338      [V343,T82] (  2,  2   )   byref  ->  rax         V56._value(offs=0x00) P-INDEP "field V56._value (fldOffset=0x0)"
;  V344 tmp339      [V344,T83] (  2,  2   )   byref  ->  rax         V58._pointer(offs=0x00) P-INDEP "field V58._pointer (fldOffset=0x0)"
;* V345 tmp340      [V345    ] (  0,  0   )     int  ->  zero-ref    V58._length(offs=0x08) P-INDEP "field V58._length (fldOffset=0x8)"
;  V346 tmp341      [V346,T84] (  2,  2   )   byref  ->  rax         V59._pointer(offs=0x00) P-INDEP "field V59._pointer (fldOffset=0x0)"
;* V347 tmp342      [V347    ] (  0,  0   )     int  ->  zero-ref    V59._length(offs=0x08) P-INDEP "field V59._length (fldOffset=0x8)"
;  V348 tmp343      [V348,T85] (  2,  2   )   byref  ->  rax         V61._pointer(offs=0x00) P-INDEP "field V61._pointer (fldOffset=0x0)"
;* V349 tmp344      [V349    ] (  0,  0   )     int  ->  zero-ref    V61._length(offs=0x08) P-INDEP "field V61._length (fldOffset=0x8)"
;* V350 tmp345      [V350    ] (  0,  0   )   byref  ->  zero-ref    V63._pointer(offs=0x00) P-INDEP "field V63._pointer (fldOffset=0x0)"
;* V351 tmp346      [V351    ] (  0,  0   )     int  ->  zero-ref    V63._length(offs=0x08) P-INDEP "field V63._length (fldOffset=0x8)"
;* V352 tmp347      [V352,T183] (  0,  0   )     ref  ->  zero-ref    V67.buffer(offs=0x00) P-INDEP "field V67.buffer (fldOffset=0x0)"
;  V353 tmp348      [V353,T200] (  2,  0.50)   byref  ->   r9         V73._pointer(offs=0x00) P-INDEP "field V73._pointer (fldOffset=0x0)"
;  V354 tmp349      [V354,T192] (  3,  0.75)     int  ->  r10         V73._length(offs=0x08) P-INDEP "field V73._length (fldOffset=0x8)"
;* V355 tmp350      [V355    ] (  0,  0   )   byref  ->  zero-ref    V74._pointer(offs=0x00) P-INDEP "field V74._pointer (fldOffset=0x0)"
;* V356 tmp351      [V356    ] (  0,  0   )     int  ->  zero-ref    V74._length(offs=0x08) P-INDEP "field V74._length (fldOffset=0x8)"
;  V357 tmp352      [V357,T201] (  2,  0.50)   byref  ->  rcx         V75._pointer(offs=0x00) P-INDEP "field V75._pointer (fldOffset=0x0)"
;* V358 tmp353      [V358    ] (  0,  0   )     int  ->  zero-ref    V75._length(offs=0x08) P-INDEP "field V75._length (fldOffset=0x8)"
;  V359 tmp354      [V359,T202] (  2,  0.50)     ref  ->  rax         V76._array(offs=0x00) P-INDEP "field V76._array (fldOffset=0x0)"
;  V360 tmp355      [V360,T240] (  2,  0.50)     int  ->   r8         V76._offset(offs=0x08) P-INDEP "field V76._offset (fldOffset=0x8)"
;  V361 tmp356      [V361,T241] (  2,  0.50)     int  ->  rcx         V76._count(offs=0x0c) P-INDEP "field V76._count (fldOffset=0xc)"
;  V362 tmp357      [V362,T188] (  3,  0.75)   byref  ->   r9         V79._pointer(offs=0x00) P-INDEP "field V79._pointer (fldOffset=0x0)"
;  V363 tmp358      [V363,T193] (  3,  0.75)     int  ->  r10         V79._length(offs=0x08) P-INDEP "field V79._length (fldOffset=0x8)"
;  V364 tmp359      [V364,T203] (  2,  0.50)   byref  ->   r9         V81._value(offs=0x00) P-INDEP "field V81._value (fldOffset=0x0)"
;* V365 tmp360      [V365    ] (  0,  0   )   byref  ->  zero-ref    V83._pointer(offs=0x00) P-INDEP "field V83._pointer (fldOffset=0x0)"
;* V366 tmp361      [V366    ] (  0,  0   )     int  ->  zero-ref    V83._length(offs=0x08) P-INDEP "field V83._length (fldOffset=0x8)"
;  V367 tmp362      [V367,T204] (  2,  0.50)   byref  ->  rcx         V86._value(offs=0x00) P-INDEP "field V86._value (fldOffset=0x0)"
;* V368 tmp363      [V368    ] (  0,  0   )   byref  ->  zero-ref    V88._pointer(offs=0x00) P-INDEP "field V88._pointer (fldOffset=0x0)"
;* V369 tmp364      [V369    ] (  0,  0   )     int  ->  zero-ref    V88._length(offs=0x08) P-INDEP "field V88._length (fldOffset=0x8)"
;  V370 tmp365      [V370,T205] (  2,  0.50)   byref  ->  rcx         V89._pointer(offs=0x00) P-INDEP "field V89._pointer (fldOffset=0x0)"
;* V371 tmp366      [V371    ] (  0,  0   )     int  ->  zero-ref    V89._length(offs=0x08) P-INDEP "field V89._length (fldOffset=0x8)"
;  V372 tmp367      [V372,T206] (  2,  0.50)   byref  ->  rcx         V91._value(offs=0x00) P-INDEP "field V91._value (fldOffset=0x0)"
;  V373 tmp368      [V373,T207] (  2,  0.50)   byref  ->  rcx         V93._pointer(offs=0x00) P-INDEP "field V93._pointer (fldOffset=0x0)"
;* V374 tmp369      [V374    ] (  0,  0   )     int  ->  zero-ref    V93._length(offs=0x08) P-INDEP "field V93._length (fldOffset=0x8)"
;  V375 tmp370      [V375,T208] (  2,  0.50)   byref  ->  rcx         V94._pointer(offs=0x00) P-INDEP "field V94._pointer (fldOffset=0x0)"
;* V376 tmp371      [V376    ] (  0,  0   )     int  ->  zero-ref    V94._length(offs=0x08) P-INDEP "field V94._length (fldOffset=0x8)"
;  V377 tmp372      [V377,T209] (  2,  0.50)   byref  ->  rcx         V96._pointer(offs=0x00) P-INDEP "field V96._pointer (fldOffset=0x0)"
;* V378 tmp373      [V378    ] (  0,  0   )     int  ->  zero-ref    V96._length(offs=0x08) P-INDEP "field V96._length (fldOffset=0x8)"
;* V379 tmp374      [V379    ] (  0,  0   )   byref  ->  zero-ref    V98._pointer(offs=0x00) P-INDEP "field V98._pointer (fldOffset=0x0)"
;* V380 tmp375      [V380    ] (  0,  0   )     int  ->  zero-ref    V98._length(offs=0x08) P-INDEP "field V98._length (fldOffset=0x8)"
;* V381 tmp376      [V381,T251] (  0,  0   )     ref  ->  zero-ref    V100.buffer(offs=0x00) P-INDEP "field V100.buffer (fldOffset=0x0)"
;* V382 tmp377      [V382,T184] (  0,  0   )     ref  ->  zero-ref    V104.buffer(offs=0x00) P-INDEP "field V104.buffer (fldOffset=0x0)"
;  V383 tmp378      [V383,T210] (  2,  0.50)   byref  ->  r10         V110._pointer(offs=0x00) P-INDEP "field V110._pointer (fldOffset=0x0)"
;  V384 tmp379      [V384,T194] (  3,  0.75)     int  ->  r12         V110._length(offs=0x08) P-INDEP "field V110._length (fldOffset=0x8)"
;* V385 tmp380      [V385    ] (  0,  0   )   byref  ->  zero-ref    V111._pointer(offs=0x00) P-INDEP "field V111._pointer (fldOffset=0x0)"
;* V386 tmp381      [V386    ] (  0,  0   )     int  ->  zero-ref    V111._length(offs=0x08) P-INDEP "field V111._length (fldOffset=0x8)"
;  V387 tmp382      [V387,T211] (  2,  0.50)   byref  ->  rax         V112._pointer(offs=0x00) P-INDEP "field V112._pointer (fldOffset=0x0)"
;* V388 tmp383      [V388    ] (  0,  0   )     int  ->  zero-ref    V112._length(offs=0x08) P-INDEP "field V112._length (fldOffset=0x8)"
;  V389 tmp384      [V389,T212] (  2,  0.50)     ref  ->   r8         V113._array(offs=0x00) P-INDEP "field V113._array (fldOffset=0x0)"
;  V390 tmp385      [V390,T242] (  2,  0.50)     int  ->  r10         V113._offset(offs=0x08) P-INDEP "field V113._offset (fldOffset=0x8)"
;  V391 tmp386      [V391,T243] (  2,  0.50)     int  ->  r11         V113._count(offs=0x0c) P-INDEP "field V113._count (fldOffset=0xc)"
;  V392 tmp387      [V392,T189] (  3,  0.75)   byref  ->  r10         V116._pointer(offs=0x00) P-INDEP "field V116._pointer (fldOffset=0x0)"
;  V393 tmp388      [V393,T195] (  3,  0.75)     int  ->  r12         V116._length(offs=0x08) P-INDEP "field V116._length (fldOffset=0x8)"
;  V394 tmp389      [V394,T213] (  2,  0.50)   byref  ->  r10         V118._value(offs=0x00) P-INDEP "field V118._value (fldOffset=0x0)"
;* V395 tmp390      [V395    ] (  0,  0   )   byref  ->  zero-ref    V120._pointer(offs=0x00) P-INDEP "field V120._pointer (fldOffset=0x0)"
;* V396 tmp391      [V396    ] (  0,  0   )     int  ->  zero-ref    V120._length(offs=0x08) P-INDEP "field V120._length (fldOffset=0x8)"
;  V397 tmp392      [V397,T214] (  2,  0.50)   byref  ->  rax         V123._value(offs=0x00) P-INDEP "field V123._value (fldOffset=0x0)"
;* V398 tmp393      [V398    ] (  0,  0   )   byref  ->  zero-ref    V125._pointer(offs=0x00) P-INDEP "field V125._pointer (fldOffset=0x0)"
;* V399 tmp394      [V399    ] (  0,  0   )     int  ->  zero-ref    V125._length(offs=0x08) P-INDEP "field V125._length (fldOffset=0x8)"
;  V400 tmp395      [V400,T215] (  2,  0.50)   byref  ->  rax         V126._pointer(offs=0x00) P-INDEP "field V126._pointer (fldOffset=0x0)"
;* V401 tmp396      [V401    ] (  0,  0   )     int  ->  zero-ref    V126._length(offs=0x08) P-INDEP "field V126._length (fldOffset=0x8)"
;  V402 tmp397      [V402,T216] (  2,  0.50)   byref  ->  rax         V128._value(offs=0x00) P-INDEP "field V128._value (fldOffset=0x0)"
;  V403 tmp398      [V403,T217] (  2,  0.50)   byref  ->  rax         V130._pointer(offs=0x00) P-INDEP "field V130._pointer (fldOffset=0x0)"
;* V404 tmp399      [V404    ] (  0,  0   )     int  ->  zero-ref    V130._length(offs=0x08) P-INDEP "field V130._length (fldOffset=0x8)"
;  V405 tmp400      [V405,T218] (  2,  0.50)   byref  ->  rax         V131._pointer(offs=0x00) P-INDEP "field V131._pointer (fldOffset=0x0)"
;* V406 tmp401      [V406    ] (  0,  0   )     int  ->  zero-ref    V131._length(offs=0x08) P-INDEP "field V131._length (fldOffset=0x8)"
;  V407 tmp402      [V407,T219] (  2,  0.50)   byref  ->  rax         V133._pointer(offs=0x00) P-INDEP "field V133._pointer (fldOffset=0x0)"
;* V408 tmp403      [V408    ] (  0,  0   )     int  ->  zero-ref    V133._length(offs=0x08) P-INDEP "field V133._length (fldOffset=0x8)"
;* V409 tmp404      [V409    ] (  0,  0   )   byref  ->  zero-ref    V135._pointer(offs=0x00) P-INDEP "field V135._pointer (fldOffset=0x0)"
;* V410 tmp405      [V410    ] (  0,  0   )     int  ->  zero-ref    V135._length(offs=0x08) P-INDEP "field V135._length (fldOffset=0x8)"
;* V411 tmp406      [V411    ] (  0,  0   )     ref  ->  zero-ref    V137.buffer(offs=0x00) P-INDEP "field V137.buffer (fldOffset=0x0)"
;  V412 tmp407      [V412,T146] (  2,  1   )   byref  ->  rax         V139._pointer(offs=0x00) P-INDEP "field V139._pointer (fldOffset=0x0)"
;  V413 tmp408      [V413,T115] (  3,  1.50)     int  ->  r10         V139._length(offs=0x08) P-INDEP "field V139._length (fldOffset=0x8)"
;* V414 tmp409      [V414    ] (  0,  0   )   byref  ->  zero-ref    V140._pointer(offs=0x00) P-INDEP "field V140._pointer (fldOffset=0x0)"
;* V415 tmp410      [V415    ] (  0,  0   )     int  ->  zero-ref    V140._length(offs=0x08) P-INDEP "field V140._length (fldOffset=0x8)"
;  V416 tmp411      [V416,T147] (  2,  1   )   byref  ->  rax         V141._pointer(offs=0x00) P-INDEP "field V141._pointer (fldOffset=0x0)"
;* V417 tmp412      [V417    ] (  0,  0   )     int  ->  zero-ref    V141._length(offs=0x08) P-INDEP "field V141._length (fldOffset=0x8)"
;  V418 tmp413      [V418,T148] (  2,  1   )     ref  ->  rcx         V142._array(offs=0x00) P-INDEP "field V142._array (fldOffset=0x0)"
;  V419 tmp414      [V419,T179] (  2,  1   )     int  ->   r9         V142._offset(offs=0x08) P-INDEP "field V142._offset (fldOffset=0x8)"
;  V420 tmp415      [V420,T180] (  2,  1   )     int  ->  rdx         V142._count(offs=0x0c) P-INDEP "field V142._count (fldOffset=0xc)"
;  V421 tmp416      [V421,T109] (  3,  1.50)   byref  ->  rax         V145._pointer(offs=0x00) P-INDEP "field V145._pointer (fldOffset=0x0)"
;  V422 tmp417      [V422,T116] (  3,  1.50)     int  ->  r10         V145._length(offs=0x08) P-INDEP "field V145._length (fldOffset=0x8)"
;  V423 tmp418      [V423,T149] (  2,  1   )   byref  ->  rax         V147._value(offs=0x00) P-INDEP "field V147._value (fldOffset=0x0)"
;* V424 tmp419      [V424    ] (  0,  0   )   byref  ->  zero-ref    V149._pointer(offs=0x00) P-INDEP "field V149._pointer (fldOffset=0x0)"
;* V425 tmp420      [V425    ] (  0,  0   )     int  ->  zero-ref    V149._length(offs=0x08) P-INDEP "field V149._length (fldOffset=0x8)"
;  V426 tmp421      [V426,T150] (  2,  1   )   byref  ->  rax         V152._value(offs=0x00) P-INDEP "field V152._value (fldOffset=0x0)"
;* V427 tmp422      [V427    ] (  0,  0   )   byref  ->  zero-ref    V154._pointer(offs=0x00) P-INDEP "field V154._pointer (fldOffset=0x0)"
;* V428 tmp423      [V428    ] (  0,  0   )     int  ->  zero-ref    V154._length(offs=0x08) P-INDEP "field V154._length (fldOffset=0x8)"
;  V429 tmp424      [V429,T151] (  2,  1   )   byref  ->  rax         V155._pointer(offs=0x00) P-INDEP "field V155._pointer (fldOffset=0x0)"
;* V430 tmp425      [V430    ] (  0,  0   )     int  ->  zero-ref    V155._length(offs=0x08) P-INDEP "field V155._length (fldOffset=0x8)"
;  V431 tmp426      [V431,T152] (  2,  1   )   byref  ->  rax         V157._value(offs=0x00) P-INDEP "field V157._value (fldOffset=0x0)"
;  V432 tmp427      [V432,T153] (  2,  1   )   byref  ->  rax         V159._pointer(offs=0x00) P-INDEP "field V159._pointer (fldOffset=0x0)"
;* V433 tmp428      [V433    ] (  0,  0   )     int  ->  zero-ref    V159._length(offs=0x08) P-INDEP "field V159._length (fldOffset=0x8)"
;  V434 tmp429      [V434,T154] (  2,  1   )   byref  ->  rax         V160._pointer(offs=0x00) P-INDEP "field V160._pointer (fldOffset=0x0)"
;* V435 tmp430      [V435    ] (  0,  0   )     int  ->  zero-ref    V160._length(offs=0x08) P-INDEP "field V160._length (fldOffset=0x8)"
;  V436 tmp431      [V436,T155] (  2,  1   )   byref  ->  rax         V162._pointer(offs=0x00) P-INDEP "field V162._pointer (fldOffset=0x0)"
;* V437 tmp432      [V437    ] (  0,  0   )     int  ->  zero-ref    V162._length(offs=0x08) P-INDEP "field V162._length (fldOffset=0x8)"
;* V438 tmp433      [V438    ] (  0,  0   )   byref  ->  zero-ref    V164._pointer(offs=0x00) P-INDEP "field V164._pointer (fldOffset=0x0)"
;* V439 tmp434      [V439    ] (  0,  0   )     int  ->  zero-ref    V164._length(offs=0x08) P-INDEP "field V164._length (fldOffset=0x8)"
;* V440 tmp435      [V440,T185] (  0,  0   )     ref  ->  zero-ref    V168.buffer(offs=0x00) P-INDEP "field V168.buffer (fldOffset=0x0)"
;  V441 tmp436      [V441,T220] (  2,  0.50)   byref  ->  r10         V174._pointer(offs=0x00) P-INDEP "field V174._pointer (fldOffset=0x0)"
;  V442 tmp437      [V442,T196] (  3,  0.75)     int  ->  r12         V174._length(offs=0x08) P-INDEP "field V174._length (fldOffset=0x8)"
;* V443 tmp438      [V443    ] (  0,  0   )   byref  ->  zero-ref    V175._pointer(offs=0x00) P-INDEP "field V175._pointer (fldOffset=0x0)"
;* V444 tmp439      [V444    ] (  0,  0   )     int  ->  zero-ref    V175._length(offs=0x08) P-INDEP "field V175._length (fldOffset=0x8)"
;  V445 tmp440      [V445,T221] (  2,  0.50)   byref  ->  rax         V176._pointer(offs=0x00) P-INDEP "field V176._pointer (fldOffset=0x0)"
;* V446 tmp441      [V446    ] (  0,  0   )     int  ->  zero-ref    V176._length(offs=0x08) P-INDEP "field V176._length (fldOffset=0x8)"
;  V447 tmp442      [V447,T222] (  2,  0.50)     ref  ->   r8         V177._array(offs=0x00) P-INDEP "field V177._array (fldOffset=0x0)"
;  V448 tmp443      [V448,T244] (  2,  0.50)     int  ->  r10         V177._offset(offs=0x08) P-INDEP "field V177._offset (fldOffset=0x8)"
;  V449 tmp444      [V449,T245] (  2,  0.50)     int  ->  r11         V177._count(offs=0x0c) P-INDEP "field V177._count (fldOffset=0xc)"
;  V450 tmp445      [V450,T190] (  3,  0.75)   byref  ->  r10         V180._pointer(offs=0x00) P-INDEP "field V180._pointer (fldOffset=0x0)"
;  V451 tmp446      [V451,T197] (  3,  0.75)     int  ->  r12         V180._length(offs=0x08) P-INDEP "field V180._length (fldOffset=0x8)"
;  V452 tmp447      [V452,T223] (  2,  0.50)   byref  ->  r10         V182._value(offs=0x00) P-INDEP "field V182._value (fldOffset=0x0)"
;* V453 tmp448      [V453    ] (  0,  0   )   byref  ->  zero-ref    V184._pointer(offs=0x00) P-INDEP "field V184._pointer (fldOffset=0x0)"
;* V454 tmp449      [V454    ] (  0,  0   )     int  ->  zero-ref    V184._length(offs=0x08) P-INDEP "field V184._length (fldOffset=0x8)"
;  V455 tmp450      [V455,T224] (  2,  0.50)   byref  ->  rax         V187._value(offs=0x00) P-INDEP "field V187._value (fldOffset=0x0)"
;* V456 tmp451      [V456    ] (  0,  0   )   byref  ->  zero-ref    V189._pointer(offs=0x00) P-INDEP "field V189._pointer (fldOffset=0x0)"
;* V457 tmp452      [V457    ] (  0,  0   )     int  ->  zero-ref    V189._length(offs=0x08) P-INDEP "field V189._length (fldOffset=0x8)"
;  V458 tmp453      [V458,T225] (  2,  0.50)   byref  ->  rax         V190._pointer(offs=0x00) P-INDEP "field V190._pointer (fldOffset=0x0)"
;* V459 tmp454      [V459    ] (  0,  0   )     int  ->  zero-ref    V190._length(offs=0x08) P-INDEP "field V190._length (fldOffset=0x8)"
;  V460 tmp455      [V460,T226] (  2,  0.50)   byref  ->  rax         V192._value(offs=0x00) P-INDEP "field V192._value (fldOffset=0x0)"
;  V461 tmp456      [V461,T227] (  2,  0.50)   byref  ->  rax         V194._pointer(offs=0x00) P-INDEP "field V194._pointer (fldOffset=0x0)"
;* V462 tmp457      [V462    ] (  0,  0   )     int  ->  zero-ref    V194._length(offs=0x08) P-INDEP "field V194._length (fldOffset=0x8)"
;  V463 tmp458      [V463,T228] (  2,  0.50)   byref  ->  rax         V195._pointer(offs=0x00) P-INDEP "field V195._pointer (fldOffset=0x0)"
;* V464 tmp459      [V464    ] (  0,  0   )     int  ->  zero-ref    V195._length(offs=0x08) P-INDEP "field V195._length (fldOffset=0x8)"
;  V465 tmp460      [V465,T229] (  2,  0.50)   byref  ->  rax         V197._pointer(offs=0x00) P-INDEP "field V197._pointer (fldOffset=0x0)"
;* V466 tmp461      [V466    ] (  0,  0   )     int  ->  zero-ref    V197._length(offs=0x08) P-INDEP "field V197._length (fldOffset=0x8)"
;* V467 tmp462      [V467    ] (  0,  0   )   byref  ->  zero-ref    V199._pointer(offs=0x00) P-INDEP "field V199._pointer (fldOffset=0x0)"
;* V468 tmp463      [V468    ] (  0,  0   )     int  ->  zero-ref    V199._length(offs=0x08) P-INDEP "field V199._length (fldOffset=0x8)"
;* V469 tmp464      [V469    ] (  0,  0   )     ref  ->  zero-ref    V201.buffer(offs=0x00) P-INDEP "field V201.buffer (fldOffset=0x0)"
;  V470 tmp465      [V470,T156] (  2,  1   )   byref  ->  rax         V203._pointer(offs=0x00) P-INDEP "field V203._pointer (fldOffset=0x0)"
;  V471 tmp466      [V471,T117] (  3,  1.50)     int  ->  r10         V203._length(offs=0x08) P-INDEP "field V203._length (fldOffset=0x8)"
;* V472 tmp467      [V472    ] (  0,  0   )   byref  ->  zero-ref    V204._pointer(offs=0x00) P-INDEP "field V204._pointer (fldOffset=0x0)"
;* V473 tmp468      [V473    ] (  0,  0   )     int  ->  zero-ref    V204._length(offs=0x08) P-INDEP "field V204._length (fldOffset=0x8)"
;  V474 tmp469      [V474,T157] (  2,  1   )   byref  ->  rax         V205._pointer(offs=0x00) P-INDEP "field V205._pointer (fldOffset=0x0)"
;* V475 tmp470      [V475    ] (  0,  0   )     int  ->  zero-ref    V205._length(offs=0x08) P-INDEP "field V205._length (fldOffset=0x8)"
;  V476 tmp471      [V476,T158] (  2,  1   )     ref  ->  rcx         V206._array(offs=0x00) P-INDEP "field V206._array (fldOffset=0x0)"
;  V477 tmp472      [V477,T181] (  2,  1   )     int  ->   r9         V206._offset(offs=0x08) P-INDEP "field V206._offset (fldOffset=0x8)"
;  V478 tmp473      [V478,T182] (  2,  1   )     int  ->  rdx         V206._count(offs=0x0c) P-INDEP "field V206._count (fldOffset=0xc)"
;  V479 tmp474      [V479,T110] (  3,  1.50)   byref  ->  rax         V209._pointer(offs=0x00) P-INDEP "field V209._pointer (fldOffset=0x0)"
;  V480 tmp475      [V480,T118] (  3,  1.50)     int  ->  r10         V209._length(offs=0x08) P-INDEP "field V209._length (fldOffset=0x8)"
;  V481 tmp476      [V481,T159] (  2,  1   )   byref  ->  rax         V211._value(offs=0x00) P-INDEP "field V211._value (fldOffset=0x0)"
;* V482 tmp477      [V482    ] (  0,  0   )   byref  ->  zero-ref    V213._pointer(offs=0x00) P-INDEP "field V213._pointer (fldOffset=0x0)"
;* V483 tmp478      [V483    ] (  0,  0   )     int  ->  zero-ref    V213._length(offs=0x08) P-INDEP "field V213._length (fldOffset=0x8)"
;  V484 tmp479      [V484,T160] (  2,  1   )   byref  ->  rax         V216._value(offs=0x00) P-INDEP "field V216._value (fldOffset=0x0)"
;* V485 tmp480      [V485    ] (  0,  0   )   byref  ->  zero-ref    V218._pointer(offs=0x00) P-INDEP "field V218._pointer (fldOffset=0x0)"
;* V486 tmp481      [V486    ] (  0,  0   )     int  ->  zero-ref    V218._length(offs=0x08) P-INDEP "field V218._length (fldOffset=0x8)"
;  V487 tmp482      [V487,T161] (  2,  1   )   byref  ->  rax         V219._pointer(offs=0x00) P-INDEP "field V219._pointer (fldOffset=0x0)"
;* V488 tmp483      [V488    ] (  0,  0   )     int  ->  zero-ref    V219._length(offs=0x08) P-INDEP "field V219._length (fldOffset=0x8)"
;  V489 tmp484      [V489,T162] (  2,  1   )   byref  ->  rax         V221._value(offs=0x00) P-INDEP "field V221._value (fldOffset=0x0)"
;  V490 tmp485      [V490,T163] (  2,  1   )   byref  ->  rax         V223._pointer(offs=0x00) P-INDEP "field V223._pointer (fldOffset=0x0)"
;* V491 tmp486      [V491    ] (  0,  0   )     int  ->  zero-ref    V223._length(offs=0x08) P-INDEP "field V223._length (fldOffset=0x8)"
;  V492 tmp487      [V492,T164] (  2,  1   )   byref  ->  rax         V224._pointer(offs=0x00) P-INDEP "field V224._pointer (fldOffset=0x0)"
;* V493 tmp488      [V493    ] (  0,  0   )     int  ->  zero-ref    V224._length(offs=0x08) P-INDEP "field V224._length (fldOffset=0x8)"
;  V494 tmp489      [V494,T165] (  2,  1   )   byref  ->  rax         V226._pointer(offs=0x00) P-INDEP "field V226._pointer (fldOffset=0x0)"
;* V495 tmp490      [V495    ] (  0,  0   )     int  ->  zero-ref    V226._length(offs=0x08) P-INDEP "field V226._length (fldOffset=0x8)"
;* V496 tmp491      [V496    ] (  0,  0   )   byref  ->  zero-ref    V228._pointer(offs=0x00) P-INDEP "field V228._pointer (fldOffset=0x0)"
;* V497 tmp492      [V497    ] (  0,  0   )     int  ->  zero-ref    V228._length(offs=0x08) P-INDEP "field V228._length (fldOffset=0x8)"
;  V498 tmp493      [V498,T119] (  2,  1.50)     ref  ->  rdi         V232.buffer(offs=0x00) P-INDEP "field V232.buffer (fldOffset=0x0)"
;  V499 tmp494      [V499,T230] (  2,  0.50)   byref  ->   r8         V238._pointer(offs=0x00) P-INDEP "field V238._pointer (fldOffset=0x0)"
;  V500 tmp495      [V500,T198] (  3,  0.75)     int  ->   r9         V238._length(offs=0x08) P-INDEP "field V238._length (fldOffset=0x8)"
;  V501 tmp496      [V501,T231] (  2,  0.50)   byref  ->  rax         V239._pointer(offs=0x00) P-INDEP "field V239._pointer (fldOffset=0x0)"
;  V502 tmp497      [V502,T246] (  2,  0.50)     int  ->   r9         V239._length(offs=0x08) P-INDEP "field V239._length (fldOffset=0x8)"
;  V503 tmp498      [V503,T232] (  2,  0.50)   byref  ->  rdx         V240._pointer(offs=0x00) P-INDEP "field V240._pointer (fldOffset=0x0)"
;  V504 tmp499      [V504,T247] (  2,  0.50)     int  ->  rax         V240._length(offs=0x08) P-INDEP "field V240._length (fldOffset=0x8)"
;  V505 tmp500      [V505,T233] (  2,  0.50)     ref  ->  rax         V241._array(offs=0x00) P-INDEP "field V241._array (fldOffset=0x0)"
;  V506 tmp501      [V506,T248] (  2,  0.50)     int  ->  rdx         V241._offset(offs=0x08) P-INDEP "field V241._offset (fldOffset=0x8)"
;  V507 tmp502      [V507,T249] (  2,  0.50)     int  ->  rcx         V241._count(offs=0x0c) P-INDEP "field V241._count (fldOffset=0xc)"
;  V508 tmp503      [V508,T191] (  3,  0.75)   byref  ->   r8         V244._pointer(offs=0x00) P-INDEP "field V244._pointer (fldOffset=0x0)"
;  V509 tmp504      [V509,T199] (  3,  0.75)     int  ->   r9         V244._length(offs=0x08) P-INDEP "field V244._length (fldOffset=0x8)"
;  V510 tmp505      [V510,T234] (  2,  0.50)   byref  ->   r8         V246._value(offs=0x00) P-INDEP "field V246._value (fldOffset=0x0)"
;  V511 tmp506      [V511,T235] (  2,  0.50)   byref  ->  rax         V248._pointer(offs=0x00) P-INDEP "field V248._pointer (fldOffset=0x0)"
;  V512 tmp507      [V512,T250] (  2,  0.50)     int  ->   r9         V248._length(offs=0x08) P-INDEP "field V248._length (fldOffset=0x8)"
;  V513 tmp508      [V513,T04] (  4,  8   )   byref  ->  rax         "BlockOp address local"
;  V514 tmp509      [V514,T19] (  2,  4   )   byref  ->  rdx         "BlockOp address local"
;  V515 tmp510      [V515,T42] (  4,  2   )   byref  ->  rcx         "BlockOp address local"
;  V516 tmp511      [V516,T43] (  4,  2   )   byref  ->  rdx         "BlockOp address local"
;* V517 tmp512      [V517,T186] (  0,  0   )   byref  ->  zero-ref    "BlockOp address local"
;  V518 tmp513      [V518,T44] (  4,  2   )   byref  ->  rdx         "BlockOp address local"
;* V519 tmp514      [V519,T187] (  0,  0   )   byref  ->  zero-ref    "BlockOp address local"
;  V520 tmp515      [V520,T45] (  4,  2   )   byref  ->  rbp         "BlockOp address local"
;  V521 tmp516      [V521,T111] (  3,  1.50)   byref  ->  rdx         stack-byref "BlockOp address local"
;  V522 tmp517      [V522,T112] (  3,  1.50)   byref  ->  rax         stack-byref "BlockOp address local"
;  V523 tmp518      [V523,T113] (  3,  1.50)   byref  ->  rcx         stack-byref "BlockOp address local"
;  V524 cse0        [V524,T128] (  3,  1   )     ref  ->  rcx         "CSE - conservative"
;  V525 cse1        [V525,T134] (  3,  1   )     int  ->   r9         "CSE - conservative"
;  V526 cse2        [V526,T135] (  3,  1   )     int  ->  rdx         "CSE - conservative"
;  V527 cse3        [V527,T129] (  3,  1   )     ref  ->  rcx         "CSE - conservative"
;  V528 cse4        [V528,T136] (  3,  1   )     int  ->   r9         "CSE - conservative"
;  V529 cse5        [V529,T137] (  3,  1   )     int  ->  rdx         "CSE - conservative"
;  V530 cse6        [V530,T35] (  3,  3   )     int  ->  rcx         "CSE - conservative"
;  V531 cse7        [V531,T36] (  3,  3   )     int  ->  rax         "CSE - conservative"
;  V532 cse8        [V532,T07] (  7,  4   )   byref  ->  rbp         "CSE - moderate"
;
; Lcl frame size = 312

G_M64856_IG01:
       push     r15
       push     r14
       push     r13
       push     r12
       push     rdi
       push     rsi
       push     rbp
       push     rbx
       sub      rsp, 312
       vzeroupper 
       xor      rax, rax
       mov      qword ptr [rsp+28H], rax
       vxorps   xmm4, xmm4
       vmovdqa  xmmword ptr [rsp+30H], xmm4
       mov      rax, -240
       vmovdqa  xmmword ptr [rsp+rax+130H], xmm4
       vmovdqa  xmmword ptr [rsp+rax+140H], xmm4
       vmovdqa  xmmword ptr [rsp+rax+150H], xmm4
       add      rax, 48
       jne      SHORT  -5 instr
       mov      qword ptr [rsp+130H], rax
       mov      rbx, rcx
       mov      rdi, rdx
       mov      esi, r8d
						;; bbWeight=1    PerfScore 18.08
G_M64856_IG02:
       mov      rbp, rdi
       add      rbp, 16
       mov      rax, rbp
       mov      rdx, gword ptr [rax]
       mov      ecx, dword ptr [rax+8]
       mov      r8d, ecx
       mov      eax, dword ptr [rax+12]
       mov      r9d, eax
       test     rdx, rdx
       jne      SHORT G_M64856_IG05
						;; bbWeight=1    PerfScore 8.50
G_M64856_IG03:
       or       r8d, r9d
       jne      G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG04:
       xor      r10, r10
       xor      r11d, r11d
       jmp      SHORT G_M64856_IG07
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG05:
       mov      r10d, r8d
       mov      r11d, r9d
       add      r10, r11
       mov      r11d, dword ptr [rdx+8]
       cmp      r10, r11
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 1.00
G_M64856_IG06:
       add      rdx, 16
       movsxd   r10, r8d
       add      r10, rdx
       mov      r11d, r9d
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG07:
       cmp      esi, r11d
       ja       G_M64856_IG110
						;; bbWeight=1    PerfScore 1.25
G_M64856_IG08:
       sub      r11d, esi
       movsxd   rdx, esi
       add      rdx, r10
       cmp      r11d, 4
       jl       G_M64856_IG111
						;; bbWeight=1    PerfScore 2.00
G_M64856_IG09:
       mov      edx, dword ptr [rdx]
       mov      r14d, esi
       sub      r14d, edx
       mov      rdx, rbp
       mov      rdx, gword ptr [rdx]
       test     rdx, rdx
       jne      SHORT G_M64856_IG12
						;; bbWeight=1    PerfScore 6.00
G_M64856_IG10:
       or       ecx, eax
       jne      G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG11:
       xor      r8, r8
       xor      r9d, r9d
       jmp      SHORT G_M64856_IG14
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG12:
       mov      r8d, ecx
       mov      r9d, eax
       add      r8, r9
       mov      r9d, dword ptr [rdx+8]
       cmp      r8, r9
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 1.00
G_M64856_IG13:
       add      rdx, 16
       movsxd   r8, ecx
       add      r8, rdx
       mov      r9d, eax
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG14:
       cmp      r14d, r9d
       ja       G_M64856_IG110
						;; bbWeight=1    PerfScore 1.25
G_M64856_IG15:
       sub      r9d, r14d
       movsxd   rax, r14d
       add      rax, r8
       cmp      r9d, 2
       jl       G_M64856_IG111
						;; bbWeight=1    PerfScore 2.00
G_M64856_IG16:
       movzx    r15, word  ptr [rax]
       cmp      r15d, 4
       jge      SHORT G_M64856_IG18
						;; bbWeight=1    PerfScore 3.25
G_M64856_IG17:
       call     InputBufferExtensions:ThrowInvalidVtableException()
						;; bbWeight=0.25 PerfScore 0.25
G_M64856_IG18:
       mov      r12d, r15d
       shr      r12d, 31
       add      r15d, r12d
       sar      r15d, 1
       add      r15d, -3
       test     r15d, r15d
       jge      SHORT G_M64856_IG20
						;; bbWeight=1    PerfScore 4.50
G_M64856_IG19:
       xor      rdx, rdx
       jmp      G_M64856_IG30
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG20:
       mov      edx, r14d
       add      edx, 4
       jo       G_M64856_IG109
       mov      rcx, rbp
       mov      rax, gword ptr [rcx]
       mov      r8d, dword ptr [rcx+8]
       mov      ecx, dword ptr [rcx+12]
       test     rax, rax
       jne      SHORT G_M64856_IG23
						;; bbWeight=0.25 PerfScore 2.25
G_M64856_IG21:
       or       r8d, ecx
       jne      G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.15
G_M64856_IG22:
       xor      r9, r9
       xor      r10d, r10d
       jmp      SHORT G_M64856_IG25
						;; bbWeight=0.25 PerfScore 0.63
G_M64856_IG23:
       mov      r9d, r8d
       mov      r10d, ecx
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.48
G_M64856_IG24:
       add      rax, 16
       movsxd   r9, r8d
       add      r9, rax
       mov      r10d, ecx
						;; bbWeight=0.25 PerfScore 0.25
G_M64856_IG25:
       cmp      edx, r10d
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG26:
       sub      r10d, edx
       movsxd   rcx, edx
       add      rcx, r9
       cmp      r10d, 2
       jl       G_M64856_IG111
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG27:
       movzx    r12, word  ptr [rcx]
       test     r12d, r12d
       jne      SHORT G_M64856_IG29
						;; bbWeight=0.25 PerfScore 0.81
G_M64856_IG28:
       xor      rdx, rdx
       jmp      SHORT G_M64856_IG30
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG29:
       add      r12d, esi
       jo       G_M64856_IG109
       mov      rcx, 0xD1FFAB1E
       call     CORINFO_HELP_NEWSFAST
       mov      r13, rax
       mov      rcx, r13
       mov      rdx, rdi
       mov      r8d, r12d
       call     structReader_9d29c2085631401ab02b8d73f7d9dbc6`1:.ctor(Wrapper,int):this
       mov      rdx, r13
						;; bbWeight=0.50 PerfScore 2.38
G_M64856_IG30:
       lea      rcx, bword ptr [rbx+32]
       call     CORINFO_HELP_ASSIGN_REF
       cmp      r15d, 1
       jge      SHORT G_M64856_IG32
						;; bbWeight=1    PerfScore 2.75
G_M64856_IG31:
       xor      eax, eax
       jmp      G_M64856_IG49
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG32:
       mov      eax, r14d
       add      eax, 6
       jo       G_M64856_IG109
       mov      rdx, rbp
       mov      rcx, gword ptr [rdx]
       mov      r8, rcx
       mov      r9d, dword ptr [rdx+8]
       mov      r10d, r9d
       mov      edx, dword ptr [rdx+12]
       mov      r11d, edx
       test     r8, r8
       jne      SHORT G_M64856_IG35
						;; bbWeight=0.25 PerfScore 2.44
G_M64856_IG33:
       or       r10d, r11d
       jne      G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.15
G_M64856_IG34:
       xor      r10, r10
       xor      r12d, r12d
       jmp      SHORT G_M64856_IG37
						;; bbWeight=0.25 PerfScore 0.63
G_M64856_IG35:
       mov      r12d, r10d
       mov      r13d, r11d
       add      r12, r13
       mov      r13d, dword ptr [r8+8]
       cmp      r12, r13
       ja       G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.48
G_M64856_IG36:
       add      r8, 16
       movsxd   r10, r10d
       add      r10, r8
       mov      r12d, r11d
						;; bbWeight=0.25 PerfScore 0.25
G_M64856_IG37:
       cmp      eax, r12d
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG38:
       sub      r12d, eax
       movsxd   rax, eax
       add      rax, r10
       cmp      r12d, 2
       jl       G_M64856_IG111
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG39:
       movzx    r8, word  ptr [rax]
       test     r8d, r8d
       jne      SHORT G_M64856_IG41
						;; bbWeight=0.25 PerfScore 0.81
G_M64856_IG40:
       xor      eax, eax
       jmp      SHORT G_M64856_IG49
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG41:
       add      r8d, esi
       jo       G_M64856_IG109
       test     rcx, rcx
       jne      SHORT G_M64856_IG44
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG42:
       or       r9d, edx
       jne      G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG43:
       xor      rax, rax
       xor      r10d, r10d
       jmp      SHORT G_M64856_IG46
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG44:
       mov      eax, r9d
       mov      r10d, edx
       add      rax, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      rax, r10
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 1.00
G_M64856_IG45:
       add      rcx, 16
       movsxd   rax, r9d
       add      rax, rcx
       mov      r10d, edx
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG46:
       cmp      r8d, r10d
       ja       G_M64856_IG110
						;; bbWeight=0.50 PerfScore 0.63
G_M64856_IG47:
       sub      r10d, r8d
       movsxd   rdx, r8d
       add      rax, rdx
       cmp      r10d, 4
       jl       G_M64856_IG111
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG48:
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG49:
       mov      dword ptr [rbx+28], eax
       cmp      r15d, 2
       jge      SHORT G_M64856_IG51
						;; bbWeight=1    PerfScore 2.25
G_M64856_IG50:
       xor      eax, eax
       jmp      G_M64856_IG68
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG51:
       mov      eax, r14d
       add      eax, 8
       jo       G_M64856_IG109
       mov      rdx, rbp
       mov      rcx, gword ptr [rdx]
       mov      r8, rcx
       mov      r9d, dword ptr [rdx+8]
       mov      r10d, r9d
       mov      edx, dword ptr [rdx+12]
       mov      r11d, edx
       test     r8, r8
       jne      SHORT G_M64856_IG54
						;; bbWeight=0.25 PerfScore 2.44
G_M64856_IG52:
       or       r10d, r11d
       jne      G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.15
G_M64856_IG53:
       xor      r10, r10
       xor      r12d, r12d
       jmp      SHORT G_M64856_IG56
						;; bbWeight=0.25 PerfScore 0.63
G_M64856_IG54:
       mov      r12d, r10d
       mov      r13d, r11d
       add      r12, r13
       mov      r13d, dword ptr [r8+8]
       cmp      r12, r13
       ja       G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.48
G_M64856_IG55:
       add      r8, 16
       movsxd   r10, r10d
       add      r10, r8
       mov      r12d, r11d
						;; bbWeight=0.25 PerfScore 0.25
G_M64856_IG56:
       cmp      eax, r12d
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG57:
       sub      r12d, eax
       movsxd   rax, eax
       add      rax, r10
       cmp      r12d, 2
       jl       G_M64856_IG111
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG58:
       movzx    r8, word  ptr [rax]
       test     r8d, r8d
       jne      SHORT G_M64856_IG60
						;; bbWeight=0.25 PerfScore 0.81
G_M64856_IG59:
       xor      eax, eax
       jmp      SHORT G_M64856_IG68
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG60:
       add      r8d, esi
       jo       G_M64856_IG109
       test     rcx, rcx
       jne      SHORT G_M64856_IG63
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG61:
       or       r9d, edx
       jne      G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG62:
       xor      rax, rax
       xor      r10d, r10d
       jmp      SHORT G_M64856_IG65
						;; bbWeight=0.50 PerfScore 1.25
G_M64856_IG63:
       mov      eax, r9d
       mov      r10d, edx
       add      rax, r10
       mov      r10d, dword ptr [rcx+8]
       cmp      rax, r10
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 1.00
G_M64856_IG64:
       add      rcx, 16
       movsxd   rax, r9d
       add      rax, rcx
       mov      r10d, edx
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG65:
       cmp      r8d, r10d
       ja       G_M64856_IG110
						;; bbWeight=0.50 PerfScore 0.63
G_M64856_IG66:
       sub      r10d, r8d
       movsxd   rdx, r8d
       add      rax, rdx
       cmp      r10d, 4
       jl       G_M64856_IG111
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG67:
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG68:
       mov      dword ptr [rbx+40], eax
       cmp      r15d, 3
       jge      SHORT G_M64856_IG70
						;; bbWeight=1    PerfScore 2.25
G_M64856_IG69:
       xor      eax, eax
       jmp      G_M64856_IG107
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG70:
       add      r14d, 10
       jo       G_M64856_IG109
       mov      rax, gword ptr [rbp]
       mov      edx, dword ptr [rbp+8]
       mov      ecx, dword ptr [rbp+12]
       test     rax, rax
       jne      SHORT G_M64856_IG73
						;; bbWeight=0.25 PerfScore 2.13
G_M64856_IG71:
       or       edx, ecx
       jne      G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.15
G_M64856_IG72:
       xor      r8, r8
       xor      r9d, r9d
       jmp      SHORT G_M64856_IG75
						;; bbWeight=0.25 PerfScore 0.63
G_M64856_IG73:
       mov      r8d, edx
       mov      r9d, ecx
       add      r8, r9
       mov      r9d, dword ptr [rax+8]
       cmp      r8, r9
       ja       G_M64856_IG110
						;; bbWeight=0.12 PerfScore 0.48
G_M64856_IG74:
       add      rax, 16
       movsxd   r8, edx
       add      r8, rax
       mov      r9d, ecx
						;; bbWeight=0.25 PerfScore 0.25
G_M64856_IG75:
       cmp      r14d, r9d
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG76:
       sub      r9d, r14d
       movsxd   rax, r14d
       add      rax, r8
       mov      bword ptr [rsp+130H], rax
       mov      rax, bword ptr [rsp+130H]
       lea      rdx, bword ptr [rsp+120H]
       mov      bword ptr [rdx], rax
       mov      dword ptr [rdx+8], r9d
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+110H], xmm0
       mov      rax, bword ptr [rsp+120H]
       mov      edx, dword ptr [rsp+128H]
       mov      bword ptr [rsp+108H], rax
						;; bbWeight=0.25 PerfScore 2.40
G_M64856_IG77:
       mov      rax, qword ptr [rsp+108H]
       mov      qword ptr [rsp+110H], rax
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG78:
       mov      dword ptr [rsp+118H], edx
       lea      rax, bword ptr [rsp+110H]
       mov      rdx, bword ptr [rax]
       mov      eax, dword ptr [rax+8]
       lea      rcx, bword ptr [rsp+F8H]
       mov      bword ptr [rcx], rdx
       mov      dword ptr [rcx+8], eax
						;; bbWeight=0.25 PerfScore 2.00
G_M64856_IG79:
       vmovdqu  xmm0, xmmword ptr [rsp+F8H]
       vmovdqu  xmmword ptr [rsp+E8H], xmm0
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG80:
       vmovdqu  xmm0, xmmword ptr [rsp+E8H]
       vmovdqu  xmmword ptr [rsp+D8H], xmm0
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG81:
       cmp      dword ptr [rsp+E0H], 2
       jl       G_M64856_IG111
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG82:
       vmovdqu  xmm0, xmmword ptr [rsp+D8H]
       vmovdqu  xmmword ptr [rsp+C8H], xmm0
						;; bbWeight=0.25 PerfScore 0.50
G_M64856_IG83:
       mov      rax, bword ptr [rsp+C8H]
       movzx    rdx, word  ptr [rax]
       test     edx, edx
       jne      SHORT G_M64856_IG85
						;; bbWeight=0.25 PerfScore 1.06
G_M64856_IG84:
       xor      eax, eax
       jmp      G_M64856_IG107
						;; bbWeight=0.50 PerfScore 1.13
G_M64856_IG85:
       add      edx, esi
       jo       G_M64856_IG109
       mov      gword ptr [rsp+C0H], rdi
       mov      rax, gword ptr [rsp+C0H]
						;; bbWeight=0.50 PerfScore 1.63
G_M64856_IG86:
       vmovdqu  xmm0, xmmword ptr [rax+16]
       vmovdqu  xmmword ptr [rsp+A0H], xmm0
						;; bbWeight=0.50 PerfScore 1.50
G_M64856_IG87:
       mov      rax, gword ptr [rsp+A0H]
       mov      ecx, dword ptr [rsp+A8H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+90H], xmm0
       mov      r8d, dword ptr [rsp+ACH]
       test     rax, rax
       jne      SHORT G_M64856_IG90
						;; bbWeight=0.50 PerfScore 2.79
G_M64856_IG88:
       or       ecx, r8d
       jne      G_M64856_IG110
						;; bbWeight=0.25 PerfScore 0.31
G_M64856_IG89:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+90H], xmm0
       jmp      SHORT G_M64856_IG94
						;; bbWeight=0.50 PerfScore 1.67
G_M64856_IG90:
       mov      r9d, ecx
       mov      r10d, r8d
       add      r9, r10
       mov      r10d, dword ptr [rax+8]
       cmp      r9, r10
       ja       G_M64856_IG110
						;; bbWeight=0.25 PerfScore 1.00
G_M64856_IG91:
       cmp      dword ptr [rax], eax
       add      rax, 16
       movsxd   rcx, ecx
       add      rax, rcx
       mov      bword ptr [rsp+88H], rax
						;; bbWeight=0.50 PerfScore 1.88
G_M64856_IG92:
       mov      rax, qword ptr [rsp+88H]
       mov      qword ptr [rsp+90H], rax
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG93:
       mov      dword ptr [rsp+98H], r8d
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG94:
       vmovdqu  xmm0, xmmword ptr [rsp+90H]
       vmovdqu  xmmword ptr [rsp+B0H], xmm0
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG95:
       cmp      edx, dword ptr [rsp+B8H]
       ja       G_M64856_IG110
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG96:
       mov      rax, bword ptr [rsp+B0H]
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+78H], xmm0
       mov      ecx, dword ptr [rsp+B8H]
       sub      ecx, edx
       movsxd   rdx, edx
       add      rax, rdx
       mov      bword ptr [rsp+70H], rax
						;; bbWeight=0.50 PerfScore 2.54
G_M64856_IG97:
       mov      rax, qword ptr [rsp+70H]
       mov      qword ptr [rsp+78H], rax
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG98:
       mov      dword ptr [rsp+80H], ecx
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG99:
       vmovdqu  xmm0, xmmword ptr [rsp+78H]
       vmovdqu  xmmword ptr [rsp+60H], xmm0
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG100:
       vxorps   xmm0, xmm0
       vmovdqu  xmmword ptr [rsp+50H], xmm0
       mov      rax, bword ptr [rsp+60H]
       mov      edx, dword ptr [rsp+68H]
       mov      bword ptr [rsp+48H], rax
						;; bbWeight=0.50 PerfScore 2.17
G_M64856_IG101:
       mov      rax, qword ptr [rsp+48H]
       mov      qword ptr [rsp+50H], rax
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG102:
       mov      dword ptr [rsp+58H], edx
						;; bbWeight=0.50 PerfScore 0.50
G_M64856_IG103:
       vmovdqu  xmm0, xmmword ptr [rsp+50H]
       vmovdqu  xmmword ptr [rsp+38H], xmm0
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG104:
       cmp      dword ptr [rsp+40H], 4
       jl       SHORT G_M64856_IG111
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG105:
       vmovdqu  xmm0, xmmword ptr [rsp+38H]
       vmovdqu  xmmword ptr [rsp+28H], xmm0
						;; bbWeight=0.50 PerfScore 1.00
G_M64856_IG106:
       mov      rax, bword ptr [rsp+28H]
       mov      eax, dword ptr [rax]
						;; bbWeight=0.50 PerfScore 1.50
G_M64856_IG107:
       mov      dword ptr [rbx+44], eax
						;; bbWeight=1    PerfScore 1.00
G_M64856_IG108:
       add      rsp, 312
       pop      rbx
       pop      rbp
       pop      rsi
       pop      rdi
       pop      r12
       pop      r13
       pop      r14
       pop      r15
       ret      
						;; bbWeight=1    PerfScore 5.25
G_M64856_IG109:
       call     CORINFO_HELP_OVERFLOW
						;; bbWeight=0    PerfScore 0.00
G_M64856_IG110:
       call     ThrowHelper:ThrowArgumentOutOfRangeException()
       int3     
						;; bbWeight=0    PerfScore 0.00
G_M64856_IG111:
       mov      ecx, 40
       call     ThrowHelper:ThrowArgumentOutOfRangeException(int)
       int3     
						;; bbWeight=0    PerfScore 0.00

; Total bytes of code 1716, prolog size 90, PerfScore 322.55, (MethodHash=eebd02a7) for method tableReader_65fc2217d4434338b372e5b3d2cf2667`1:.ctor(Wrapper,int):this
; ============================================================

; Assembly listing for method ScalarTable:.ctor(FlatBufferDeserializationContext):this
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-1 compilation
; optimized code
; rsp based frame
; partially interruptible
; Final local variable assignments
;
;* V00 this         [V00    ] (  0,  0   )     ref  ->  zero-ref    this class-hnd
;* V01 arg1         [V01    ] (  0,  0   )     ref  ->  zero-ref    class-hnd
;# V02 OutArgs      [V02    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]   "OutgoingArgSpace"
;
; Lcl frame size = 0

G_M5158_IG01:
						;; bbWeight=1    PerfScore 0.00
G_M5158_IG02:
       ret      
						;; bbWeight=1    PerfScore 1.00

; Total bytes of code 1, prolog size 0, PerfScore 1.10, (MethodHash=95d6ebd9) for method ScalarTable:.ctor(FlatBufferDeserializationContext):this
; ============================================================

